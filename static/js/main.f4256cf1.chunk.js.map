{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","IconBox","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isVisible","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mt","textAlign","dangerouslySetInnerHTML","__html","children","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_callee","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","initContract","abi","contractInfo","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args7","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","_ref4","protocol","protocolConfig","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","tokensToMigrate","totalBalanceConverted","_ref15","_ref17$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_x9","_ref19","_ref20","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","_x10","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args11","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_callee13","_args13","_context13","idleTokensBalance","getFirstDepositTx","_callee14","deposits","_args14","_context14","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee15","firstDepositTxs","_args15","_context15","reduce","acc","getTrancheUserTransactionsEvents","_ref26","_callee16","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref27","_ref28","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","trancheToken_received","trancheToken_sent","_context16","CDO","getContractEvents","_x11","_x12","_x13","_ref29","_callee17","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args17","_context17","endpoints","makeEtherscanApiRequest","result","some","getTrancheGaugeConfig","trancheTokenAddresses","trancheType","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","isTrancheReceived","isTrancheSent","returnValues","_x14","getEtherscanTokenTransfers","_ref30","_callee18","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args18","_context18","_x15","_x16","getTrancheStakingRewardsDistributions","_ref31","_callee20","stakingDistributions","_context20","_ref32","_callee19","transfers","_context19","_x19","_x17","_x18","getTrancheHarvests","_ref33","_callee22","_ref34","_ref35","stakingRewardsDistributions","autoFarming","harvestsList","_context22","_ref36","_callee21","_context21","_x22","_x20","_x21","loadTrancheStrategyContract","_ref37","_callee23","strategyConfig","idleStrategyAddress","_context23","Strategy","genericContractCallCachedTTL","_x23","getTrancheLastHarvest","_ref38","_callee24","harvestEnabled","startBlock","latestHarvestBlock","totalAmount","_context24","_x24","_x25","getGovTokenApr","_ref39","_callee25","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref40","_ref41","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context25","getTokenConfig","_address","apr2apy","apr","apy","_x26","_x27","_x28","_x29","getTrancheRewardTokensInfo","_ref42","_callee27","tokensDistribution","_context27","_ref43","_callee26","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref44","_ref45","prevHarvest","_latestHarvest","firstBlock","_ref46","_ref47","poolSize","elapsedBlocks","elapsedSeconds","_context26","rewardsRate","now","genericContractCallCached","getBlockInfo","_x32","_x30","_x31","_ref48","_callee29","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args29","_context29","_ref49","_callee28","trancheTokenTransferEvent","_ref50","_ref51","blockInfo","tokenConversionRate","_context28","_x35","tokenTransferEvent","trancheTokenAmount","hashKey","trancheTokens","_x33","_x34","getTrancheUserTransactions","_ref52","_callee30","_context30","_x36","_x37","_x38","getTrancheFirstDepositTx","_ref53","_callee31","_context31","_x39","_x40","_x41","getAmountDepositedTranche","_ref54","_callee32","_context32","_x42","_x43","_x44","_ref55","_callee33","_ref56","_ref57","userAvgPrice","_context33","_x45","_x46","getAmountLent","_callee34","amountLents","_args34","_context34","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee40","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref60","_ref61","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args40","_context40","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref62","_callee35","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context35","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x47","_ref63","_callee36","_context36","_x48","match","_ref64","_callee37","_context37","_x49","_ref65","_callee38","_context38","_x50","items","to_address","_ref66","_callee39","polygonTx","erc20RootToken","_context39","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x51","getPolygonBaseTxs","_callee41","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args41","_context41","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee42","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args42","_context42","filterEthereumTxs","_callee43","_args43","_context43","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee44","resultData","allAvailableTokens","_args44","_context44","processStoredTxs","_callee45","contractInstance","_context45","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","t1","checkPolygonTransactionIncluded","_ref72","_callee46","_ref73","_ref74","_context46","getTransactionReceipt","_x52","_ref75","_callee47","_args47","_context47","_x53","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref76","_callee48","processTransactions","idleTokensAddresses","_args48","_context48","mappedTx","_x54","_x55","filterEtherscanTxs","_ref77","_callee49","processTxs","_args49","_context49","_x56","_ref78","_callee50","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args50","_context50","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x57","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref79","_callee55","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args55","_context55","baseTokenConfig","baseTokenAddress","_ref80","_callee54","minedTxs","_context54","_ref81","_callee53","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context53","getCurveTokenPrice","_ref82","_callee51","_context51","_x62","_x63","baseTokensConfig","t2","_ref83","_callee52","_context52","_x64","_x65","_x60","_x61","_x59","_x58","_ref84","_callee61","txsToProcess","_args61","_context61","_ref85","_callee60","_context60","_ref86","_callee59","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context59","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref87","_callee56","_context56","_x70","_x71","_ref88","_callee57","_context57","_x72","_x73","oldContract","events","raw","_ref89","_callee58","_context58","_x74","_x75","decodeLog","_token","_x68","_x69","_x67","_x66","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref90","_callee62","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args62","_context62","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x76","getBestTranche","_callee63","maxApy","trancheStrategyConfig","_args63","_context63","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref92","_callee64","error_callback","config","_args64","_context64","post","catch","_x77","_ref93","_callee65","_args65","_context65","_x78","_ref94","_callee66","apiKeyIndex","apiKey","_args66","_context66","_x79","_ref95","_callee67","return_data","_args67","_context67","_x80","makeCachedPostRequest","_ref96","_callee68","_args68","_context68","_x81","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee69","page","googlePageviewInfo","isOrigin","_args69","_context69","ga","_ref98","_callee71","googleEventsInfo","debugEnabled","originOk","_args71","_context71","analytics","google","addPostfixForTestnet","_ref99","_callee70","_context70","hitCallback","hitCallbackFail","_x83","_x84","_x82","createContract","_ref100","_callee72","_context72","_x85","_x86","_x87","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee75","activeOnly","whitelist","proposals","validProposals","_args75","_context75","addr","_ref102","_callee74","checkedStrategies","_context74","end","author","snapshot","strategies","_ref103","_callee73","tokenContract","_context73","_x89","_x88","getAprsFromApi","_callee76","endpointInfo","aprs","_args76","_context76","_ref105","_callee77","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args77","_context77","_x90","getTokenExchangeRate","_ref106","_callee78","exchangeRateParams","exchangeRate","_context78","_x91","_x92","getTokenDecimals","_ref107","_callee79","_context79","_x93","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee80","idleTokenConfig","feeDistributorConfig","_context80","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee81","contractPaused","_args81","_context81","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref110","_callee83","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context83","lastAllocationsPromise","_ref111","_callee82","lastAllocations","_context82","_x95","_x96","alloc","_x94","_ref112","_callee84","oldContractBalance","oldContractTokenDecimals","oldContractName","_context84","_x97","_x98","_ref113","_callee85","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args85","_context85","getBlockNumber","getContractPastEvents","callEvents","_x99","_x100","_ref114","_callee86","_args86","_context86","getPastEvents","_x101","_x102","estimateMethodGasUsage","_ref115","_callee87","methodParams","_contract$methods","functionCall","gasLimit","_ref116","_ref117","_args87","_context87","getGasPrice","estimateGas","_x103","_x104","_ref118","_callee88","userAddress","signedParameters","callback_receipt","_contract$methods2","_context88","on","once","confirmationNumber","receipt","_x105","_x106","_x107","_x108","_x109","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref119","_callee89","biconomyInfo","res","_context89","limits","apiId","headers","x-api-key","_x110","sendTxWithPermit","_ref120","_callee90","_contract$methods3","messageToSign","_this$getSignaturePar","_context90","encodeABI","personal","sign","_x111","_x112","_x113","_x114","_x115","_x116","buildBiconomyErc20ForwarderTx","_ref121","_callee91","permitType","callData","buildParams","_context91","txGas","erc20ForwarderClient","buildTx","_x117","_x118","_x119","_x120","_x121","_ref122","_callee93","_context93","_ref123","_callee92","_context92","_x123","_x124","_x122","sendBiconomyTxWithErc20Forwarder","_ref124","_callee94","req","metaInfo","txResponse","fetchReceiptIntervalId","_context94","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x125","_x126","_x127","_x128","sendBiconomyTxWithPersonalSign","_ref125","_callee95","_this$getSignaturePar2","_context95","getNonce","_x129","_x130","_x131","_x132","signPermitEIP2612","_ref126","_callee96","erc20Name","owner","spender","deadline","domain","permit","domainData","_context96","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x133","_x134","_x135","_x136","_x137","_x138","_x139","_x140","signPermit","_ref127","_callee97","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args97","_context97","net","getId","nonceMethod","round","pow","allowed","response","_x141","_x142","_x143","_ref128","_callee98","permitParams","methodAbi","useNonce","_args98","_context98","_jsonInterface","f","unshift","_x144","_x145","_x146","_x147","_x148","_x149","_x150","sendSignedTx","_ref129","_callee99","MetaTransaction","dataToSign","_context99","_x151","_x152","_x153","_x154","_x155","checkTokenApproved","_ref130","_callee100","contractAddr","_ref131","_ref132","allowance","_context100","getAllowance","gte","_x156","_x157","_x158","_ref133","_callee101","_context101","_x159","_x160","_x161","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee103","highestValue","_args103","_context103","lendRates","aprInfo","tokenAPR","_ref135","_callee102","_context102","_x162","_ref136","_callee104","_args104","_context104","_x163","_x164","calculateGaugeBoost","_ref137","_callee105","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args105","_context105","workingBalance","getTokenTotalSupply","workingSupply","_x165","_x166","g","underlyingToken","getGaugeWeight","_ref138","_callee106","lastGaugeTimestamp","gaugeWeight","_context106","_x167","getGaugeAbsoluteWeight","_ref139","_callee107","_ref140","_ref141","totalWeight","_context107","_x168","getGaugeNextWeight","_ref142","_callee108","nextGaugeTimestamp","_context108","_x169","getGaugeRewardsTokens","_ref143","_callee109","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndex","rewardTokenAddress","_ref144","_ref145","rewardData","rewardTokenBalance","cdoConfig","_ref146","_ref147","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_args109","_context109","rate","maxRewards","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","AA","_x170","_ref148","_callee111","_args111","_context111","_ref149","_callee110","tokenGlobalConfig","stakingRewardsContract","_context110","_x173","_x171","_x172","_ref150","_callee112","field","addGovTokens","_args112","_context112","loadTrancheField","_x174","_x175","_x176","_x177","_x178","_x179","_x180","_x181","_ref151","_callee113","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref152","_ref153","totalSupply","virtualPrice","_ref154","_ref155","gaugeBalance","lastPrice1","staked1","totalStaked","_ref156","_ref157","deposited1","lastPrice","_ref158","_ref159","redeemable1","staked2","_ref160","_ref161","earningsStart","trancheApy2","deposited3","earningsEnd","_ref162","_ref163","trancheFee","earningsCounter","feesEnd","feesStart","_ref164","_ref165","deposited4","redeemable3","_ref166","_ref167","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref168","_ref169","_ref170","_ref171","earningsPerc","secondsFromFirstTx","_ref172","_ref173","seniorPool","juniorPool","coverage","strategyApr","_ref174","_ref175","_ref176","_ref177","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args113","_context113","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x182","_x183","_x184","_x185","_x186","_x187","_x188","loadAssetField","_ref178","_callee114","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref179","_ref180","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref181","_ref182","amountLentCurve1","redeemableBalanceCurve","_ref183","_ref184","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref185","_ref186","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref187","_ref188","tokenPriceFirstDeposit","_ref189","_ref190","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref191","_ref192","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref193","_ref194","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref195","_ref196","amountLentCurve2","redeemableBalanceCurve1","_ref197","_ref198","redeemableBalance2","_args114","_context114","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x189","_x190","_x191","_x192","getIdleTokenSupply","_ref199","_callee115","idleTokenSupply","_args115","_context115","_x193","getIdleTokenPriceWithFee","_ref200","_callee116","_ref201","_ref202","fee","priceWFee","_args116","_context116","eq","_x194","_x195","_ref203","_callee117","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args117","_context117","_x196","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref204","_callee118","_ref205","_ref206","idleTokensTotalSupply","userShare","_context118","_x197","_x198","openWindow","open","getActiveCoverages","_callee120","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args120","_context120","coverages","_ref208","_callee119","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context119","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x199","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref209","_callee122","incidentsInfo","_ref210","_ref211","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context122","directProps","buyer","_ref212","_callee121","cover","coverId","claimSubmittedEvent","_ref213","_ref214","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref215","_ref216","_context121","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x201","_x200","getBatchedDepositExecutions","_ref217","_callee123","_context123","_x202","getBatchedDeposits","_callee125","filter_by_status","batchDepositConfig","batchedDeposits","_args125","_context125","_ref219","_callee124","currBatchIndex","batchIndex","_ref220","_ref221","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context124","_x203","getETHBalance","_ref222","_callee126","fixDecimals","_args126","_context126","_x204","_ref223","_callee127","_ref224","_ref225","_args127","_context127","ERC20","_x205","_x206","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref226","_callee128","_args128","_context128","_x207","_ref227","_callee129","_args129","_context129","_x208","_ref228","_callee130","_args130","_context130","_x209","_x210","getProtocolBalance","_ref229","_callee131","_context131","_x211","_x212","getAprs","_ref230","_callee132","_context132","addresses","_x213","genericIdleCall","_ref231","_callee133","callParams","_args133","_context133","_x214","_ref232","_callee134","_contract$methods4","_args134","_context134","_x215","_x216","_ref233","_callee136","_args136","_context136","_ref234","_callee135","_context135","_x218","_x219","_x217","getTxDecodedLogs","_ref235","_callee138","logAddr","decodeLogs","internalTransfers","_context138","_ref236","_callee137","_context137","_x224","_x225","_x220","_x221","_x222","_x223","blocksToSeconds","blocks","blocksPerSeconds","_callee139","_context139","_callee140","blockInfoToSave","_args140","_context140","getBlock","genericContractCallCachedTTLNoMulticall","_ref239","_callee141","_args141","_context141","_x226","_x227","_ref240","_callee142","useMultiCall","_args142","_context142","_x228","_x229","_ref241","_callee143","_args143","_context143","_x230","_x231","_ref242","_callee144","_args144","_context144","_x232","_x233","cachedContractCall","_ref243","_callee145","_args145","_context145","_x234","_x235","prepareMulticallData","strip0x","_ref244","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref245","_callee146","decodedParams","_args146","_context146","decodeParameters","returnFields","_x236","testMulticall","_callee147","_context147","_ref247","_callee148","inputTypes","callHash","_args148","_context148","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x237","_x238","_ref248","_callee149","_contract$methods5","_args149","_context149","_x239","_x240","_ref249","_callee150","async","_args150","_context150","_x241","_x242","getUnlentBalance","_ref250","_callee151","unlentBalance","_context151","_x243","_ref251","_callee152","_args152","_context152","_x244","getLastAllocations","_ref252","_callee154","tokenAllocations","_context154","_ref253","_callee153","_context153","_x246","_x247","_x245","_ref254","_callee155","protocolsAprs","_ref255","_ref256","govTokensBalances","_args155","_context155","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x248","getPoolTokenPrice","_ref257","_callee156","protocolContract","_ref258","_ref259","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref260","_ref261","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args156","_context156","_x249","getSushiswapPoolTokenPrice","_ref262","_callee157","_ref263","_ref264","_ref265","_ref266","_context157","getSushiswapConversionRate","_x250","getSushiswapConversionRate_old","_ref267","_callee158","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context158","_x251","_x252","getCustomProtocolConversionRate","_ref268","_callee159","useWETH","invertTokens","routerMethod","underlyingTokenConfig","unires","_args159","_context159","addressForPrice","conversionRateInvertTokens","conversionRouterMethod","_x253","_x254","getQuickswapConversionRate","_ref269","_callee160","_args160","_context160","_x255","_x256","_ref270","_callee161","_args161","_context161","_x257","_x258","_ref271","_callee162","_args162","_context162","_x259","_x260","getCurveDepositedTokens","_ref272","_callee163","idleTokensBalances","remainingCurveTokens","_args163","_context163","_x261","getCurveUnevenTokenAmounts","_ref273","_callee164","amounts","max_burn_amount","unevenAmounts","_context164","getCurveDepositContract","_x262","_x263","_callee165","curveRatesInfo","_args165","_context165","_callee166","_context166","strategyTokens","getCurveAPYContract","_callee167","blocksForPrevTokenPrice","_ref277","_ref278","prevTokenPrice","blocksMultiplier","curveAPR","_context167","getCurveTokenSupply","_callee168","_context168","getCurvePoolContract","_callee169","_args169","_context169","_callee170","_args170","_context170","_ref282","_callee171","_ref283","_ref284","_context171","_x264","_callee172","depositContractInfo","_context172","getCurveZapContract","_callee173","zapContractInfo","_context173","_callee174","poolContractInfo","_context174","getCurveSwapContract","_callee175","migrationContractInfo","_context175","getCurveIdleTokensAmounts","_callee177","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args177","_context177","_ref290","_callee176","coinIndex","curveIdleTokens","_context176","migrationParams","_x265","getCurveTokensAmounts","_callee179","useCoinIndex","_args179","_context179","_ref292","_callee178","_ref293","_ref294","idleTokenPrice","totalTokenSupply","_context178","_x266","getCurveAmounts","_ref295","_callee181","_args181","_context181","_ref296","_callee180","_context180","_x269","_x267","_x268","getCurveTokenAmount","_ref297","_callee182","_args182","_context182","_x270","getCurveSlippage","_ref298","_callee183","uneven_amounts","depositContract","_ref299","_ref300","Sv","_args183","_context183","_x271","_x272","_ref301","_callee184","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref302","_ref303","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args184","_context184","IAaveIncentivesController","emissionPerSecond","_x273","_callee186","_args186","_context186","_ref305","_callee185","_ref306","_ref307","_context185","_x274","getWMaticApr","_ref308","_callee187","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args187","_context187","_x275","_x276","getStkAaveApr","_ref309","_callee188","aaveConversionRate","stkAaveAPR","stkAaveValue","_args188","_context188","_x277","_x278","getCompAPR","_ref310","_callee189","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args189","_context189","_x279","_x280","getCompSpeed","_ref311","_callee190","cTokenAddress","compSpeed","_context190","_x281","_ref312","_callee191","cTokenInfo","compoundAllocationPerc","_ref313","_ref314","cTokenTotalSupply","compoundPoolShare","_args191","_context191","_x282","_callee193","_args193","_context193","_ref316","_callee192","_ref317","_ref318","_context192","_x283","_callee195","_args195","_context195","_ref320","_callee194","_ref321","_ref322","compApr","_context194","_x284","getTokensCsv","_callee198","csv","_context198","prototype","sum","pv","cv","avg","_ref324","_callee197","_context197","_ref325","_callee196","rates","header","rows","aprAvg","scoreAvg","lastRow","_context196","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x286","_x285","_callee200","convertToken","_args200","_context200","_ref327","_callee199","compTokenBalance","_context199","_x287","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref328","_callee202","govTokensUserDistribution","_args202","_context202","_ref329","_callee201","_context201","_x289","_x288","getGovTokensDistributionSpeed","_ref330","_callee204","govTokensDistribution","_args204","_context204","_ref331","_callee203","govSpeed","_context203","_x291","_x290","getGovTokensAprs","_ref332","_callee206","govTokensAprs","_args206","_context206","_ref333","_callee205","_ref334","_ref335","_ref336","_ref337","cTokenConfig","_context205","aprTooltipMode","_x294","_x292","_x293","_callee208","_args208","_context208","_ref339","_callee207","govTokenBalance","fromTokenConfig","_context207","_x295","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee209","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args209","_context209","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref341","_callee211","govTokensAmounts","_context211","getGovTokensUserAmounts","_ref342","_callee210","govTokenIndex","govTokenAddress","_context210","getGovTokenAddessByIndex","_x298","_x299","_x296","_x297","_ref343","_callee212","_context212","_x300","_x301","_ref344","_callee213","_context213","_x302","_x303","_callee216","govTokenConfigForced","_args216","_context216","_ref346","_callee215","_context215","_ref347","_callee214","_context214","_x305","_x306","_x304","getTokenFees","_callee217","_args217","_context217","_callee218","_ref350","_ref351","feePercentage","gain","fees","_args218","_context218","_ref352","_callee219","_args219","_context219","_x307","getTotalTVL","_callee220","tokensTVL","_context220","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee224","_context224","_ref355","_callee223","_context223","_ref356","_callee222","oldTokenTVL","idleTokenName","_ref357","_ref358","oldTokenConfig","_ref362","_ref363","oldTokenPrice","oldTotalSupply","_context222","showAUM","_ref359","_callee221","_ref360","_ref361","govTokenConversionRate","govTokenBalanceConverted","_context221","_x310","oldProtocols","oldProtocol","protocolPos","_x309","_x308","getSubstackLatestFeed","_callee225","idleSubstackFeed","latestFeed","_context225","getTrancheAggregatedStats","_callee229","totalAUM","_args229","_context229","_ref366","_callee228","_context228","_ref367","_callee227","_context227","_ref368","_callee226","_ref369","_ref370","_context226","_x313","_x312","_x311","getAggregatedStats","_callee231","allNetworks","networkIds","callsFailed","tvls","_args231","_context231","_ref372","_callee230","_context230","_x314","getAggregatedStats_chain","_callee236","avgAPR","_args236","_context236","availableStrategiesNetworks","_ref374","_callee235","_context235","_ref375","_callee234","_context234","_ref376","_callee233","tokenAUM","_context233","_ref377","_callee232","_ref378","_ref379","_context232","_x318","_x317","_x316","_x315","getTokenApy","_ref380","_callee237","_context237","_x319","getTokensToMigrate","_callee240","_args240","_context240","_ref382","_callee239","_context239","_ref383","_callee238","_ref384","_context238","_x321","_x320","getProtocolsTokensBalances","_callee242","tokenBalances","minTokenBalance","protocolsTokens","_args242","_context242","_ref386","_callee241","_context241","_x322","getTokenConversionRateField","getTrancheTokenConversionRate","_ref387","_callee243","trancheTokenConfig","trancheTokenConversionRate","_args243","_context243","isPoolToken","conversionRateProtocolContract","_x323","_ref388","_callee244","_args244","_context244","_x324","_x325","_ref389","_callee245","_args245","_context245","_x326","_x327","_x328","getAvgAPYStats","_ref390","_callee246","apiResults","_args246","_context246","_x329","_x330","_ref391","_callee247","statsTokenConfig","ToTokenConfig","_args247","_context247","addressForPriceFrom","conversionRateUseWETH","_x331","_ref392","_callee248","count","_conversionRate","_args248","_context248","_x332","_x333","getTokenScore","_ref393","_callee249","_ref394","_ref395","tokenScore","_context249","protocolScore","getTokenScoreApi","_x334","_x335","_ref396","_callee250","scores","_context250","_x336","_x337","_ref397","_callee251","idleGovTokenShowAPR","idleAPR","_args251","_context251","_x338","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","React","createContext","DashboardCard","isClickable","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","getPermitTransactionParams","getTransactionParams_async","eventValue","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","checkPermit","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","_this8","votingWeight","depositedAmount","withdrawnAmount","_this9","votingPowerPercentage","gaugeAddress","_this10","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","TrancheField","adaptiveYieldSplitEnabled","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","modalAction","selectedTrancheOption","selectedStakeAction","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","selectedActionChanged","selectedStakeActionChanged","isStake","isDeposit","isWithdraw","showReferral","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","then","param3","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aysShort","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","CPOOL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","AGEUR","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","wintermute","clearpool","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyEnabled","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args9","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_19__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","formattedValue","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_16__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_isBigNumber","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_18__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.f4256cf1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    // console.log(this.props.eventData,{\n    //   eventCategory: 'Transaction',\n    //   eventLabel: this.props.methodName,\n    //   eventAction: this.props.contractName,\n    //   ...this.props.eventData\n    // });\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName,\n        ...this.props.eventData\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    // console.log('setProps',props.contracts);\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  initContract = async (contractName,address,abi) => {\n    const contractInfo = await this.props.initContract(contractName, address, abi);\n    const contractFound = this.getContractByName(contractName);\n    if (!contractFound && contractInfo){\n      this.props.contracts.push(contractInfo);\n    }\n    return contractInfo;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits,\n      trancheToken_received,\n      trancheToken_sent\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserTransactionsEvents',account,tokenConfig.token,trancheToken_transfers_in,trancheToken_transfers_out);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    if (trancheToken_received){\n      trancheToken_received.forEach( tx => {\n        tx.type = 'trancheReceived';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_received = [];\n    }\n\n    if (trancheToken_sent){\n      trancheToken_sent.forEach( tx => {\n        tx.type = 'trancheSent';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_sent = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n\n          const gaugeConfig = this.getTrancheGaugeConfig(tokenConfig.protocol,tokenConfig.token);\n\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          const isTrancheReceived = (tx.from.toLowerCase() !== '0x0000000000000000000000000000000000000000' && (!gaugeConfig || tx.from.toLowerCase() !== gaugeConfig.address.toLowerCase())) && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheSent = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && (tx.to.toLowerCase() !== '0x0000000000000000000000000000000000000000' && (!gaugeConfig || tx.to.toLowerCase() !== gaugeConfig.address.toLowerCase()));\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          } else if (isTrancheReceived){\n            type = 'trancheReceived';\n          } else if (isTrancheSent){\n            type = 'trancheSent';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          // console.log('tx',tokenConfig.token,tx.hash,type);\n\n          return isUnderlyingDeposit || isUnderlyingRedeem || isTrancheDeposit || isTrancheRedeem || isTrancheReceived || isTrancheSent;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  loadTrancheStrategyContract = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = strategyConfig.address || await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress){\n      await this.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      return idleStrategyAddress;\n    }\n    return false;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.loadTrancheStrategyContract(tokenConfig);\n\n    if (idleStrategyAddress) {\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n\n      if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n        return null;\n      }\n\n      startBlock = latestHarvestBlock;\n      latestHarvestBlock++;\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem','trancheReceived','trancheSent'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      // const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n      const [\n        blockInfo,\n        tokenConversionRate,\n        tranchePrice\n      ] = await Promise.all([\n        this.getBlockInfo(trancheTokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,trancheTokenTransferEvent.blockNumber),\n        this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address], {}, trancheTokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[trancheTokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tranchePrice,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n\n      const tranchePrice = this.fixTokenDecimals(blocksInfo[trancheTokenTransferEvent.blockNumber].tranchePrice, tokenConfig.decimals);\n\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n      const tokenAmount = tokenTransferEvent ? this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals) : trancheTokenAmount.times(tranchePrice);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      // const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[trancheTokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${trancheTokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: trancheTokenTransferEvent.transactionHash,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n        blockNumber: trancheTokenTransferEvent.blockNumber,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[trancheTokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      // if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      if (['trancheDeposit','trancheReceived'].includes(trancheTokenTransferEvent.type)) {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      // } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      } else if (['trancheRedeem','trancheSent'].includes(trancheTokenTransferEvent.type)) {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        \n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = totalAmountDeposited.gt(0) ? avgBuyPrice.div(totalAmountDeposited) : this.BNify(0);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    if (!permitConfig.nonceMethod || !baseContract.methods[permitConfig.nonceMethod]){\n      return false;\n    }\n\n    // console.log('signPermit',baseContractName,baseContract,baseContract.methods,permitConfig.nonceMethod);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = await baseContract.methods[permitConfig.nonceMethod](holder).call();\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    // console.log('checkTokenApproved', contractName, contractAddr, walletAddr, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim,\n      workingSupply:working_supply\n    };\n  }\n  getTrancheGaugeConfig = (protocol,token) => {\n    return Object.values(this.getGlobalConfig(['tools','gauges','props','availableGauges'])).find( g => g.protocol.toLowerCase() === protocol.toLowerCase() && g.underlyingToken.toLowerCase() === token.toLowerCase() );\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    const currTimestamp = parseInt(Date.now()/1000);\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = currTimestamp;\n    }\n\n    const params = [gaugeConfig.address];\n\n    if (lastGaugeTimestamp<currTimestamp){\n      params.push(lastGaugeTimestamp);\n    }\n\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',params);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      for (let tokenIndex=0; tokenIndex<multiRewardsConfig.maxRewards; tokenIndex++){\n      // await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      };\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.fixTokenDecimals(output, 5);\n        }\n\n        if (this.BNify(output).isNaN()) {\n          output = this.BNify(0);\n        }\n\n        if (formatValue){\n          output = output.times(100)+'%';\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'seniorCoverage':\n        const [\n          seniorPool,\n          juniorPool\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = '0%';\n        if (this.BNify(seniorPool).gt(0) && this.BNify(juniorPool).gt(0)){\n          // output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          // output = '$'+this.abbreviateNumber(juniorPool, decimals, maxPrecision, minPrecision)\n          let coverage = juniorPool.div(seniorPool);\n          \n          if (this.BNify(coverage).isNaN()){\n            coverage = this.BNify(0);\n          }\n\n          if (formatValue){\n            output = '$1 is covered by $'+this.abbreviateNumber(coverage, decimals, maxPrecision, minPrecision)\n          } else {\n            output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          }\n        }\n      break;\n      case 'strategyApr':\n        output = await this.genericContractCallCached(tokenConfig.Strategy.name,'getApr');\n        if (!output){\n          output = 0;\n        }\n        output = this.fixTokenDecimals(output,18);\n        if (formatValue){\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'apyBoost':\n        let strategyApr = 0;\n        [\n          trancheApy,\n          strategyApr\n        ] =  await Promise.all([\n          this.loadTrancheFieldRaw('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('strategyApr', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = this.BNify(trancheApy).div(this.BNify(strategyApr));\n\n        if (formatValue){\n          output = `${output.toFixed(1)}x`;// (${strategyApr.toFixed(2)}%)`;\n        }\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toFixed(0)+\"/\"+(100-output).toFixed(0);\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getTokenConfig(govToken);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  testMulticall = async () => {\n    const calls = [\n      {\"method\":\"tranchePrice(address)\",\"args\":[[\"0x2688fc68c4eac90d9e5e1b94776cf14eade8d877\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x34dcd573c5de4672c8248cd12a99f875ca112ad8\"},\n      {\"method\":\"claimable_tokens(address)\",\"args\":[[\"0xF1363D3D55d9e679cC6aa0a0496fD85BDfCF7464\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x675eC042325535F6e176638Dd2d4994F645502B9\"}\n    ];\n\n    const data = await this.makeMulticall(calls);\n    console.log(data);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (/*tokenConfig.enabled && */tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getTokenConfig(convertToken);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        handleClick={this.props.handleClick}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Approve',\n          eventLabel: tx ? tx.status : null,\n          eventAction: this.props.tokenConfig.token\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log(this.props.eventData,{\n      //   eventCategory: methodName,\n      //   eventValue: inputValue.toFixed(),\n      //   eventAction: this.props.tokenConfig.token,\n      //   ...this.props.eventData\n      // });\n\n      const callback = (tx,error) => {\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        // Send Google Analytics event\n        if (tx){\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: methodName,\n            eventValue: inputValue.toFixed(),\n            eventAction: this.props.tokenConfig.token,\n            ...this.props.eventData\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n        }\n\n        this.setState({\n          txSucceeded,\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n\n        if (txSucceeded){\n          // Reset input\n          this.changeInputValue({\n            target:{\n              value:0\n            }\n          },false);\n          this.setState({\n            showPermitBox:false\n          });\n          // Call upper component callback\n          if (typeof this.props.callback === 'function'){\n            this.props.callback(tx,_amount,params);\n          }\n        }\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    let contractApproved = false;\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      contractApproved = true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      contractApproved = true;\n    }\n      \n    if (!contractApproved){\n      contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    }\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              handleClick={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    eventData:{},\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n      // const protocolConfig = this.functionsUtil.getGlobalConfig(['stats','protocols',gaugeConfig.protocol]);\n\n      const tokenConfig = {};\n      tokenConfig.token = gaugeConfig.underlyingToken;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let eventData = {\n      eventAction:trancheTokenConfig.token\n    };\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Gauge_Vote';\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Deposit';\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Claim';\n\n            switch (this.state.claimToken){\n              case 'additional':\n                eventData.eventLabel = (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? Object.keys(this.state.claimableRewardsTokens).join('_') : 'multi_rewards';\n              break;\n              default:\n              case 'default':\n                eventData.eventLabel = this.props.toolProps.veToken.rewardToken;\n              break;\n            }\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Redeem';\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('eventData',eventData);\n\n    this.setState({\n      canVote,\n      eventData,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                eventData={this.state.eventData}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                eventData={this.state.eventData}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    minPrecision:2,\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'APY Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  },\n                  name:this.props.tokenConfig.adaptiveYieldSplitEnabled ? 'trancheAYS' : 'trancheAPRRatio'\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                {\n                  this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                }\n              </Text>\n              <Flex\n                mt={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    props:{\n                      decimals:2,\n                      minPrecision:2,\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    },\n                    name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    eventData:{},\n    infoText:null,\n    modalApy:null,\n    trancheFee:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    modalAction:'deposited',\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    balanceSelectorInfo:null,\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(this.props.tokenConfig.protocol,this.props.selectedToken);\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      lastHarvest,\n      gaugeStakedBalance,\n      stakedBalance,\n      trancheFee,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      gaugeConfig ? this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheField('trancheFee',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);\n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      trancheFee,\n      canUnstake,\n      gaugeConfig,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      gaugeStakedBalance,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n    let balanceSelectorInfo = null;\n    let eventData = {\n      eventAction:this.props.trancheConfig.token\n    };\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Deposit';\n\n        if (this.state.trancheFee){\n          balanceSelectorInfo = {\n            text:`Performance fee: ${this.state.trancheFee}`,\n            tooltip:this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])\n          }\n        }\n        \n        if (this.state.gaugeConfig && this.state.gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your tranche tokens (${this.state.gaugeConfig.trancheToken.token}) in the Liquidity Gauge and get additional rewards.`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n\n        // Set data for ga custom event\n        eventData.eventCategory = this.functionsUtil.capitalize(this.state.selectedStakeAction);\n\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (this.state.gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Redeem';\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        } else {\n          // Overwrite default action message\n          if (this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0)){\n            infoText = `To withdraw your ${this.props.selectedToken} make sure to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    this.setState({\n      infoBox,\n      infoText,\n      eventData,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams = (amount,selectedPercentage) => {\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice, this.props.tokenConfig.decimals));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              minPrecision:2,\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.tokenConfig.adaptiveYieldSplitEnabled ? 'trancheAYS' : 'trancheAPRRatio'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        {\n                          this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                        }\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              decimals:2,\n                              minPrecision:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'primary'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                  dangerouslySetInnerHTML={{__html:this.props.tokenConfig.description}}\n                                >\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                /*\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) :*/\n                !this.props.tokenConfig.adaptiveYieldSplitEnabled && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To improve the capital efficiency of tranches, the apy ratio will be updated to the new Adaptive Yield Split on Wed July 20th. No action required. Read more in the <a href=\"https://gov.idle.finance/t/adaptive-yield-split-implementation-for-existing-pyts/1019\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Forum Proposal</a>.`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled && !this.state.gaugeConfig\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      {\n                        this.state.stakedBalance.gt(0) ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MonetizationOn'}\n                            />\n                            <Text\n                              mt={1}\n                              mb={3}\n                              fontSize={[2,3]}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                            </Text>\n                            <ExecuteTransaction\n                              params={[]}\n                              {...this.props}\n                              Component={RoundButton}\n                              parentProps={{\n                                width:1,\n                                alignItems:'center',\n                                justifyContent:'center'\n                              }}\n                              componentProps={{\n                                value:'Unstake',\n                                buttonProps:{\n                                  size:'medium',\n                                  width:[1,1/3],\n                                }\n                              }}\n                              action={'Unstake'}\n                              eventData={this.state.eventData}\n                              contractName={this.state.contractInfo.name}\n                              callback={this.transactionSucceeded.bind(this)}\n                              methodName={this.props.trancheConfig.functions.unstake}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MoneyOff'}\n                            />\n                            <Text\n                              mt={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any <strong>{this.state.tokenConfig.label}</strong> to unstake.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`+(this.state.gaugeConfig ? `<br />Stake your tranche tokens in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a> to get additional rewards!` : ``)}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n              // Reset amountLent if below zero\n              if (amountLent.lt(0)){\n                amountLent = this.functionsUtil.BNify(0);\n              }\n            break;\n            default:\n            break;\n          }\n\n          // console.log(tx.action,tx.protocol,tx.token,tokenAmount.toString(),amountLent.toString());\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n         // console.log(token,conversionRateBlocksCalls);\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = tokenConfig ? tokenConfig.decimals : 18;\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n\n                  // console.log(token,trancheTokens.toString(),tranchePrice.toString(),newBalance.toString());\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n\n          // console.log(token,trancheTokenBalance[token][tranche].toString(),lastTx.tranchePrice.toString(),lastTxBalance.toString());\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    // console.log('portfolio',portfolio);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.13],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    eventData:{},\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n\n        let eventData = {};\n        switch (this.state.increaseAction){\n          case 'time':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseTime',\n              eventValue:this.state.lockPeriodInput\n            };\n          break;\n          case 'amount':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseAmount'\n            };\n          break;\n          default:\n          break;\n        }\n\n        // console.log('eventData',eventData);\n\n        this.setState({\n          eventData,\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let eventData = {};\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_Lock',\n          eventLabel:_unlock_time\n        };\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_IncreaseAmount'\n        };\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      eventData\n    });\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // if (newState.increaseAction !== this.state.increaseAction){\n    //   this.setIncreaseAction(newState.increaseAction);\n    // }\n\n    // Select Withdraw if the lock has expired\n    if (['Increase Lock','Lock'].includes(selectedAction) && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                ) : this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          eventData={this.state.eventData}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        eventData={this.state.eventData}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                eventData={{\n                                  eventCategory:'Staking_Withdraw',\n                                  eventAction:this.props.selectedToken\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  eventData={{\n                                    eventCategory:'Staking_Claim',\n                                    eventValue:this.state.claimable.toFixed(8),\n                                    eventAction:this.props.contractInfo.rewardToken\n                                  }}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.claimableAmount) ? this.state.selectedCoverToClaim.claimableAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n        const gaugeWorkingSupply = userBoostInfo.workingSupply;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(this.functionsUtil.BNify(gaugeWorkingSupply).plus(userWorkingBalance));\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        // console.log(gaugeToken,gaugeWeight.toFixed(),userBoostInfo,this.functionsUtil.BNify(userWorkingBalance).toFixed(),this.functionsUtil.BNify(gaugeWorkingSupply).toFixed(),userBoostedShare.toFixed());\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.9\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aysShort: \"This strategy automatically adjusts the yield split between tranches\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: false,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      CPOOL: {\n        decimals: 18,\n        enabled: true,\n        label: 'CPOOL',\n        token: 'CPOOL',\n        color: {\n          hex: '#5F73F4',\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        },\n        address: '0x66761fa41377003622aee3c7675fc7b5c1c2fac5'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: false,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      AGEUR: {\n        decimals: 18,\n        enabled: true,\n        token: 'AGEUR',\n        color: {\n          hex: '#fbcea9',\n          rgb: [251, 206, 169],\n          hsl: ['27', '91%', '82%']\n        },\n        conversionRateField: 'ageurDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      wintermute: {\n        legend: false,\n        enabled: true,\n        label: \"Wintermute\",\n        color: {\n          rgb: [163, 236, 38],\n          hsl: [\"82\", \"84%\", \"54%\"]\n        }\n      },\n      clearpool: {\n        legend: false,\n        enabled: true,\n        label: \"Clearpool\",\n        color: {\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          AGEUR:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'AGEUR',\n            name: \"LiquidityGauge_aa_euler_ageur\",\n            token: \"LiquidityGauge_aa_euler_ageur\",\n            address:'0x8f195979f7af6c500b4688e492d07036c730c1b2',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_AGEUR',\n              token: 'AA_euler_AGEUR',\n              address: '0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n            }\n          },\n          USDC:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDC',\n            name: \"LiquidityGauge_aa_euler_usdc\",\n            token: \"LiquidityGauge_aa_euler_usdc\",\n            address:'0x1cd24f833af78ae877f90569eaec3174d6769995',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDC',\n              token: 'AA_euler_USDC',\n              address: '0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n            }\n          },\n          DAI:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'DAI',\n            name: \"LiquidityGauge_aa_euler_dai\",\n            token: \"LiquidityGauge_aa_euler_dai\",\n            address:'0x57d59d4bbb0e2432f1698f33d4a47b3c7a9754f3',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_DAI',\n              token: 'AA_euler_DAI',\n              address: '0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n            }\n          },\n          USDT:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDT',\n            name: \"LiquidityGauge_aa_euler_usdt\",\n            token: \"LiquidityGauge_aa_euler_usdt\",\n            address:'0x0c3310b0b57b86d376040b755f94a925f39c4320',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDT',\n              token: 'AA_euler_USDT',\n              address: '0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider && this.walletLink){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('connectorNameChanged',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context.active !== this.props.context.active || prevProps.context.connectorName !== this.props.context.connectorName || JSON.stringify(prevProps.context.error) !== JSON.stringify(this.props.context.error) ) {\n      // console.log('contextChanged',this.props.connectorName,this.props.context.connectorName,this.props.context.active,this.props.context.error);\n\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName && setConnectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('connectorNameChanged_2',this.props.context.connectorName,this.props.context.connectorName,this.props.connectorName);\n      setConnectorName = this.props.connectorName;\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n      // this.initWeb3();\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    let useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      useWeb3Provider = false; // Disable web3 provider for Infura\n      context.unsetConnector();\n      // setConnectorName = null;\n    } else if (connectorName !== 'Infura') {\n      const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n      // console.log('initWeb3 connectorNameChanged',connectorName,context.connectorName,setConnectorName,!context.active,connectorNameChanged);\n\n      // Set the connector\n      if (connectorName !== 'ledgerLive'){\n        if (!context.active || connectorNameChanged) {\n          // Select preferred web3 provider\n          if (connectorName && connectorNameChanged){\n\n            if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n              return false;\n            }\n\n            // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n            setConnectorName = connectorName;\n            await context.setConnector(connectorName);\n            // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n            // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n            // return this.initWeb3();\n            return web3;\n          }\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    // Forse enable provider\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const biconomyEnabled = biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()));\n\n    // console.log('initWeb3',initWeb3Index,biconomyEnabled,connectorName,web3,context,web3Provider,'UPDATE',web3 !== this.state.web3);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyEnabled){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            // if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n            //   console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n            //   return false;\n            // }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = (this.state.network.isCorrectNetwork ? this.state.web3 : (networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : this.state.web3Providers[this.state.network.required.id]));\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      await this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks,this.state.web3);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n\n              const strategyConfig = tokenConfig.Strategy;\n              if (strategyConfig.address){\n                contracts.push(this.initContractWithoutSet(tokenConfig.Strategy.name,strategyConfig.address,strategyConfig.abi));\n              }\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import DAI from '../abis/tokens/DAI.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13054628,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield',\n          address:'0x48a48c6694168093A3dEE02E9e8AC5a14169a652'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13575397,\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield',\n          address:'0x73A44027bDAF5D71296d2C73cfb13e561c76a916'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH',\n          address:'0x0cac674ebD77bBD899f6079932768f6d59Da089A'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv',\n          address:'0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv',\n          address:'0x35168324dC1981aDDc3bC915788e200BeDF77865'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV',\n          address:'0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv',\n          address:'0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur',\n          address:'0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv',\n          address:'0x271cE5dED4cCbD28833bddF8a8093517299920f0'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv',\n          address:'0x0198792f2849397908C092b6B57654e1a57a4CDC'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14785127,\n        multiCallDisabled:true,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC',\n          address:'0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961854,\n        multiCallDisabled:true,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_DAI',\n          address:'0x46c1f702a6aad1fd810216a5ff15aab1c62ca826'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_DAI',\n          address:'0xc7F1B9C72B8230E470420A4b69af7c50781A3f44'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_DAI',\n          blockNumber:14961854,\n          token:'AA_euler_DAI',\n          label:'euler DAI AA',\n          address:'0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14961854,\n          name:'BB_euler_DAI',\n          token:'BB_euler_DAI',\n          label:'euler DAI BB',\n          address:'0x6629baA8C7c6a84290Bf9a885825E3540875219D'\n        }\n      },\n      USDT:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDT',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961973,\n        multiCallDisabled:true,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDT',\n          address:'0xD5469DF8CA36E7EaeDB35D428F28E13380eC8ede'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDT',\n          address:'0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDT_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDT',\n          blockNumber:14961973,\n          token:'AA_euler_USDT',\n          label:'euler USDT AA',\n          address:'0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDT_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'BB_euler_USDT',\n          blockNumber:14961973,\n          token:'BB_euler_USDT',\n          label:'euler USDT BB',\n          address:'0xb1EC065abF6783BCCe003B8d6B9f947129504854'\n        }\n      },\n      AGEUR:{\n        abi:ERC20,\n        decimals:18,\n        token:'AGEUR',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:15055915,\n        multiCallDisabled:true,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_AGEUR',\n          address:'0x2398Bc075fa62Ee88d7fAb6A18Cd30bFf869bDa4'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_AGEUR',\n          address:'0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_AGEUR_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_AGEUR',\n          blockNumber:15055915,\n          token:'AA_euler_AGEUR',\n          label:'euler AGEUR AA',\n          address:'0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_AGEUR_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15055915,\n          name:'BB_euler_AGEUR',\n          token:'BB_euler_AGEUR',\n          label:'euler AGEUR BB',\n          address:'0xcf5FD05F72cA777d71FB3e38F296AAD7cE735cB7'\n        }\n      }\n    },\n    clearpool:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        blockNumber:15044679,\n        protocol:'clearpool',\n        autoFarming:['CPOOL'],\n        multiCallDisabled:true,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_USDC',\n          address:'0xDBCEE5AE2E9DAf0F5d93473e08780C9f45DfEb93'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_USDC',\n          address:'0x54ae90be2dee0a960953c724839541e75bb1f471'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xCb288b6d30738db7E3998159d192615769794B5b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_clearpool_USDC',\n          token:'AA_clearpool_USDC',\n          label:'clearpool USDC AA',\n          address:'0xb86264c21418aA75F7c337B1821CcB4Ff4d57673'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_clearpool_USDC',\n          token:'BB_clearpool_USDC',\n          label:'clearpool USDC BB',\n          address:'0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    let formattedValue = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.functionsUtil.BNify(this.state.experimentalBadge).gt(0) && this.functionsUtil.BNify(this.state.experimentalBadge).lte(5000000)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0) && this.functionsUtil.BNify(this.state.statusBadge).lte(5000000)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheAPRSplitRatio':\n        if (this.props.tokenConfig.adaptiveYieldSplitEnabled){\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n            >\n              <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n            </Tooltip>\n          );\n        } else {\n          output = this.state[fieldInfo.name];\n          formattedValue = this.state[fieldInfo.name];\n          if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n            formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n          }\n\n          output = this.state[fieldInfo.name] ? (\n            <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n          ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n        }\n      break;\n      case 'trancheAYS':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n          >\n            <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}