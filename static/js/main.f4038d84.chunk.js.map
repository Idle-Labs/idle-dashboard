{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","IconBox","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isVisible","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mt","textAlign","dangerouslySetInnerHTML","__html","children","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_callee","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheUserTransactionsEvents","_ref25","_callee15","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref26","_ref27","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","_context15","CDO","getContractEvents","_x9","_x10","_ref28","_callee16","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args16","_context16","endpoints","makeEtherscanApiRequest","result","some","trancheTokenAddresses","trancheType","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","returnValues","_x11","getEtherscanTokenTransfers","_ref29","_callee17","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args17","_context17","_x12","_x13","getTrancheStakingRewardsDistributions","_ref30","_callee19","stakingDistributions","_context19","_ref31","_callee18","transfers","_context18","_x16","_x14","_x15","getTrancheHarvests","_ref32","_callee21","_ref33","_ref34","stakingRewardsDistributions","autoFarming","harvestsList","_context21","_ref35","_callee20","_context20","_x19","_x17","_x18","getTrancheLastHarvest","_ref36","_callee22","strategyConfig","harvestEnabled","idleStrategyAddress","startBlock","latestHarvestBlock","totalAmount","_context22","Strategy","genericContractCallCachedTTL","initContract","abi","_x20","_x21","getGovTokenApr","_ref37","_callee23","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref38","_ref39","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context23","getTokenConfig","_address","apr2apy","apr","apy","_x22","_x23","_x24","_x25","getTrancheRewardTokensInfo","_ref40","_callee25","tokensDistribution","_context25","_ref41","_callee24","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref42","_ref43","_firstHarvest","_latestHarvest","firstBlock","_ref44","_ref45","poolSize","elapsedBlocks","elapsedSeconds","_context24","rewardsRate","now","genericContractCallCached","getBlockInfo","total","_x28","_x26","_x27","_ref46","_callee27","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args27","_context27","_ref47","_callee26","trancheTokenTransferEvent","tokenTransferEvent","_ref48","_ref49","blockInfo","tokenConversionRate","_context26","_x31","trancheTokenAmount","hashKey","trancheTokens","_x29","_x30","getTrancheUserTransactions","_ref50","_callee28","_context28","_x32","_x33","_x34","getTrancheFirstDepositTx","_ref51","_callee29","_context29","_x35","_x36","_x37","getAmountDepositedTranche","_ref52","_callee30","_context30","_x38","_x39","_x40","_ref53","_callee31","_ref54","_ref55","userAvgPrice","_context31","_x41","_x42","getAmountLent","_callee32","amountLents","_args32","_context32","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee38","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref58","_ref59","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args38","_context38","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref60","_callee33","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context33","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x43","_ref61","_callee34","_context34","_x44","match","_ref62","_callee35","_context35","_x45","_ref63","_callee36","_context36","_x46","items","to_address","_ref64","_callee37","polygonTx","erc20RootToken","_context37","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x47","getPolygonBaseTxs","_callee39","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args39","_context39","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee40","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args40","_context40","filterEthereumTxs","_callee41","_args41","_context41","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee42","resultData","allAvailableTokens","_args42","_context42","processStoredTxs","_callee43","contractInstance","_context43","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","t1","checkPolygonTransactionIncluded","_ref70","_callee44","_ref71","_ref72","_context44","getTransactionReceipt","_x48","_ref73","_callee45","_args45","_context45","_x49","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref74","_callee46","processTransactions","idleTokensAddresses","_args46","_context46","mappedTx","_x50","_x51","filterEtherscanTxs","_ref75","_callee47","processTxs","_args47","_context47","_x52","_ref76","_callee48","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args48","_context48","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x53","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref77","_callee53","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args53","_context53","baseTokenConfig","baseTokenAddress","_ref78","_callee52","minedTxs","_context52","_ref79","_callee51","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context51","getCurveTokenPrice","_ref80","_callee49","_context49","_x58","_x59","baseTokensConfig","t2","_ref81","_callee50","_context50","_x60","_x61","_x56","_x57","_x55","_x54","_ref82","_callee59","txsToProcess","_args59","_context59","_ref83","_callee58","_context58","_ref84","_callee57","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context57","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref85","_callee54","_context54","_x66","_x67","_ref86","_callee55","_context55","_x68","_x69","oldContract","events","raw","_ref87","_callee56","_context56","_x70","_x71","decodeLog","_token","_x64","_x65","_x63","_x62","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref88","_callee60","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args60","_context60","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x72","getBestTranche","_callee61","maxApy","trancheStrategyConfig","_args61","_context61","availableNetworks","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref90","_callee62","error_callback","config","_args62","_context62","post","catch","_x73","_ref91","_callee63","_args63","_context63","_x74","_ref92","_callee64","apiKeyIndex","apiKey","_args64","_context64","_x75","_ref93","_callee65","return_data","_args65","_context65","_x76","makeCachedPostRequest","_ref94","_callee66","_args66","_context66","_x77","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee67","page","googlePageviewInfo","isOrigin","_args67","_context67","ga","_ref96","_callee69","googleEventsInfo","debugEnabled","originOk","_args69","_context69","analytics","google","addPostfixForTestnet","_ref97","_callee68","_context68","hitCallback","hitCallbackFail","_x79","_x80","_x78","createContract","_ref98","_callee70","_context70","_x81","_x82","_x83","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee73","activeOnly","whitelist","proposals","validProposals","_args73","_context73","addr","_ref100","_callee72","checkedStrategies","_context72","end","author","snapshot","strategies","_ref101","_callee71","tokenContract","_context71","_x85","_x84","getAprsFromApi","_callee74","endpointInfo","aprs","_args74","_context74","_ref103","_callee75","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args75","_context75","_x86","getTokenExchangeRate","_ref104","_callee76","exchangeRateParams","exchangeRate","_context76","_x87","_x88","getTokenDecimals","_ref105","_callee77","_context77","_x89","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee78","idleTokenConfig","feeDistributorConfig","_context78","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee79","contractPaused","_args79","_context79","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref108","_callee81","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context81","lastAllocationsPromise","_ref109","_callee80","lastAllocations","_context80","_x91","_x92","alloc","_x90","_ref110","_callee82","oldContractBalance","oldContractTokenDecimals","oldContractName","_context82","_x93","_x94","_ref111","_callee83","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args83","_context83","getBlockNumber","getContractPastEvents","callEvents","_x95","_x96","_ref112","_callee84","_args84","_context84","getPastEvents","_x97","_x98","estimateMethodGasUsage","_ref113","_callee85","methodParams","_contract$methods","functionCall","gasLimit","_ref114","_ref115","_args85","_context85","getGasPrice","estimateGas","_x99","_x100","_ref116","_callee86","userAddress","signedParameters","callback_receipt","_contract$methods2","_context86","on","once","confirmationNumber","receipt","_x101","_x102","_x103","_x104","_x105","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref117","_callee87","biconomyInfo","res","_context87","limits","apiId","headers","x-api-key","_x106","sendTxWithPermit","_ref118","_callee88","_contract$methods3","messageToSign","_this$getSignaturePar","_context88","encodeABI","personal","sign","_x107","_x108","_x109","_x110","_x111","_x112","buildBiconomyErc20ForwarderTx","_ref119","_callee89","permitType","callData","buildParams","_context89","txGas","erc20ForwarderClient","buildTx","_x113","_x114","_x115","_x116","_x117","_ref120","_callee91","_context91","_ref121","_callee90","_context90","_x119","_x120","_x118","sendBiconomyTxWithErc20Forwarder","_ref122","_callee92","req","metaInfo","txResponse","fetchReceiptIntervalId","_context92","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x121","_x122","_x123","_x124","sendBiconomyTxWithPersonalSign","_ref123","_callee93","_this$getSignaturePar2","_context93","getNonce","_x125","_x126","_x127","_x128","signPermitEIP2612","_ref124","_callee94","erc20Name","owner","spender","deadline","domain","permit","domainData","_context94","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x129","_x130","_x131","_x132","_x133","_x134","_x135","_x136","signPermit","_ref125","_callee95","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args95","_context95","net","getId","round","nonceMethod","pow","allowed","response","_x137","_x138","_x139","_ref126","_callee96","permitParams","methodAbi","useNonce","_args96","_context96","_jsonInterface","f","unshift","_x140","_x141","_x142","_x143","_x144","_x145","_x146","sendSignedTx","_ref127","_callee97","MetaTransaction","dataToSign","_context97","_x147","_x148","_x149","_x150","_x151","checkTokenApproved","_ref128","_callee98","contractAddr","_ref129","_ref130","allowance","_context98","getAllowance","gte","_x152","_x153","_x154","_ref131","_callee99","_context99","_x155","_x156","_x157","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee101","highestValue","_args101","_context101","lendRates","aprInfo","tokenAPR","_ref133","_callee100","_context100","_x158","_ref134","_callee102","_args102","_context102","_x159","_x160","calculateGaugeBoost","_ref135","_callee103","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args103","_context103","workingBalance","getTokenTotalSupply","_x161","_x162","getGaugeWeight","_ref136","_callee104","lastGaugeTimestamp","gaugeWeight","_context104","_x163","getGaugeAbsoluteWeight","_ref137","_callee105","_ref138","_ref139","totalWeight","_context105","_x164","getGaugeNextWeight","_ref140","_callee106","nextGaugeTimestamp","_context106","_x165","getGaugeRewardsTokens","_ref141","_callee108","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args108","_context108","rate","maxRewards","_ref142","_callee107","tokenIndex","rewardTokenAddress","_ref143","_ref144","rewardData","rewardTokenBalance","cdoConfig","_ref145","_ref146","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context107","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x167","_x166","_ref147","_callee110","_args110","_context110","_ref148","_callee109","tokenGlobalConfig","stakingRewardsContract","_context109","_x170","_x168","_x169","_ref149","_callee111","field","addGovTokens","_args111","_context111","loadTrancheField","_x171","_x172","_x173","_x174","_x175","_x176","_x177","_x178","_ref150","_callee112","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref151","_ref152","totalSupply","virtualPrice","_ref153","_ref154","gaugeBalance","lastPrice1","staked1","totalStaked","_ref155","_ref156","deposited1","lastPrice","_ref157","_ref158","redeemable1","staked2","_ref159","_ref160","earningsStart","trancheApy2","deposited3","earningsEnd","_ref161","_ref162","trancheFee","earningsCounter","feesEnd","feesStart","_ref163","_ref164","deposited4","redeemable3","_ref165","_ref166","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref167","_ref168","_ref169","_ref170","earningsPerc","secondsFromFirstTx","_ref171","_ref172","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args112","_context112","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x179","_x180","_x181","_x182","_x183","_x184","_x185","loadAssetField","_ref173","_callee113","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref174","_ref175","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref176","_ref177","amountLentCurve1","redeemableBalanceCurve","_ref178","_ref179","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref180","_ref181","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref182","_ref183","tokenPriceFirstDeposit","_ref184","_ref185","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref186","_ref187","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref188","_ref189","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref190","_ref191","amountLentCurve2","redeemableBalanceCurve1","_ref192","_ref193","redeemableBalance2","_args113","_context113","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x186","_x187","_x188","_x189","getIdleTokenSupply","_ref194","_callee114","idleTokenSupply","_args114","_context114","_x190","getIdleTokenPriceWithFee","_ref195","_callee115","_ref196","_ref197","fee","priceWFee","_args115","_context115","eq","_x191","_x192","_ref198","_callee116","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args116","_context116","_x193","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref199","_callee117","_ref200","_ref201","idleTokensTotalSupply","userShare","_context117","_x194","_x195","openWindow","open","getActiveCoverages","_callee119","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args119","_context119","coverages","_ref203","_callee118","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context118","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x196","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref204","_callee121","incidentsInfo","_ref205","_ref206","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context121","directProps","contractInfo","buyer","_ref207","_callee120","cover","coverId","claimSubmittedEvent","_ref208","_ref209","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref210","_ref211","_context120","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x198","_x197","getBatchedDepositExecutions","_ref212","_callee122","_context122","_x199","getBatchedDeposits","_callee124","filter_by_status","batchDepositConfig","batchedDeposits","_args124","_context124","_ref214","_callee123","currBatchIndex","batchIndex","_ref215","_ref216","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context123","_x200","getETHBalance","_ref217","_callee125","fixDecimals","_args125","_context125","_x201","_ref218","_callee126","_ref219","_ref220","_args126","_context126","ERC20","_x202","_x203","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref221","_callee127","_args127","_context127","_x204","_ref222","_callee128","_args128","_context128","_x205","_ref223","_callee129","_args129","_context129","_x206","_x207","getProtocolBalance","_ref224","_callee130","_context130","_x208","_x209","getAprs","_ref225","_callee131","_context131","addresses","_x210","genericIdleCall","_ref226","_callee132","callParams","_args132","_context132","_x211","_ref227","_callee133","_contract$methods4","_args133","_context133","_x212","_x213","_ref228","_callee135","_args135","_context135","_ref229","_callee134","_context134","_x215","_x216","_x214","getTxDecodedLogs","_ref230","_callee137","logAddr","decodeLogs","internalTransfers","_context137","_ref231","_callee136","_context136","_x221","_x222","_x217","_x218","_x219","_x220","blocksToSeconds","blocks","blocksPerSeconds","_callee138","_context138","_callee139","blockInfoToSave","_args139","_context139","getBlock","genericContractCallCachedTTLNoMulticall","_ref234","_callee140","_args140","_context140","_x223","_x224","_ref235","_callee141","useMultiCall","_args141","_context141","_x225","_x226","_ref236","_callee142","_args142","_context142","_x227","_x228","_ref237","_callee143","_args143","_context143","_x229","_x230","cachedContractCall","_ref238","_callee144","_args144","_context144","_x231","_x232","prepareMulticallData","strip0x","_ref239","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref240","_callee145","decodedParams","_args145","_context145","decodeParameters","returnFields","_x233","testMulticall","_callee146","_context146","_ref242","_callee147","inputTypes","callHash","_args147","_context147","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x234","_x235","_ref243","_callee148","_contract$methods5","_args148","_context148","_x236","_x237","_ref244","_callee149","async","_args149","_context149","_x238","_x239","getUnlentBalance","_ref245","_callee150","unlentBalance","_context150","_x240","_ref246","_callee151","_args151","_context151","_x241","getLastAllocations","_ref247","_callee153","tokenAllocations","_context153","_ref248","_callee152","_context152","_x243","_x244","_x242","_ref249","_callee154","protocolsAprs","_ref250","_ref251","govTokensBalances","_args154","_context154","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x245","getSushiswapPoolTokenPrice","_ref252","_callee155","_ref253","_ref254","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref255","_ref256","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context155","getSushiswapConversionRate","_x246","_ref257","_callee156","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context156","_x247","_x248","_ref258","_callee157","useWETH","uniswapRouterMethod","underlyingTokenConfig","unires","_args157","_context157","addressForPrice","_x249","_x250","getCurveDepositedTokens","_ref259","_callee158","idleTokensBalances","remainingCurveTokens","_args158","_context158","_x251","getCurveUnevenTokenAmounts","_ref260","_callee159","amounts","max_burn_amount","unevenAmounts","_context159","getCurveDepositContract","_x252","_x253","_callee160","curveRatesInfo","_args160","_context160","_callee161","_context161","strategyTokens","getCurveAPYContract","_callee162","blocksForPrevTokenPrice","_ref264","_ref265","prevTokenPrice","blocksMultiplier","curveAPR","_context162","getCurveTokenSupply","_callee163","_context163","getCurvePoolContract","_callee164","_args164","_context164","_callee165","_args165","_context165","_ref269","_callee166","_ref270","_ref271","_context166","_x254","_callee167","depositContractInfo","_context167","getCurveZapContract","_callee168","zapContractInfo","_context168","_callee169","poolContractInfo","_context169","getCurveSwapContract","_callee170","migrationContractInfo","_context170","getCurveIdleTokensAmounts","_callee172","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args172","_context172","_ref277","_callee171","coinIndex","curveIdleTokens","_context171","migrationParams","_x255","getCurveTokensAmounts","_callee174","useCoinIndex","_args174","_context174","_ref279","_callee173","_ref280","_ref281","idleTokenPrice","totalTokenSupply","_context173","_x256","getCurveAmounts","_ref282","_callee176","_args176","_context176","_ref283","_callee175","_context175","_x259","_x257","_x258","getCurveTokenAmount","_ref284","_callee177","_args177","_context177","_x260","getCurveSlippage","_ref285","_callee178","uneven_amounts","depositContract","_ref286","_ref287","Sv","_args178","_context178","_x261","_x262","_ref288","_callee179","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref289","_ref290","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args179","_context179","IAaveIncentivesController","emissionPerSecond","_x263","_callee181","_args181","_context181","_ref292","_callee180","_ref293","_ref294","_context180","_x264","getWMaticApr","_ref295","_callee182","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args182","_context182","_x265","_x266","getStkAaveApr","_ref296","_callee183","aaveConversionRate","stkAaveAPR","stkAaveValue","_args183","_context183","_x267","_x268","getCompAPR","_ref297","_callee184","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args184","_context184","_x269","_x270","getCompSpeed","_ref298","_callee185","cTokenAddress","compSpeed","_context185","_x271","_ref299","_callee186","cTokenInfo","compoundAllocationPerc","_ref300","_ref301","cTokenTotalSupply","compoundPoolShare","_args186","_context186","_x272","_callee188","_args188","_context188","_ref303","_callee187","_ref304","_ref305","_context187","_x273","_callee190","_args190","_context190","_ref307","_callee189","_ref308","_ref309","compApr","_context189","_x274","getTokensCsv","_callee193","csv","_context193","prototype","sum","pv","cv","avg","_ref311","_callee192","_context192","_ref312","_callee191","rates","header","rows","aprAvg","scoreAvg","lastRow","_context191","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x276","_x275","_callee195","convertToken","_args195","_context195","_ref314","_callee194","compTokenBalance","_context194","_x277","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref315","_callee197","govTokensUserDistribution","_args197","_context197","_ref316","_callee196","_context196","_x279","_x278","getGovTokensDistributionSpeed","_ref317","_callee199","govTokensDistribution","_args199","_context199","_ref318","_callee198","govSpeed","_context198","_x281","_x280","getGovTokensAprs","_ref319","_callee201","govTokensAprs","_args201","_context201","_ref320","_callee200","_ref321","_ref322","_ref323","_ref324","cTokenConfig","_context200","aprTooltipMode","_x284","_x282","_x283","_callee203","_args203","_context203","_ref326","_callee202","govTokenBalance","fromTokenConfig","_context202","_x285","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee204","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args204","_context204","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref328","_callee206","govTokensAmounts","_context206","getGovTokensUserAmounts","_ref329","_callee205","govTokenIndex","govTokenAddress","_context205","getGovTokenAddessByIndex","_x288","_x289","_x286","_x287","_ref330","_callee207","_context207","_x290","_x291","_ref331","_callee208","_context208","_x292","_x293","_callee211","govTokenConfigForced","_args211","_context211","_ref333","_callee210","_context210","_ref334","_callee209","_context209","_x295","_x296","_x294","getTokenFees","_callee212","_args212","_context212","_callee213","_ref337","_ref338","feePercentage","gain","fees","_args213","_context213","_ref339","_callee214","_args214","_context214","_x297","getTotalTVL","_callee215","tokensTVL","_context215","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee219","_context219","_ref342","_callee218","_context218","_ref343","_callee217","oldTokenTVL","idleTokenName","_ref344","_ref345","oldTokenConfig","_ref349","_ref350","oldTokenPrice","oldTotalSupply","_context217","showAUM","_ref346","_callee216","_ref347","_ref348","govTokenConversionRate","govTokenBalanceConverted","_context216","_x300","oldProtocols","oldProtocol","protocolPos","_x299","_x298","getSubstackLatestFeed","_callee220","idleSubstackFeed","latestFeed","_context220","getTrancheAggregatedStats","_callee224","totalAUM","_args224","_context224","_ref353","_callee223","_context223","_ref354","_callee222","_context222","_ref355","_callee221","_ref356","_ref357","_context221","_x303","_x302","_x301","getAggregatedStats","_callee226","allNetworks","networkIds","callsFailed","tvls","_args226","_context226","_ref359","_callee225","_context225","_x304","getAggregatedStats_chain","_callee231","avgAPR","_args231","_context231","availableStrategiesNetworks","_ref361","_callee230","_context230","_ref362","_callee229","_context229","_ref363","_callee228","tokenAUM","_context228","_ref364","_callee227","_ref365","_ref366","_context227","_x308","_x307","_x306","_x305","getTokenApy","_ref367","_callee232","_context232","_x309","getTokensToMigrate","_callee235","_args235","_context235","_ref369","_callee234","_context234","_ref370","_callee233","_ref371","_context233","_x311","_x310","getProtocolsTokensBalances","_callee237","tokenBalances","minTokenBalance","protocolsTokens","_args237","_context237","_ref373","_callee236","_context236","_x312","getTokenConversionRateField","_ref374","_callee238","_args238","_context238","_x313","_x314","_ref375","_callee239","_args239","_context239","_x315","_x316","_x317","getAvgAPYStats","_ref376","_callee240","apiResults","_args240","_context240","_x318","_x319","_ref377","_callee241","statsTokenConfig","ToTokenConfig","_args241","_context241","addressForPriceFrom","_x320","_ref378","_callee242","count","_conversionRate","_args242","_context242","_x321","_x322","getTokenScore","_ref379","_callee243","_ref380","_ref381","tokenScore","_context243","protocolScore","getTokenScoreApi","_x323","_x324","_ref382","_callee244","scores","_context244","_x325","_x326","_ref383","_callee245","idleGovTokenShowAPR","idleAPR","_args245","_context245","_x327","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","React","createContext","DashboardCard","isClickable","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","trancheTokenConfig","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","showReferral","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","then","param3","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setNetwork","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this10","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_19__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_16__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_18__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.f4038d84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          return isUnderlyingDeposit || isUnderlyingRedeem || isTrancheDeposit || isTrancheRedeem;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (parseInt(latestHarvestBlock)>0){\n        startBlock = latestHarvestBlock;\n        latestHarvestBlock++;\n      } else {\n        limit = 1;\n        latestHarvestBlock = 'latest';\n      }\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, 18);\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n              polygonTx.exited = false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.props.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim\n    };\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = parseInt(Date.now()/1000);\n    }\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,lastGaugeTimestamp]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  testMulticall = async () => {\n    const calls = [\n      {\"method\":\"tranchePrice(address)\",\"args\":[[\"0x2688fc68c4eac90d9e5e1b94776cf14eade8d877\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x34dcd573c5de4672c8248cd12a99f875ca112ad8\"},\n      {\"method\":\"claimable_tokens(address)\",\"args\":[[\"0xF1363D3D55d9e679cC6aa0a0496fD85BDfCF7464\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x675eC042325535F6e176638Dd2d4994F645502B9\"}\n    ];\n\n    const data = await this.makeMulticall(calls);\n    console.log(data);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const uniswapRouterMethod = tokenConfigDest.uniswapRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(uniswapRouterMethod === 'getAmountsIn' ? tokenConfigFrom.address : tokenConfigDest.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(uniswapRouterMethod === 'getAmountsIn' ? tokenConfigDest.address : tokenConfigFrom.address);\n\n      let decimals = tokenConfigDest.decimals;\n      \n      // Use decimals of underlying token if set\n      if (uniswapRouterMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall('UniswapRouter', uniswapRouterMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getUniswapConversionRate',path,blockNumber,unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (uniswapRouterMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully  and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'primary'}\n                    fontFamily={'titles'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[1,2],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      lastHarvest,\n      gaugeStakedBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      gaugeConfig ? this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      gaugeStakedBalance,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                >\n                                  {this.props.tokenConfig.description}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) ? (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) : this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={RoundButton}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            value:'Unstake',\n                            buttonProps:{\n                              size:'medium',\n                              width:[1,1/3],\n                            }\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n              // Gnosis cannot fetch past blocks data\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                }\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n          gaugeWorkingSupply,\n          gaugeWeight\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n          this.functionsUtil.genericContractCallCached(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCallCached('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.8\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        uniswapRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log('initializeContracts',this.state.web3Providers);\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13054628,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13575397,\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:14785127,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}