{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","IconBox","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isVisible","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mt","textAlign","dangerouslySetInnerHTML","__html","children","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_callee","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheUserTransactionsEvents","_ref25","_callee15","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref26","_ref27","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","_context15","CDO","getContractEvents","_x9","_x10","_ref28","_callee16","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args16","_context16","endpoints","makeEtherscanApiRequest","result","some","trancheTokenAddresses","trancheType","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","returnValues","_x11","getEtherscanTokenTransfers","_ref29","_callee17","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args17","_context17","_x12","_x13","getTrancheStakingRewardsDistributions","_ref30","_callee19","stakingDistributions","_context19","_ref31","_callee18","transfers","_context18","_x16","_x14","_x15","getTrancheHarvests","_ref32","_callee21","_ref33","_ref34","stakingRewardsDistributions","autoFarming","harvestsList","_context21","_ref35","_callee20","_context20","_x19","_x17","_x18","getTrancheLastHarvest","_ref36","_callee22","strategyConfig","harvestEnabled","idleStrategyAddress","startBlock","latestHarvestBlock","totalAmount","_context22","Strategy","genericContractCallCachedTTL","initContract","abi","_x20","_x21","getGovTokenApr","_ref37","_callee23","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref38","_ref39","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context23","getTokenConfig","_address","apr2apy","apr","apy","_x22","_x23","_x24","_x25","getTrancheRewardTokensInfo","_ref40","_callee25","tokensDistribution","_context25","_ref41","_callee24","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref42","_ref43","prevHarvest","_latestHarvest","firstBlock","_ref44","_ref45","poolSize","elapsedBlocks","elapsedSeconds","_context24","rewardsRate","now","genericContractCallCached","getBlockInfo","_x28","_x26","_x27","_ref46","_callee27","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args27","_context27","_ref47","_callee26","trancheTokenTransferEvent","tokenTransferEvent","_ref48","_ref49","blockInfo","tokenConversionRate","_context26","_x31","trancheTokenAmount","hashKey","trancheTokens","_x29","_x30","getTrancheUserTransactions","_ref50","_callee28","_context28","_x32","_x33","_x34","getTrancheFirstDepositTx","_ref51","_callee29","_context29","_x35","_x36","_x37","getAmountDepositedTranche","_ref52","_callee30","_context30","_x38","_x39","_x40","_ref53","_callee31","_ref54","_ref55","userAvgPrice","_context31","_x41","_x42","getAmountLent","_callee32","amountLents","_args32","_context32","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee38","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref58","_ref59","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args38","_context38","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref60","_callee33","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context33","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x43","_ref61","_callee34","_context34","_x44","match","_ref62","_callee35","_context35","_x45","_ref63","_callee36","_context36","_x46","items","to_address","_ref64","_callee37","polygonTx","erc20RootToken","_context37","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x47","getPolygonBaseTxs","_callee39","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args39","_context39","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee40","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args40","_context40","filterEthereumTxs","_callee41","_args41","_context41","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee42","resultData","allAvailableTokens","_args42","_context42","processStoredTxs","_callee43","contractInstance","_context43","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","t1","checkPolygonTransactionIncluded","_ref70","_callee44","_ref71","_ref72","_context44","getTransactionReceipt","_x48","_ref73","_callee45","_args45","_context45","_x49","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref74","_callee46","processTransactions","idleTokensAddresses","_args46","_context46","mappedTx","_x50","_x51","filterEtherscanTxs","_ref75","_callee47","processTxs","_args47","_context47","_x52","_ref76","_callee48","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args48","_context48","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x53","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref77","_callee53","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args53","_context53","baseTokenConfig","baseTokenAddress","_ref78","_callee52","minedTxs","_context52","_ref79","_callee51","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context51","getCurveTokenPrice","_ref80","_callee49","_context49","_x58","_x59","baseTokensConfig","t2","_ref81","_callee50","_context50","_x60","_x61","_x56","_x57","_x55","_x54","_ref82","_callee59","txsToProcess","_args59","_context59","_ref83","_callee58","_context58","_ref84","_callee57","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context57","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref85","_callee54","_context54","_x66","_x67","_ref86","_callee55","_context55","_x68","_x69","oldContract","events","raw","_ref87","_callee56","_context56","_x70","_x71","decodeLog","_token","_x64","_x65","_x63","_x62","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref88","_callee60","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args60","_context60","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x72","getBestTranche","_callee61","maxApy","trancheStrategyConfig","_args61","_context61","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref90","_callee62","error_callback","config","_args62","_context62","post","catch","_x73","_ref91","_callee63","_args63","_context63","_x74","_ref92","_callee64","apiKeyIndex","apiKey","_args64","_context64","_x75","_ref93","_callee65","return_data","_args65","_context65","_x76","makeCachedPostRequest","_ref94","_callee66","_args66","_context66","_x77","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee67","page","googlePageviewInfo","isOrigin","_args67","_context67","ga","_ref96","_callee69","googleEventsInfo","debugEnabled","originOk","_args69","_context69","analytics","google","addPostfixForTestnet","_ref97","_callee68","_context68","hitCallback","hitCallbackFail","_x79","_x80","_x78","createContract","_ref98","_callee70","_context70","_x81","_x82","_x83","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee73","activeOnly","whitelist","proposals","validProposals","_args73","_context73","addr","_ref100","_callee72","checkedStrategies","_context72","end","author","snapshot","strategies","_ref101","_callee71","tokenContract","_context71","_x85","_x84","getAprsFromApi","_callee74","endpointInfo","aprs","_args74","_context74","_ref103","_callee75","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args75","_context75","_x86","getTokenExchangeRate","_ref104","_callee76","exchangeRateParams","exchangeRate","_context76","_x87","_x88","getTokenDecimals","_ref105","_callee77","_context77","_x89","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee78","idleTokenConfig","feeDistributorConfig","_context78","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee79","contractPaused","_args79","_context79","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref108","_callee81","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context81","lastAllocationsPromise","_ref109","_callee80","lastAllocations","_context80","_x91","_x92","alloc","_x90","_ref110","_callee82","oldContractBalance","oldContractTokenDecimals","oldContractName","_context82","_x93","_x94","_ref111","_callee83","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args83","_context83","getBlockNumber","getContractPastEvents","callEvents","_x95","_x96","_ref112","_callee84","_args84","_context84","getPastEvents","_x97","_x98","estimateMethodGasUsage","_ref113","_callee85","methodParams","_contract$methods","functionCall","gasLimit","_ref114","_ref115","_args85","_context85","getGasPrice","estimateGas","_x99","_x100","_ref116","_callee86","userAddress","signedParameters","callback_receipt","_contract$methods2","_context86","on","once","confirmationNumber","receipt","_x101","_x102","_x103","_x104","_x105","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref117","_callee87","biconomyInfo","res","_context87","limits","apiId","headers","x-api-key","_x106","sendTxWithPermit","_ref118","_callee88","_contract$methods3","messageToSign","_this$getSignaturePar","_context88","encodeABI","personal","sign","_x107","_x108","_x109","_x110","_x111","_x112","buildBiconomyErc20ForwarderTx","_ref119","_callee89","permitType","callData","buildParams","_context89","txGas","erc20ForwarderClient","buildTx","_x113","_x114","_x115","_x116","_x117","_ref120","_callee91","_context91","_ref121","_callee90","_context90","_x119","_x120","_x118","sendBiconomyTxWithErc20Forwarder","_ref122","_callee92","req","metaInfo","txResponse","fetchReceiptIntervalId","_context92","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x121","_x122","_x123","_x124","sendBiconomyTxWithPersonalSign","_ref123","_callee93","_this$getSignaturePar2","_context93","getNonce","_x125","_x126","_x127","_x128","signPermitEIP2612","_ref124","_callee94","erc20Name","owner","spender","deadline","domain","permit","domainData","_context94","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x129","_x130","_x131","_x132","_x133","_x134","_x135","_x136","signPermit","_ref125","_callee95","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args95","_context95","net","getId","round","nonceMethod","pow","allowed","response","_x137","_x138","_x139","_ref126","_callee96","permitParams","methodAbi","useNonce","_args96","_context96","_jsonInterface","f","unshift","_x140","_x141","_x142","_x143","_x144","_x145","_x146","sendSignedTx","_ref127","_callee97","MetaTransaction","dataToSign","_context97","_x147","_x148","_x149","_x150","_x151","checkTokenApproved","_ref128","_callee98","contractAddr","_ref129","_ref130","allowance","_context98","getAllowance","gte","_x152","_x153","_x154","_ref131","_callee99","_context99","_x155","_x156","_x157","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee101","highestValue","_args101","_context101","lendRates","aprInfo","tokenAPR","_ref133","_callee100","_context100","_x158","_ref134","_callee102","_args102","_context102","_x159","_x160","calculateGaugeBoost","_ref135","_callee103","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args103","_context103","workingBalance","getTokenTotalSupply","_x161","_x162","getGaugeWeight","_ref136","_callee104","lastGaugeTimestamp","gaugeWeight","_context104","_x163","getGaugeAbsoluteWeight","_ref137","_callee105","_ref138","_ref139","totalWeight","_context105","_x164","getGaugeNextWeight","_ref140","_callee106","nextGaugeTimestamp","_context106","_x165","getGaugeRewardsTokens","_ref141","_callee108","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args108","_context108","rate","maxRewards","_ref142","_callee107","tokenIndex","rewardTokenAddress","_ref143","_ref144","rewardData","rewardTokenBalance","cdoConfig","_ref145","_ref146","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context107","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x167","_x166","_ref147","_callee110","_args110","_context110","_ref148","_callee109","tokenGlobalConfig","stakingRewardsContract","_context109","_x170","_x168","_x169","_ref149","_callee111","field","addGovTokens","_args111","_context111","loadTrancheField","_x171","_x172","_x173","_x174","_x175","_x176","_x177","_x178","_ref150","_callee112","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref151","_ref152","totalSupply","virtualPrice","_ref153","_ref154","gaugeBalance","lastPrice1","staked1","totalStaked","_ref155","_ref156","deposited1","lastPrice","_ref157","_ref158","redeemable1","staked2","_ref159","_ref160","earningsStart","trancheApy2","deposited3","earningsEnd","_ref161","_ref162","trancheFee","earningsCounter","feesEnd","feesStart","_ref163","_ref164","deposited4","redeemable3","_ref165","_ref166","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref167","_ref168","_ref169","_ref170","earningsPerc","secondsFromFirstTx","_ref171","_ref172","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args112","_context112","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x179","_x180","_x181","_x182","_x183","_x184","_x185","loadAssetField","_ref173","_callee113","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref174","_ref175","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref176","_ref177","amountLentCurve1","redeemableBalanceCurve","_ref178","_ref179","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref180","_ref181","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref182","_ref183","tokenPriceFirstDeposit","_ref184","_ref185","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref186","_ref187","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref188","_ref189","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref190","_ref191","amountLentCurve2","redeemableBalanceCurve1","_ref192","_ref193","redeemableBalance2","_args113","_context113","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x186","_x187","_x188","_x189","getIdleTokenSupply","_ref194","_callee114","idleTokenSupply","_args114","_context114","_x190","getIdleTokenPriceWithFee","_ref195","_callee115","_ref196","_ref197","fee","priceWFee","_args115","_context115","eq","_x191","_x192","_ref198","_callee116","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args116","_context116","_x193","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref199","_callee117","_ref200","_ref201","idleTokensTotalSupply","userShare","_context117","_x194","_x195","openWindow","open","getActiveCoverages","_callee119","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args119","_context119","coverages","_ref203","_callee118","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context118","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x196","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref204","_callee121","incidentsInfo","_ref205","_ref206","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context121","directProps","contractInfo","buyer","_ref207","_callee120","cover","coverId","claimSubmittedEvent","_ref208","_ref209","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref210","_ref211","_context120","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x198","_x197","getBatchedDepositExecutions","_ref212","_callee122","_context122","_x199","getBatchedDeposits","_callee124","filter_by_status","batchDepositConfig","batchedDeposits","_args124","_context124","_ref214","_callee123","currBatchIndex","batchIndex","_ref215","_ref216","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context123","_x200","getETHBalance","_ref217","_callee125","fixDecimals","_args125","_context125","_x201","_ref218","_callee126","_ref219","_ref220","_args126","_context126","ERC20","_x202","_x203","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref221","_callee127","_args127","_context127","_x204","_ref222","_callee128","_args128","_context128","_x205","_ref223","_callee129","_args129","_context129","_x206","_x207","getProtocolBalance","_ref224","_callee130","_context130","_x208","_x209","getAprs","_ref225","_callee131","_context131","addresses","_x210","genericIdleCall","_ref226","_callee132","callParams","_args132","_context132","_x211","_ref227","_callee133","_contract$methods4","_args133","_context133","_x212","_x213","_ref228","_callee135","_args135","_context135","_ref229","_callee134","_context134","_x215","_x216","_x214","getTxDecodedLogs","_ref230","_callee137","logAddr","decodeLogs","internalTransfers","_context137","_ref231","_callee136","_context136","_x221","_x222","_x217","_x218","_x219","_x220","blocksToSeconds","blocks","blocksPerSeconds","_callee138","_context138","_callee139","blockInfoToSave","_args139","_context139","getBlock","genericContractCallCachedTTLNoMulticall","_ref234","_callee140","_args140","_context140","_x223","_x224","_ref235","_callee141","useMultiCall","_args141","_context141","_x225","_x226","_ref236","_callee142","_args142","_context142","_x227","_x228","_ref237","_callee143","_args143","_context143","_x229","_x230","cachedContractCall","_ref238","_callee144","_args144","_context144","_x231","_x232","prepareMulticallData","strip0x","_ref239","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref240","_callee145","decodedParams","_args145","_context145","decodeParameters","returnFields","_x233","testMulticall","_callee146","_context146","_ref242","_callee147","inputTypes","callHash","_args147","_context147","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x234","_x235","_ref243","_callee148","_contract$methods5","_args148","_context148","_x236","_x237","_ref244","_callee149","async","_args149","_context149","_x238","_x239","getUnlentBalance","_ref245","_callee150","unlentBalance","_context150","_x240","_ref246","_callee151","_args151","_context151","_x241","getLastAllocations","_ref247","_callee153","tokenAllocations","_context153","_ref248","_callee152","_context152","_x243","_x244","_x242","_ref249","_callee154","protocolsAprs","_ref250","_ref251","govTokensBalances","_args154","_context154","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x245","getPoolTokenPrice","_ref252","_callee155","protocolContract","_ref253","_ref254","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref255","_ref256","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args155","_context155","_x246","getSushiswapPoolTokenPrice","_ref257","_callee156","_ref258","_ref259","_ref260","_ref261","_context156","getSushiswapConversionRate","_x247","getSushiswapConversionRate_old","_ref262","_callee157","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context157","_x248","_x249","getCustomProtocolConversionRate","_ref263","_callee158","useWETH","invertTokens","routerMethod","underlyingTokenConfig","unires","_args158","_context158","addressForPrice","conversionRateInvertTokens","conversionRouterMethod","_x250","_x251","getQuickswapConversionRate","_ref264","_callee159","_args159","_context159","_x252","_x253","_ref265","_callee160","_args160","_context160","_x254","_x255","_ref266","_callee161","_args161","_context161","_x256","_x257","getCurveDepositedTokens","_ref267","_callee162","idleTokensBalances","remainingCurveTokens","_args162","_context162","_x258","getCurveUnevenTokenAmounts","_ref268","_callee163","amounts","max_burn_amount","unevenAmounts","_context163","getCurveDepositContract","_x259","_x260","_callee164","curveRatesInfo","_args164","_context164","_callee165","_context165","strategyTokens","getCurveAPYContract","_callee166","blocksForPrevTokenPrice","_ref272","_ref273","prevTokenPrice","blocksMultiplier","curveAPR","_context166","getCurveTokenSupply","_callee167","_context167","getCurvePoolContract","_callee168","_args168","_context168","_callee169","_args169","_context169","_ref277","_callee170","_ref278","_ref279","_context170","_x261","_callee171","depositContractInfo","_context171","getCurveZapContract","_callee172","zapContractInfo","_context172","_callee173","poolContractInfo","_context173","getCurveSwapContract","_callee174","migrationContractInfo","_context174","getCurveIdleTokensAmounts","_callee176","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args176","_context176","_ref285","_callee175","coinIndex","curveIdleTokens","_context175","migrationParams","_x262","getCurveTokensAmounts","_callee178","useCoinIndex","_args178","_context178","_ref287","_callee177","_ref288","_ref289","idleTokenPrice","totalTokenSupply","_context177","_x263","getCurveAmounts","_ref290","_callee180","_args180","_context180","_ref291","_callee179","_context179","_x266","_x264","_x265","getCurveTokenAmount","_ref292","_callee181","_args181","_context181","_x267","getCurveSlippage","_ref293","_callee182","uneven_amounts","depositContract","_ref294","_ref295","Sv","_args182","_context182","_x268","_x269","_ref296","_callee183","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref297","_ref298","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args183","_context183","IAaveIncentivesController","emissionPerSecond","_x270","_callee185","_args185","_context185","_ref300","_callee184","_ref301","_ref302","_context184","_x271","getWMaticApr","_ref303","_callee186","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args186","_context186","_x272","_x273","getStkAaveApr","_ref304","_callee187","aaveConversionRate","stkAaveAPR","stkAaveValue","_args187","_context187","_x274","_x275","getCompAPR","_ref305","_callee188","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args188","_context188","_x276","_x277","getCompSpeed","_ref306","_callee189","cTokenAddress","compSpeed","_context189","_x278","_ref307","_callee190","cTokenInfo","compoundAllocationPerc","_ref308","_ref309","cTokenTotalSupply","compoundPoolShare","_args190","_context190","_x279","_callee192","_args192","_context192","_ref311","_callee191","_ref312","_ref313","_context191","_x280","_callee194","_args194","_context194","_ref315","_callee193","_ref316","_ref317","compApr","_context193","_x281","getTokensCsv","_callee197","csv","_context197","prototype","sum","pv","cv","avg","_ref319","_callee196","_context196","_ref320","_callee195","rates","header","rows","aprAvg","scoreAvg","lastRow","_context195","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x283","_x282","_callee199","convertToken","_args199","_context199","_ref322","_callee198","compTokenBalance","_context198","_x284","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref323","_callee201","govTokensUserDistribution","_args201","_context201","_ref324","_callee200","_context200","_x286","_x285","getGovTokensDistributionSpeed","_ref325","_callee203","govTokensDistribution","_args203","_context203","_ref326","_callee202","govSpeed","_context202","_x288","_x287","getGovTokensAprs","_ref327","_callee205","govTokensAprs","_args205","_context205","_ref328","_callee204","_ref329","_ref330","_ref331","_ref332","cTokenConfig","_context204","aprTooltipMode","_x291","_x289","_x290","_callee207","_args207","_context207","_ref334","_callee206","govTokenBalance","fromTokenConfig","_context206","_x292","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee208","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args208","_context208","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref336","_callee210","govTokensAmounts","_context210","getGovTokensUserAmounts","_ref337","_callee209","govTokenIndex","govTokenAddress","_context209","getGovTokenAddessByIndex","_x295","_x296","_x293","_x294","_ref338","_callee211","_context211","_x297","_x298","_ref339","_callee212","_context212","_x299","_x300","_callee215","govTokenConfigForced","_args215","_context215","_ref341","_callee214","_context214","_ref342","_callee213","_context213","_x302","_x303","_x301","getTokenFees","_callee216","_args216","_context216","_callee217","_ref345","_ref346","feePercentage","gain","fees","_args217","_context217","_ref347","_callee218","_args218","_context218","_x304","getTotalTVL","_callee219","tokensTVL","_context219","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee223","_context223","_ref350","_callee222","_context222","_ref351","_callee221","oldTokenTVL","idleTokenName","_ref352","_ref353","oldTokenConfig","_ref357","_ref358","oldTokenPrice","oldTotalSupply","_context221","showAUM","_ref354","_callee220","_ref355","_ref356","govTokenConversionRate","govTokenBalanceConverted","_context220","_x307","oldProtocols","oldProtocol","protocolPos","_x306","_x305","getSubstackLatestFeed","_callee224","idleSubstackFeed","latestFeed","_context224","getTrancheAggregatedStats","_callee228","totalAUM","_args228","_context228","_ref361","_callee227","_context227","_ref362","_callee226","_context226","_ref363","_callee225","_ref364","_ref365","_context225","_x310","_x309","_x308","getAggregatedStats","_callee230","allNetworks","networkIds","callsFailed","tvls","_args230","_context230","_ref367","_callee229","_context229","_x311","getAggregatedStats_chain","_callee235","avgAPR","_args235","_context235","availableStrategiesNetworks","_ref369","_callee234","_context234","_ref370","_callee233","_context233","_ref371","_callee232","tokenAUM","_context232","_ref372","_callee231","_ref373","_ref374","_context231","_x315","_x314","_x313","_x312","getTokenApy","_ref375","_callee236","_context236","_x316","getTokensToMigrate","_callee239","_args239","_context239","_ref377","_callee238","_context238","_ref378","_callee237","_ref379","_context237","_x318","_x317","getProtocolsTokensBalances","_callee241","tokenBalances","minTokenBalance","protocolsTokens","_args241","_context241","_ref381","_callee240","_context240","_x319","getTokenConversionRateField","getTrancheTokenConversionRate","_ref382","_callee242","trancheTokenConfig","trancheTokenConversionRate","_args242","_context242","isPoolToken","conversionRateProtocolContract","_x320","_ref383","_callee243","_args243","_context243","_x321","_x322","_ref384","_callee244","_args244","_context244","_x323","_x324","_x325","getAvgAPYStats","_ref385","_callee245","apiResults","_args245","_context245","_x326","_x327","_ref386","_callee246","statsTokenConfig","ToTokenConfig","_args246","_context246","addressForPriceFrom","conversionRateUseWETH","_x328","_ref387","_callee247","count","_conversionRate","_args247","_context247","_x329","_x330","getTokenScore","_ref388","_callee248","_ref389","_ref390","tokenScore","_context248","protocolScore","getTokenScoreApi","_x331","_x332","_ref391","_callee249","scores","_context249","_x333","_x334","_ref392","_callee250","idleGovTokenShowAPR","idleAPR","_args250","_context250","_x335","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","React","createContext","DashboardCard","isClickable","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","showReferral","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","then","param3","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","_args7","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this10","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_19__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_16__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_18__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.f37ace79.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          return isUnderlyingDeposit || isUnderlyingRedeem || isTrancheDeposit || isTrancheRedeem;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (parseInt(latestHarvestBlock)>0){\n        startBlock = latestHarvestBlock;\n        latestHarvestBlock++;\n      } else {\n        limit = 1;\n        latestHarvestBlock = 'latest';\n      }\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, 18);\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n              polygonTx.exited = false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.props.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim\n    };\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = parseInt(Date.now()/1000);\n    }\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,lastGaugeTimestamp]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  testMulticall = async () => {\n    const calls = [\n      {\"method\":\"tranchePrice(address)\",\"args\":[[\"0x2688fc68c4eac90d9e5e1b94776cf14eade8d877\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x34dcd573c5de4672c8248cd12a99f875ca112ad8\"},\n      {\"method\":\"claimable_tokens(address)\",\"args\":[[\"0xF1363D3D55d9e679cC6aa0a0496fD85BDfCF7464\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x675eC042325535F6e176638Dd2d4994F645502B9\"}\n    ];\n\n    const data = await this.makeMulticall(calls);\n    console.log(data);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully  and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'primary'}\n                    fontFamily={'titles'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[1,2],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      lastHarvest,\n      gaugeStakedBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      gaugeConfig ? this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      gaugeStakedBalance,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                >\n                                  {this.props.tokenConfig.description}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) ? (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) : this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={RoundButton}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            value:'Unstake',\n                            buttonProps:{\n                              size:'medium',\n                              width:[1,1/3],\n                            }\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                }\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n          gaugeWorkingSupply,\n          gaugeWeight\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n          this.functionsUtil.genericContractCallCached(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCallCached('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.9\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',initWeb3Index,connectorName,web3,context,web3Provider);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log('initializeContracts',this.state.web3Providers);\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13054628,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13575397,\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:14785127,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}