{"version":3,"sources":["Dashboard/Dashboard.module.scss","FlashNews/FlashNews.js","Stats/StatsChart.js","Rebalance/Rebalance.js","utilities/components/DateRangeModal.js","StatsAsset/StatsAsset.js","TrancheSelector/TrancheSelector.js","StatsTranche/StatsTranche.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","CurveRedeem/CurveRedeem.js","DepositRedeem/DepositRedeem.js","ActiveCoverages/ActiveCoverages.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","utilities/components/BetaModal.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/PolygonModal.js","utilities/components/WelcomeModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/RiskAdjustedModal.js","Dashboard/Dashboard.js"],"names":["module","exports","bg","bg-top-left","bg-bottom-right","bg-noise","submenu","opened","FlashNews","state","activeNews","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","gaugesConfg","getGlobalConfig","stakingConfig","flashNews","1","name","icon","text","link","url","label","getDashboardSectionUrl","concat","route","image","137","currentNetworkId","getRequiredNetworkId","activeFlashNews","length","Math","floor","random","setState","prevProps","prevState","_this2","react_default","a","createElement","DashboardCard","cardProps","p","mb","width","backgroundColor","isActive","isInteractive","index_es","alignItems","justifyContent","flexDirection","mr","size","color","heght","src","fontSize","fontWeight","textAlign","ExtLink","ml","hoverColor","href","onClick","e","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","Component","StatsChart","chartProps","chartType","chartData","chartWidth","parseAum","value","parseInt","parseFloat","toFixed","_this","selectedToken","loadApiData","_callee3","maxGridLines","apiResults","apiResults_aa","apiResults_bb","apiResults_unfiltered","protocols","totalItems","tranchesConfig","versionInfo","keys","tempData","gridYStep","itemIndex","daysCount","gridYValues","maxChartValue","axisBottomIndex","daysFrequency","idleChartData","firstIdleBlock","axisBottomMaxValues","seniorTrancheName","juniorTrancheName","i","Values","firstPriceAA","firstPriceBB","chartDataAA","chartDataBB","firstBlock","_i","divergingData","startTimestampA","endTimestampA","timestamp","date","lastRow","maxRange","_i2","startTimestamp","endTimestamp","_timestamp","_date","_i3","_i4","_i5","_i6","dates","_i7","_i8","chartValues","prevValue","_i9","prevApr","prevData","avgApy","startBalance","currentBalance","aaveProtocolInfo","_i10","firstTokenPrice","_i11","regenerator_default","wrap","_context3","prev","next","tokenConfig","chartMode","abrupt","Object","assign","globalConfigs","stats","versions","idleVersion","Line","capitalize","AA","baseName","BB","t0","push","id","hex","data","map","d","x","moment","timeStamp","format","y","fixTokenDecimals","apr","max","sort","b","isBefore","diff","ceil","xScale","type","xFormat","yFormat","yScale","stacked","axisLeft","legend","tickSize","orient","tickPadding","tickRotation","legendOffset","tickValues","legendPosition","axisBottom","isMobile","pointSize","useMesh","animate","pointLabel","curve","enableArea","enableSlices","enableGridX","enableGridY","pointBorderWidth","colors","pointLabelYOffset","legends","itemWidth","itemHeight","translateX","translateY","symbolSize","itemsSpacing","direction","anchor","symbolShape","itemTextColor","theme","effects","on","style","themeMode","axis","ticks","fill","fontFamily","fonts","sansSerif","grid","line","stroke","lineChartStroke","strokeDasharray","textTransform","pointColor","from","modifiers","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","CustomTooltip","protocolName","serieId","protocolEarning","yFormatted","CustomTooltipRow","key","apy","days","tokenPrice","virtualPrice","decimals","div","minus","times","blockNumber","itemPos","blocknumber","splice","protocolApy","_d","getTime","deposits","redeems","forEach","row","idleTokens","totalSupply","idleTokensPrev","eq","gte","abs","values","filter","v","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","abbreviateNumber","markers","lineStyle","strokeOpacity","textStyle","transactions","action","deposit","legendOrientation","legendOffsetX","redeem","padding","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","tooltip","container","boxShadow","background","xFormatted","strToMoment","depositFormatted","redeemFormatted","idleSupply","aum_aa","contractValue","toString","aum_bb","formatMoney","BNify","ratio","tokens","hsl","join","idlePrice","aum","j","protocolsData","protocolAllocation","protocolAddr","toLowerCase","address","z","rate","allocation","foundItem","item","pos","indexOf","allocations","undefined","serieColor","protocolInfo","protocolColor","protocolAllocationFormatted","protocolAllocationPerc","protocolData","protocolPaused","foundProtocol","find","_ref2","tableCell","_ref3","py","px","borderCollapse","display","height","totalAllocation","reduce","accumulator","plus","allocationPerc","_ref4","_ref5","additionalProtocols","additionalProtocol","protocol","enabledTokens","includes","enabled","unshift","objectSpread","rateField","protocolRate","acc","field","lt","aaveAdditionalAPR","gt","idle","idleRate","defiScore","isNaN","idleScore","isSameOrBefore","aaveProtocolData","pData","earnings","earning","daysSinceBeginning","tokensProps","tokenProps","isAfter","Date","now","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","rowData","idlePerformance","d1","asyncForEach","_ref6","asyncToGenerator","mark","_callee2","lastRowData","lastTokenPrice","_context2","_ref7","_callee","tokenExchangeRate","tokenPriceFixed","lastYDiff","_context","price","stop","_x2","apply","arguments","_x","showAdvanced","showAdvancedChanged","apiResults_aa_Changed","apiResults_bb_Changed","apiResultsChanged","tokenChanged","JSON","stringify","componentDidMount","GenericChart","showLoader","parentId","parentIdHeight","Rebalance","loading","processing","rebalance","txHash","shouldRebalance","componentUnmounted","checkRebalance","setStateSafe","sent","callback","callback_receipt","preventDefault","tx","error","eventData","status","getTransactionError","window","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","transactionHash","contractMethodSendWrapper","token","accountChanged","account","newState","minHeight","FlexLoader","flexProps","loaderProps","textProps","TxProgressBar","waitText","endMessage","hash","mt","RoundButton","buttonProps","disabled","handleClick","DateRangeModal","quickSelection","ranges","startDate","endDate","options","quickSelections","componentDidUpdate","selection","target","quickSelectionParams","clone","subtract","closeModal","handleSelect","startTimestampObj","endTimestampObj","_this3","isOpen","ModalCard","closeFunc","Header","title","Body","counter","cardBg","required","onChange","handleQuickSelect","bind","dist","minDate","maxDate","className","Footer","my","mx","borderRadius","mainColor","React","StatsAsset","delta","carouselMax","rebalances","buttonGroups","carouselIndex","statsVersions","minStartTime","govTokensPool","unlentBalance","carouselOffsetLeft","dateRangeModalOpened","day","week","weeks","month","ytd","setDateRange","isSameOrAfter","isSame","add","maxEndDate","setDateRangeModal","filterTokenData","r","setIdleVersion","isRisk","firstResult","lastResult","firstIdlePrice","lastIdlePrice","compoundInfo","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","availableTokens","selectedStrategy","getTokenApiData","pop","convertTokenBalance","sum","compoundWithCOMP","compoundData","compoundRate","index","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","getGovTokenPool","getUnlentBalance","selectToken","strategy","setStrategyToken","changeToken","handleCarousel","$element","jQuery","position","loadParams","latestVersion","version","enabledStrategies","strategiesParams","versionInfoExtra","param","params","match","currentNetworkAvailableTokens","customToken","toUpperCase","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","web3","initWeb3","loadCarousel","contractsInitialized","strategyChanged","dateChanged","versionChanged","versionsOptions","performanceTooltip","versionDefaultValue","Breadcrumb","showPathMobile","goToSection","path","GenericSelector","innerProps","defaultValue","AssetSelector","pr","StatsCard","labelTooltip","SmartNumber","precision","lineHeight","unitProps","number","unit","VariationNumber","iconPos","iconSize","span","description","Stats_StatsChart","contracts","pb","pt","AllocationChart","src_Rebalance_Rebalance","pl","h4","RoundIconButton","iconName","transition","utilities_components_DateRangeModal","TrancheSelector","CustomOptionValue","CustomValueContainer","availableTranches","t","selectedProtocol","changeProtocolToken","opt","AssetField","fieldInfo","selectProps","flex","cursor","loadComponents","selectedTokenChanged","isSearchable","StatsTranche","seniorTrancheApy","juniorTrancheApy","seniorTrancheConverage","apiResults_unfiltered_aa","apiResults_unfiltered_bb","firstResult_aa","firstResult_bb","lastResult_aa","lastResult_bb","firstAAPrice","lastAAPrice","firstBBPrice","lastBBPrice","getSubgraphTrancheInfo","convertTrancheTokenBalance","min","trancheType","trancheDetails","selectTrancheType","protocolChanged","src_TrancheSelector_TrancheSelector","Stats","showRefreshIdleSpeed","toggleAdvancedCharts","selectTranche","nextProps","nextState","stateChanged","networkId","idleTokenAvailableNetworks","idleTokenEnabled","tranchesEnabled","availableNetworks","enabledStatsNetworks","refreshIdleSpeedConfig","refreshIdleSpeedEnabled","apyLong","availableStrategies","textSize","statsTokens","src_StatsAsset_StatsAsset","src_StatsTranche_StatsTranche","strategies","statsProtocols","AssetsUnderManagement","loaderAlign","strategyInfo","availableProtocolsKeys","availableProtocols","Title","titlePostfix","AssetsList","cols","fields","mobile","parentProps","overflow","desc","showTooltip","rgb","TranchesList","enabledProtocols","minPrecision","ExecuteTransaction","Button","componentProps","contractName","methodName","completed","Utils","SubComponent","selectedSubsection","subComponent","viewOnly","connectorName","showBreadCrumb","selectedSection","dangerouslySetInnerHTML","__html","directProps","toolProps","flexWrap","IconBox","maxWidth","tool","toolIndex","FundsOverview","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensDistribution","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","idleGovToken","getIdleGovToken","govTokenAvailableTokens","Promise","all","getUserDistribution","getGovTokensUserBalances","loadAssetField","depositTimestamp","getAvgAPYStats","avgAPY","lte","totBalance","govTokenBalance","govToken","balance","children","placement","message","PortfolioEquity","chartHeight","chartToken","frequencySeconds","getFrequencySeconds","component","Heading","h3","maxPrecision","govTokenIndex","tokenName","distributionFrequency","CurveRedeem","inputValue","maxSlippage","unevenAmounts","buttonDisabled","showMaxSlippage","redeemUnderlying","curveTokenConfig","curvePoolContract","curveSwapContract","curveTokenBalance","curveTokensAmounts","fastBalanceSelector","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","checkButtonDisabled","amount","changeInputValue","setFastBalanceSelector","setMaxSlippage","initToken","max_slippage","normalizedAmount","normalizeTokenAmount","withdrawSlippage","curveIdleTokensAmounts","getCurveTokensAmounts","getCurveIdleTokensAmounts","getCurveSlippage","getCurveTokenPrice","curveTokenPrice","redeemableBalance","redeemUnevenAmountsChanged","setInputValue","inputChanged","maxSlippageChanged","tokenConfigChanged","calculateSlippage","loadSelectedTokenConfig","selectedPercentage","curveConfig","getCurvePoolContract","getCurveSwapContract","getCurveTokenBalance","getCurveRedeemableIdleTokens","getCurveAvailableTokens","callbackRedeem","txSucceeded","eventValue","callbackReceiptRedeem","_amount","min_amounts","console","log","coin_index","migrationParams","coinIndex","min_amount","showSlippage","curveTokenName","cancelTransaction","checked","showBalance","selectDestinationToken","slippage","FastBalanceSelector","percentage","onMouseDown","whiteSpace","failed","textOverflow","placeholder","border","divider","DepositRedeem","txError","tokenAPY","curveAPY","totalAUM","canRedeem","canDeposit","directMint","activeModal","tokenGovTokens","showBuyFlow","maxUnlentPerc","tokenApproved","skipMigration","redeemSkipGov","showRedeemFlow","contractPaused","canRedeemCurve","erc20ForwarderTx","signedParameters","minAmountForMint","redeemGovTokens","canDepositCurve","redeemSkipGovTokens","actionProxyContract","migrationEnabled","componentMounted","agreeSkipGovTokens","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","skipGovTokensGasSave","depositCurveSlippage","erc20ForwarderContract","erc20ForwarderEnabled","showETHWrapperEnabled","skipGovTokensGasSaveUSD","metaTransactionsEnabled","skippedGovTokensBalance","minAmountForMintReached","loadingErc20ForwarderTx","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleSkipMigration","toggleRedeemCurve","toggleDepositCurve","toggleShowETHWrapper","toggleAgreeSkipGovTokens","toggleSkipMint","toggleRedeemGovTokens","toggleRedeemSkipGov","getSkippedGovTokensFlags","govTokensIndexes","govTokensFlags","getGovTokensIndexes","calculateSkippedGovTokens","DAITokenConfig","_skipGovTokenRedeem","WETHTokenConfig","wethPrice","redeemGasUsage","skipGovRedeemGasUsage","govTokenConfig","govTokenPrice","skippedAmount","getUniswapConversionRate","govTokensUserBalances","estimateMethodGasUsage","idleTokenBalance","slicedToArray","setRedeemSkipGovTokens","toggleErc20ForwarderEnabled","toggleMetaTransactionsEnabled","resetModal","setActiveModal","checkUseProxyContract","proxyContract","depositErc20ForwarderEnabled","depositMetaTransactionsEnabled","biconomy","approveContract","_callee4","callbackApprove","callbackReceiptApprove","curveDepositContract","_context4","enableERC20","checkTokenApproved","_callee5","_context5","approveToken","_callee6","_context6","approve","loadTokenInfo","_callee7","curveTokenEnabled","_ref10","_ref11","_context7","checkContractPaused","getCurveDepositContract","checkMigration","tokenBalance","getTokenGovTokens","boost","checkAction","loadAPY","_callee8","_context8","defineProperty","executeAction","_callee11","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","amounts","minMintAmount","depositParams","_tokensToDeposit","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","functionCall","functionSignature","methodAbi","useNonce","_referral","txData","idleTokenToRedeem","idleTokenPriceWithFee","_callbackRedeem","_callbackReceiptRedeem","redeemMethod","redeemParams","_context11","getFastBalanceSelector","localStorage","setLocalStorage","lendingProcessing","lendAmount","genericError","getCurveAmounts","getCurveTokenAmount","integerValue","contract","methods","function","toConsumableArray","encodeABI","sendBiconomyTxWithPersonalSign","_jsonInterface","f","inputs","_callee10","metaInfo","permitOptions","erc20ForwarderBaseContract","permitValue","permitConfig","setValue","expiry","nonce","s","_context10","signPermit","allowed","holder","spender","permitData","permitType","asyncTimeout","sendBiconomyTxWithErc20Forwarder","request","_callee9","_erc20ForwarderContra","_functionCall","_functionSignature","gasLimit","_context9","estimateGas","buildBiconomyErc20ForwarderTx","getReferralAddress","getIdleTokenPriceWithFee","_callee12","_context12","setAction","loadProxyContracts","actions","_ref17","_callee15","erc20ForwarderContractInfo","hasProxyContract","_context15","initContract","abi","approved","_x5","getTokenAprs","tokenAprs","getCurveAPY","getQueryStringParameterByName","checkAddress","erc20ForwarderEnabledChanged","tokenBalanceChanged","actionChanged","fastBalanceSelectorChanged","redeemSkipGovChanged","redeemGovTokensChanged","agreeSkipGovTokensChanged","redeemSkipGovTokensChanged","depositCurveChanged","calculateCurveSlippage","showPoolPerc","convertedAmount","genericContractCall","depositPerc","maxUnlentPercFormatted","currentNetwork","getCurrentNetwork","isDepositDisabled","depositDisabledMessage","disabledMessageRedeemKey","disabledMessageDepositKey","govTokensEnabled","govTokensDisabled","skipMintForDepositEnabled","skipMintForDeposit","redeemGovTokenEnabled","redeemSkipGovConfig","redeemSkipGovEnabled","disabledTokens","govTokensBalance","redeemSkipGovNoTokens","showAdvancedRedeemOptions","depositErc20ForwarderEnabledTokens","metaTransactionsAvailable","useMetaTx","erc20ForwarderClient","totalBalance","migrateText","migration","depositCurve","showDepositCurve","showRedeemCurve","showCurveSlippage","showAdvancedDepositOptions","batchDepositInfo","batchDepositEnabled","batchDepositDepositEnabled","depositEnabled","showBatchDeposit","isMigrationTool","ethWrapperInfo","ETHWrapperComponent","showETHWrapper","polygonBridgeInfo","polygonNetworkId","canPerformAction","showPolygonBridgeEnabled","showActionFlow","provider","showPolygonBridge","showPolygonBridgeBanner","buyToken","accountBalance","getBaseToken","showReferral","Migrate","migrateTextBefore","TransactionField","transaction","isDisabled","iconProps","openTooltipModal","isRainbow","m","CardIconButton","imageProps","getWalletProvider","primary","fullWidth","cost","align","tokenFeesPercentage","borderColor","minWidth","ConnectBox","src_CurveRedeem_CurveRedeem","BuyModal","showInline","availableMethods","ShareModal","confettiEnabled","tweet","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","pending","statusIconProps","portfolioCoverage","titleProps","CustomList","rows","fileClaimUrl","openWindow","funcProps","actionLabel","actionDisabled","actionUrl","EstimatedEarnings","maxInputValue","loadChart","getTokenApy","earningsYear","tokenApy","amountMonth","amount3Months","amount6Months","amountYear","perc","monthColor","month3","month3Color","month6","month6Color","year","yearColor","labelTextColorModifiers","gridYValue","_ref","labels","showAPYDisclaimer","verticalAlign","zIndex","AssetPage","tokenFees","idleTokenPrice","userHasFunds","availableGovTokens","getTokenFees","getIdleTokenPrice","getTokenBalance","getUserTokenFees","getGovTokensUserTotalBalance","loadTokensInfo","availableTokensChanged","transactionsChanged","getRequiredNetwork","nexusMutualConfig","Fragment","src_DepositRedeem_DepositRedeem","ActiveCoverages","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","TransactionsList","BetaModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","iconHeight","CurveDeposit","depositSlippage","migrationContract","curveTokensBalance","migrationSucceeded","migrationContractApproved","checkMigrationContractApproved","getMigrationParams","approveCallback","migrationCallback","idleTokenBalanceChanged","toMigrate","n_coins","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","getCurveTxs","curveTxs","tokensBalance","processedTxs","firstTxTimestamp","curveTokens","currentDate","prevBalances","prevTimestamp","minChartValue","aggregatedBalancesKeys","tokensBalancesPerDate","aggregatedBalance","currTimestamp","tokensData","foundBalances","tokensBalances","momentDate","filteredTokenData","filteredBalances","lastFilteredTx","lastTokenData","lastTx","lastTxBalance","formattedDate","aggregatedBalanceParsed","aggregatedBalances","balances","yFormatDecimals","areaOpacity","areaBaselineValue","ChartCustomTooltip","ChartCustomTooltipRow","tokenInfo","formattedBalance","FundsOverviewCurve","compAPR","getCurveAvgBuyPrice","getCurveAvgSlippage","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","curveZapContract","curveAvailableTokens","changeFromToken","setSelectedToken","baseToken","getSelectedToken","urlParams","param1","getCurveZapContract","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","enabledActions","PolygonModal","getEtherscanAddressUrl","WelcomeModal","email","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","userInfo","simpleIDPassUserInfo","analytics","google","events","setTimeout","err","handleSubmit","assertThisInitialized","handleValidation","axios","post","newsletterSubscription","endpoint","then","catch","walletAddress","lastLogin","getItem","parse","signedUp","parentNode","classList","onSubmit","green","Field","Input","outline","header_styles","input","ButtonLoader","buttonText","isLoading","gradientButton","MigrateModal","dontShowAgain","toggleDontShowAgain","removeStoredItem","migrate","tokenMigrationRoute","fieldProps","protocolsTokensBalances","UpgradeModal","_args3","convert","convertTool","tokensToMigrate","tokenKey","oldContractBalanceFormatted","oldIdleTokensToMigrate","newTokenConfig","RiskAdjustedModal","getAppUrl","Dashboard","menu","baseRoute","clickEvent","menuOpened","currentRoute","pageComponent","currentSection","showResetButton","pageComponentProps","timeoutId","modalTitle","modalContent","logout","setConnector","extraicons","comingSoon","enabledEnvs","currentEnv","imageInfo","selected","bgColor","visible","imageDark","iconDark","imageInactive","iconInactive","imageInactiveDark","iconInactiveDark","stakePolygonConfig","curveParams","CurveStrategy","stakeConfig","gaugesConfig","statsInfo","isExternalLink","networkInitialized","section","param2","param3","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","sendGoogleAnalyticsPageview","clearTimeout","setCurrentSection","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","paramsChanged","requiredNetworkChanged","network","networkChanged","contractsChanged","prevParams","_this4","checkRiskAdjusted","checkPolygonModal","checkBetaApproval","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","isPolygon","isPolygonApproved","getStoredItem","isOriginUrl","checkUrlOrigin","isBetaApproved","showUpgradeModal","getTokensToMigrate","getProtocolsTokensBalances","welcomeIsOpen","welcomeModalProps","currTime","lastTime","frequency","migrateModalConfig","migrateModalEnabled","showMigrateModal","isDashboard","replace","newRoute","location","scrollTo","routeParts","setMenu","dir","_this5","networkSupported","isSupportedNetwork","PageComponent","networkCorrect","isCorrectNetwork","current","Swipeable","swipeCallback","styles","DashboardMenu","closeMenu","DashboardHeader","toggleMenu","overflowY","overflowX","justifyItems","src_FlashNews_FlashNews","addEthereumChain","components_PolygonModal","components_BetaModal","components_RiskAdjustedModal","components_UpgradeModal","components_MigrateModal","TooltipModal","content","components_WelcomeModal","simpleID","initSimpleID","baseTokenName"],"mappings":"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","file":"static/js/7.4b4037b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Dashboard_bg__1vL3e\",\"bg-top-left\":\"Dashboard_bg-top-left__1qN1S\",\"bg-bottom-right\":\"Dashboard_bg-bottom-right__1zgZD\",\"bg-noise\":\"Dashboard_bg-noise__Rbjg-\",\"submenu\":\"Dashboard_submenu__QOrCp\",\"opened\":\"Dashboard_opened__6MG0R\"};","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass FlashNews extends Component {\n\n  state = {\n    activeNews:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n\n    const gaugesConfg = this.functionsUtil.getGlobalConfig([\"tools\", \"gauges\"]);\n    const stakingConfig = this.functionsUtil.getGlobalConfig([\"tools\", \"stake\"]);\n    // const stakingPolygonConfig = this.functionsUtil.getGlobalConfig([\"tools\", \"stakePolygon\"]);\n\n    const flashNews = {\n      1: [\n        {\n          name: \"Governance Forum\",\n          icon: \"LightbulbOutline\",\n          text: `Do you have any idea to improve the Idle Protocol? Let's discuss it in our`,\n          link: {\n            text: `Governance Forum`,\n            url: this.functionsUtil.getGlobalConfig([\"forumURL\"])\n          }\n        },\n        {\n          icon: stakingConfig.icon,\n          name: stakingConfig.label,\n          text: `You can now stake your $IDLE token and take part of the fee-sharing for long-term holders.`,\n          link: {\n            text: `Stake Now`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${stakingConfig.route}`)\n          }\n        },\n        {\n          name: gaugesConfg.label,\n          image: gaugesConfg.image,\n          text: `stkIDLE Gauges are now live at full throttle with $IDLE rewards!`,\n          link: {\n            text: `Go to Gauges`,\n            url: this.functionsUtil.getDashboardSectionUrl(`gauges`)\n          }\n        }\n      ],\n      137: [\n        /*\n        {\n          icon: stakingPolygonConfig.icon,\n          name: stakingPolygonConfig.label,\n          text: `SushiSwap LP Staking on Polygon is now available!`,\n          link: {\n            text: `Stake Now`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${stakingPolygonConfig.route}`)\n          }\n        }\n        */\n      ]\n    };\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const activeFlashNews = flashNews[currentNetworkId];\n    const activeNews = activeFlashNews.length ? activeFlashNews[Math.floor(Math.random() * activeFlashNews.length)] : null;\n    this.setState({\n      activeNews\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return this.state.activeNews ? (\n      <DashboardCard\n        cardProps={{\n          p: 2,\n          mb: 3,\n          width: 1,\n          backgroundColor:'flashBg'\n        }}\n        isActive={true}\n        isInteractive={false}\n      >\n        <Flex\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          flexDirection={[\"column\", \"row\"]}\n        >\n          {\n            this.state.activeNews.icon ? (\n              <Icon\n                mr={1}\n                size={\"1.2em\"}\n                color={\"flashColor\"}\n                name={this.state.activeNews.icon}\n              />\n            ) : this.state.activeNews.image && (\n              <Image\n                mr={1}\n                width={\"1.2em\"}\n                heght={\"1.2em\"}\n                src={this.state.activeNews.image}\n              />\n            )\n          }\n          <Text\n            fontSize={2}\n            fontWeight={3}\n            color={\"flashColor\"}\n            textAlign={\"center\"}\n          >\n            {this.state.activeNews.text}\n          </Text>\n          <ExtLink\n            ml={1}\n            fontSize={2}\n            fontWeight={3}\n            color={\"primary\"}\n            hoverColor={\"primary\"}\n            href={this.state.activeNews.link.url}\n            onClick={e =>\n              this.functionsUtil.sendGoogleAnalyticsEvent({\n                eventCategory: \"UI\",\n                eventAction: \"flashNews\",\n                eventLabel: this.state.activeNews.name\n              })\n            }\n          >\n            <Flex\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"center\"}\n            >\n              {this.state.activeNews.link.text}\n              <Icon\n                ml={1}\n                size={\"0.9em\"}\n                color={\"primary\"}\n                name={\"OpenInNew\"}\n              />\n              .\n            </Flex>\n          </ExtLink>\n        </Flex>\n      </DashboardCard>\n    ) : null;\n  }\n}\n\nexport default FlashNews;\n","import moment from 'moment';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResults_aa_Changed = prevProps.apiResults_aa !== this.props.apiResults_aa;\n    const apiResults_bb_Changed = prevProps.apiResults_bb !== this.props.apiResults_bb;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged||apiResults_aa_Changed||apiResults_bb_Changed){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || (!this.props.apiResults&&!this.props.apiResults_aa)){\n      return false;\n    }\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_aa=this.props.apiResults_aa;\n    const apiResults_bb=this.props.apiResults_bb;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    const totalItems = apiResults_aa ? apiResults_aa.length : apiResults.length;\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let daysCount = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let daysFrequency = null;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n    let axisBottomMaxValues = 12;\n\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    switch (this.props.chartMode){\n\n      case 'APR_TRANCHE':\n\n        maxChartValue = 0;\n        chartData.push({\n          id:`APR ${seniorTrancheName}`,\n          color:tranchesConfig.AA.color.hex,\n          data:apiResults_aa.map((d,i) => {\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n            maxChartValue = Math.max(maxChartValue,y);\n            return { x, y };\n          })\n        });\n        chartData.push({\n          id:`APR ${juniorTrancheName}`,\n          color:tranchesConfig.BB.color.hex,\n          data:apiResults_bb.map((d,i) => {\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n            maxChartValue = Math.max(maxChartValue,y);\n            return { x, y };\n          })\n        });\n\n        /*\n        const csv = {};\n        chartData.forEach( protocolData => {\n          protocolData.data.forEach( d => {\n            if (!csv[d.x]){\n              csv[d.x] = {};\n            }\n            csv[d.x][protocolData.id] = d.y;\n          });\n        });\n\n        const csv_ordered = Object.keys(csv).sort().reduce(\n          (obj, key) => { \n            obj[key] = csv[key]; \n            return obj;\n          }, \n          {}\n        );\n\n        const csv_array = [];\n        const csv_header = [];\n        csv_header.push('Date');\n        chartData.forEach( pData => csv_header.push(pData.id) );\n        csv_array.push(csv_header.join(','));\n\n        Object.keys(csv_ordered).forEach( date => {\n          const csv_row = [date];\n          chartData.forEach( cData => {\n            if (csv_ordered[date][cData.id]){\n              csv_row.push(parseFloat(csv_ordered[date][cData.id]).toFixed(4));\n            } else {\n              csv_row.push('0.0000');\n            }\n          });\n          csv_array.push(csv_row.join(','));\n        });\n\n        console.log('-------DEBUG-------');\n        console.log(csv_ordered);\n        console.log('-------START-------');\n        console.log(csv_array.join('\\n'));\n        console.log('-------END-------');\n        */\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        const Values = chartData[chartData.length-1].data.sort((a,b) => (moment(a.x,\"YYYY/MM/DD HH:mm\").isBefore(moment(b.x,\"YYYY/MM/DD HH:mm\")) ? -1 : 1));\n        daysCount = moment(Values[Values.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(Values[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        // console.log('APR',chartValues,chartValues[0].x,chartValues[chartValues.length-1].x,daysCount,daysFrequency);\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            tickPadding: 15,\n            legendOffset: 0,\n            orient: 'bottom',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 110 : 120,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_TRANCHE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstPriceAA = null;\n        let firstPriceBB = null;\n        let chartDataAA=null;\n        let chartDataBB=null;\n        let firstBlock=null;\n\n        chartDataAA = apiResults_aa.map((d,i) => {\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.virtualPrice,this.props.tokenConfig.decimals);\n\n          if (!firstPriceAA){\n            firstPriceAA = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstPriceAA).minus(1).times(100));\n\n            days = (d.timeStamp-apiResults_aa[0].timeStamp)/86400;\n            const earning = tokenPrice.div(firstPriceAA).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstBlock === null){\n            firstBlock = parseInt(d.blockNumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = parseInt(d.blockNumber);\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        chartDataBB = apiResults_bb.map((d,i) => {\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.virtualPrice,this.props.tokenConfig.decimals);\n\n          if (!firstPriceBB){\n            firstPriceBB = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstPriceBB).minus(1).times(100));\n\n            days = (d.timeStamp-apiResults_bb[0].timeStamp)/86400;\n            const earning = tokenPrice.div(firstPriceBB).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blockNumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = parseInt(d.blockNumber);\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n        chartDataAA.splice(0,1);\n\n        \n        chartData.push({\n          id:`Performance ${seniorTrancheName}`,\n          color: tranchesConfig.AA.color.hex,\n          data: chartDataAA\n        });\n\n        chartData.push({\n          id:`Performance ${juniorTrancheName}`,\n          color: tranchesConfig.BB.color.hex,\n          data: chartDataBB\n        });\n     \n\n        // Set chart type\n        chartType = Line;\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 12;\n        daysCount = moment(chartDataAA[chartDataAA.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartDataAA[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            tickValues:`every day`,\n            legendPosition: 'middle',\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              itemWidth: this.props.isMobile ? 70 : 160,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'VOL_TRANCHE':\n        let divergingData = {};\n\n        const startTimestampA = parseInt(apiResults_unfiltered[0].timeStamp);\n        const endTimestampA = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestampA;timestamp<=endTimestampA;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timeStamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.totalSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timeStamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.totalSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        }).sort((a,b) => (a.timestamp < b.timestamp ? -1 : 1));\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        });\n\n        chartType = Bar;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[chartData.length-1].date,\"YYYY/MM/DD\").diff(moment(chartData[0].date,\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD').format('MMM DD')\n              }\n            },\n            legendPosition: 'middle',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: this.props.theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: this.props.theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: this.props.theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[this.props.theme.colors.transactions.action.deposit, this.props.theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.data.timestamp*1000).format('MMM DD HH:ss');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,4)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,4)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={this.props.theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={this.props.theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'VOL':\n        divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        }).sort((a,b) => (a.timestamp < b.timestamp ? -1 : 1));\n\n        maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        });\n\n        chartType = Bar;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[chartData.length-1].date,\"YYYY/MM/DD\").diff(moment(chartData[0].date,\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD').format('MMM DD')\n              }\n            },\n            legendPosition: 'middle',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: this.props.theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: this.props.theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: this.props.theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[this.props.theme.colors.transactions.action.deposit, this.props.theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.data.timestamp*1000).format('MMM DD HH:ss');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={this.props.theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={this.props.theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case'AUM_TRANCHE':\n\n        maxChartValue = 0;\n        chartData.push({\n          id:`AUM ${seniorTrancheName}`,\n          color: tranchesConfig.AA.color.hex,\n          data: apiResults_aa.map((d,i) => {\n\n            const aum_aa = this.functionsUtil.fixTokenDecimals(d.contractValue,18);\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum_aa.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n        chartData.push({\n          id:`AUM ${juniorTrancheName}`,\n          color: tranchesConfig.BB.color.hex,\n          data: apiResults_bb.map((d,i) => {\n\n            const aum_bb = this.functionsUtil.fixTokenDecimals(d.contractValue,18);\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum_bb.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 90 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                fontSize: this.props.isMobile ? 12: 14,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const contractValue = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={`${contractValue} ${this.props.selectedToken}`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n        break;\n        case'COVERAGE_TRANCHE':\n\n          maxChartValue = 0;\n          chartData.push({\n            id:'Coverage',\n            color: tranchesConfig.AA.color.hex,\n            data: apiResults_aa.map((d,i) => {\n              const aum_aa = this.functionsUtil.fixTokenDecimals(d.contractValue,18);\n              const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n              const aum_bb=apiResults_bb[i]?(this.functionsUtil.fixTokenDecimals(apiResults_bb[i].contractValue,18)):this.functionsUtil.BNify(0);\n              const ratio=aum_aa>0?aum_bb.div(aum_aa):1;\n              const coverage=ratio>1?100:ratio*100\n              const y = parseFloat(coverage.toString());\n              maxChartValue = Math.max(maxChartValue,y);\n\n              return { x,y };\n            })\n          });\n\n          // Add allocation\n\n          // Set chart type\n          chartType = Line;\n\n          gridYStep = parseFloat(maxChartValue/maxGridLines);\n          gridYValues = [0];\n          for (let i=1;i<=5;i++){\n            gridYValues.push(i*gridYStep);\n          }\n\n          axisBottomIndex = 0;\n          axisBottomMaxValues = 6;\n          daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n          daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n          chartProps = {\n            xScale:{\n              type: 'time',\n              format: '%Y/%m/%d %H:%M',\n              // precision: 'hour',\n            },\n            xFormat:'time:%b %d %H:%M',\n            yFormat:v => parseFloat(v).toFixed(3)+'%',\n            yScale:{\n              type: 'linear',\n              stacked: false\n            },\n            axisLeft:{\n              legend: '',\n              tickSize: 0,\n              orient: 'left',\n              tickPadding: 10,\n              tickRotation: 0,\n              legendOffset: -70,\n              tickValues:gridYValues,\n              legendPosition: 'middle',\n              format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            },\n            axisBottom: this.props.isMobile ? null : {\n              legend: '',\n              tickSize: 0,\n              format: (value) => {\n                if (axisBottomIndex++ % daysFrequency === 0){\n                  return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n                }\n              },\n              tickPadding: 15,\n              orient: 'bottom',\n              legendOffset: 0,\n              tickValues: 'every day',\n              legendPosition: 'middle'\n            },\n            gridYValues,\n            pointSize:0,\n            useMesh:true,\n            animate:false,\n            pointLabel:\"y\",\n            curve:'linear',\n            enableArea:false,\n            enableSlices:'x',\n            enableGridX:false,\n            enableGridY:true,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            legends:[\n              {\n                itemWidth: this.props.isMobile ? 70 : 80,\n                itemHeight: 18,\n                translateX: this.props.isMobile ? -35 : 0,\n                translateY: this.props.isMobile ? 40 : 65,\n                symbolSize: 10,\n                itemsSpacing: 5,\n                direction: 'row',\n                anchor: 'bottom-left',\n                symbolShape: 'circle',\n                itemTextColor: this.props.theme.colors.legend,\n                effects: [\n                  {\n                    on: 'hover',\n                    style: {\n                      itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                    }\n                  }\n                ]\n              }\n            ],\n            theme:{\n              axis: {\n                ticks: {\n                  text: {\n                    fontSize: this.props.isMobile ? 12: 14,\n                    fontWeight:600,\n                    fill:this.props.theme.colors.legend,\n                    fontFamily: this.props.theme.fonts.sansSerif\n                  }\n                }\n              },\n              grid: {\n                line: {\n                  stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n                }\n              },\n              legends:{\n                text:{\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fill:this.props.theme.colors.legend,\n                  fontWeight:500,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            pointColor:{ from: 'color', modifiers: []},\n            margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const contractValue = point.data.yFormatted;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          label={protocolName}\n                          color={point.color}\n                          value={`${contractValue}`}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n        break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolInfo = globalConfigs.stats.protocols[protocolName];\n                        const protocolColor = 'hsl('+protocolInfo.color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            color={protocolColor}\n                            label={protocolInfo.label}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolInfo = globalConfigs.stats.protocols[foundProtocol.name];\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolInfo.label] = 1;\n                row[protocolInfo.label] = allocation;\n                row[`${protocolInfo.label}Color`] = 'hsl('+protocolInfo.color.hsl.join(',')+')';\n                // console.log(protocolInfo.label,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolInfo.label] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        const dates = Object.keys(tempData);\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 12;\n        daysCount = moment(dates[dates.length-1],\"YYYY/MM/DD\").diff(moment(dates[0],\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            legendOffset: 36,\n            orient: 'bottom-left',\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            tooltip: {\n              container:{\n                padding:'0',\n                boxShadow:'none',\n                background:'transparent',\n              },\n              tableCell:{\n                padding:'0'\n              }\n            },\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <DashboardCard\n                cardProps={{\n                  py:1,\n                  px:2,\n                  width:1,\n                }}\n              >\n                <table\n                  style={{width:'100%',borderCollapse:'collapse'}}\n                >\n                  <tbody>\n                    <tr>\n                      <td style={{padding:'3px 5px'}}>\n                        <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                      </td>\n                      <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                      <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </DashboardCard>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo && additionalProtocol.enabledTokens.includes(this.props.selectedToken)){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach((p,j) => {\n          const protocolInfo = {...globalConfigs.stats.protocols[p.name]};\n          if (!protocolInfo.enabled){\n            return;\n          }\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n          \n          chartData.push({\n            id:protocolInfo.label,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                // let protocolRate = this.functionsUtil.BNify(protocolAllocation.rate);\n\n                let protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                  if (protocolAllocation[field]){\n                    return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolAllocation[field]));\n                  }\n                  return this.functionsUtil.BNify(acc);\n                },0) : this.functionsUtil.BNify(protocolAllocation[rateField]);\n\n                const protocolPaused = protocolRate.eq(0);\n                if (!protocolPaused){\n\n                  // Aave V1 wrong rate FIX\n                  if (protocolRate.lt(0) && protocolAllocation.aaveAdditionalAPR && this.functionsUtil.BNify(protocolAllocation.aaveAdditionalAPR).gt(0)){\n                    protocolRate = protocolRate.plus(this.functionsUtil.BNify(protocolAllocation.aaveAdditionalAPR));\n                  }\n\n                  protocolRate = this.functionsUtil.fixTokenDecimals(protocolRate,18);\n\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(protocolRate);\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color:'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data:apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n            maxChartValue = Math.max(maxChartValue,y);\n            return { x, y };\n          })\n        });\n\n        /*\n        const csv = {};\n        chartData.forEach( protocolData => {\n          protocolData.data.forEach( d => {\n            if (!csv[d.x]){\n              csv[d.x] = {};\n            }\n            csv[d.x][protocolData.id] = d.y;\n          });\n        });\n\n        const csv_ordered = Object.keys(csv).sort().reduce(\n          (obj, key) => { \n            obj[key] = csv[key]; \n            return obj;\n          }, \n          {}\n        );\n\n        const csv_array = [];\n        const csv_header = [];\n        csv_header.push('Date');\n        chartData.forEach( pData => csv_header.push(pData.id) );\n        csv_array.push(csv_header.join(','));\n\n        Object.keys(csv_ordered).forEach( date => {\n          const csv_row = [date];\n          chartData.forEach( cData => {\n            if (csv_ordered[date][cData.id]){\n              csv_row.push(parseFloat(csv_ordered[date][cData.id]).toFixed(4));\n            } else {\n              csv_row.push('0.0000');\n            }\n          });\n          csv_array.push(csv_row.join(','));\n        });\n\n        console.log('-------DEBUG-------');\n        console.log(csv_ordered);\n        console.log('-------START-------');\n        console.log(csv_array.join('\\n'));\n        console.log('-------END-------');\n        */\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        const chartValues = chartData[chartData.length-1].data.sort((a,b) => (moment(a.x,\"YYYY/MM/DD HH:mm\").isBefore(moment(b.x,\"YYYY/MM/DD HH:mm\")) ? -1 : 1));\n        daysCount = moment(chartValues[chartValues.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartValues[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        // console.log('APR',chartValues,chartValues[0].x,chartValues[chartValues.length-1].x,daysCount,daysFrequency);\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            tickPadding: 15,\n            legendOffset: 0,\n            orient: 'bottom',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          if (!protocolInfo.enabled){\n            return;\n          }\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:protocolInfo.label,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let avgApy = this.functionsUtil.BNify(0);\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n\n        idleChartData = [];\n        const aaveProtocolInfo = protocols.find( p => p.name === 'aavev2' );\n\n        apiResults.forEach((d,i) => {\n\n          let idleRate = this.functionsUtil.BNify(d.idleRate);\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n          // Aave V1 wrong rate FIX\n          if (this.props.selectedToken === 'WETH' && moment(x).isSameOrBefore(moment('2021-05-19 12:20','YYYY-MM-DD HH:mm'))){\n            const aaveProtocolData = aaveProtocolInfo ? d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === aaveProtocolInfo.address.toLowerCase()\n            }) : null;\n            if (aaveProtocolData.aaveAdditionalAPR && this.functionsUtil.BNify(aaveProtocolData.aaveAdditionalAPR).gt(0)){\n              idleRate = idleRate.plus(this.functionsUtil.BNify(aaveProtocolData.aaveAdditionalAPR));\n            }\n          }\n\n          const apr = this.functionsUtil.fixTokenDecimals(idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            const daysSinceBeginning = idleChartData.length>0 ? Math.max(1,moment(d.timestamp*1000).diff(moment(idleChartData[0].x,\"YYYY/MM/DD HH:mm\"),'days')) : 1;\n            apy = parseFloat(y*365/daysSinceBeginning).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          if (apy>0){\n            idleChartData.push({ x, y, apy, blocknumber, itemPos });\n          }\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo && additionalProtocol.enabledTokens.includes(this.props.selectedToken)){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = {...globalConfigs.stats.protocols[p.name]};\n\n          // Add custom protocol info\n          if (protocolInfo.tokensProps && protocolInfo.tokensProps[this.props.selectedToken]){\n            const tokenProps = protocolInfo.tokensProps[this.props.selectedToken];\n            Object.keys(tokenProps).forEach(p => {\n              protocolInfo[p] = tokenProps[p];\n            });\n          }\n\n          if (!protocolInfo.enabled || (protocolInfo.startTimestamp && this.functionsUtil.strToMoment(protocolInfo.startTimestamp).isAfter(Date.now()))){\n            return;\n          }\n\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n          const apiResults_filtered = apiResults.filter( d => (!protocolInfo.startTimestamp || moment(protocolInfo.startTimestamp).isSameOrBefore(moment(d.timestamp*1000))) );\n\n          apiResults_filtered.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              let protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              // Aave V1 wrong rate FIX\n              if (protocolRate.lt(0) && protocolData.aaveAdditionalAPR && this.functionsUtil.BNify(protocolData.aaveAdditionalAPR).gt(0)){\n                protocolRate = protocolRate.plus(this.functionsUtil.BNify(protocolData.aaveAdditionalAPR));\n              }\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null) {\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                      y = baseProfit;\n                      apy = avgApy.toFixed(2);\n                    }\n                  }\n                }\n\n                itemIndex++;\n\n                if (prevData) {\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  const daysSinceBeginning = Math.max(1,moment(d.timestamp*1000).diff(moment(idleChartData[0].x,\"YYYY/MM/DD HH:mm\"),'days'));\n                  apy = parseFloat(y*365/daysSinceBeginning).toFixed(2);\n                  // debugger;\n\n                  // apy = avgApy.div(itemIndex+1).toFixed(2);\n                  const itemPos = Math.floor(itemIndex/totalItems*100);\n                  rowData = {\n                    x,\n                    y,\n                    apy,\n                    itemPos\n                  };\n\n                  itemIndex++;\n                  chartRow.data.push(rowData);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                // const blocknumber = d.blocknumber;\n\n              }\n            }\n          });\n          \n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n        chartData.push({\n          id:'Idle',\n          data: idleChartData,\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')'\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 12;\n        daysCount = moment(idleChartData[idleChartData.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(idleChartData[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            tickValues:`every day`,\n            legendPosition: 'middle',\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              itemWidth: this.props.isMobile ? 70 : 160,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo && additionalProtocol.enabledTokens.includes(this.props.selectedToken)){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n\n          if (!protocolInfo.enabled){\n            return;\n          }\n\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  checkRebalance = async () => {\n    this.setStateSafe({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setStateSafe({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      if (tx){\n        // Send Google Analytics event\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: 'Rebalance',\n          eventAction: this.props.selectedToken,\n        };\n\n        let txDenied = false;\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (tx.status === 'success'){\n          // Toast message\n          window.toastProvider.addMessage(`Rebalance completed`, {\n            secondaryMessage: `Now the pool is balanced!`,\n            colorTheme: 'light',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"success\",\n          });\n        } else if (!txDenied){\n          window.toastProvider.addMessage(`Rebalance error`, {\n            secondaryMessage: `The rebalance has failed, try again...`,\n            colorTheme: 'light',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\",\n          });\n        }\n      }\n\n      this.setStateSafe((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setStateSafe((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    await this.setStateSafe({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar {...this.props} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport './DateRangeModal.css';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    },\n    options:Object.keys(this.props.quickSelections).map( value => ({ value,label:this.props.quickSelections[value].label }) )\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    if (quickSelection && this.props.quickSelections[quickSelection]){\n      const quickSelectionParams = this.props.quickSelections[quickSelection];\n      startDate = endDate.clone().subtract(quickSelectionParams.value,quickSelectionParams.type);\n    } else {\n      startDate = null;\n      endDate = null;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none',\n                    color:this.props.theme.colors.counter,\n                    backgroundColor:this.props.theme.colors.cardBg\n                  }}\n                  width={'100%'}\n                  required={true}\n                  options={this.state.options}\n                  value={this.state.quickSelection}\n                  onChange={this.handleQuickSelect.bind(this)}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                className={this.props.themeMode}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import moment from 'moment';\nimport StatsChart from '../Stats/StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon } from 'rimble-ui';\nclass StatsAsset extends Component {\n\n    state = {\n        aum:null,\n        apr:null,\n        days:'-',\n        delta:null,\n        earning:null,\n        minDate:null,\n        maxDate:null,\n        carouselMax:1,\n        rebalances:'-',\n        buttonGroups:[],\n        apiResults:null,\n        carouselIndex:0,\n        idleVersion:null,\n        statsVersions:{},\n        minStartTime:null,\n        endTimestamp:null,\n        govTokensPool:null,\n        unlentBalance:null,\n        quickSelection:null,\n        startTimestamp:null,\n        endTimestampObj:null,\n        shouldRebalance:null,\n        carouselOffsetLeft:0,\n        startTimestampObj:null,\n        apiResults_unfiltered:null,\n        dateRangeModalOpened:false\n      };\n    \n      quickSelections = {\n        day:{\n          value:1,\n          type:'day',\n          label:'Last day',\n        },\n        week:{\n          value:1,\n          type:'week',\n          label:'Last week',\n        },\n        weeks:{\n          value:2,\n          type:'week',\n          label:'Last 2 weeks',\n        },\n        month:{\n          value:1,\n          type:'month',\n          label:'Last month',\n        },\n        ytd:{\n          type:'day',\n          label:'Year to date',\n          value:moment().diff(moment('01/01/YYYY','DD/MM/YYYY'),'days'),\n        },\n      };\n    \n      // Utils\n      functionsUtil = null;\n      componentUnmounted = null;\n      loadUtils(){\n        if (this.functionsUtil){\n          this.functionsUtil.setProps(this.props);\n        } else {\n          this.functionsUtil = new FunctionsUtil(this.props);\n        }\n      }\n    \n      async componentWillMount() {\n        this.loadUtils();\n        await this.loadParams();\n      }\n    \n      componentWillUnmount(){\n        this.componentUnmounted = true;\n      }\n    \n      async setStateSafe(newState,callback=null) {\n        if (!this.componentUnmounted){\n          return this.setState(newState,callback);\n        }\n        return null;\n      }\n    \n    \n      getLatestAvailableVersion(){\n        const statsVersions = globalConfigs.stats.versions;\n        let latestVersion = null;\n        Object.keys(statsVersions).forEach( version => {\n          const versionInfo = statsVersions[version];\n          if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n            latestVersion = version;\n          }\n        });\n    \n        return latestVersion;\n      }\n    \n      getVersionInfo(version){\n        if (!version){\n          version = this.state.idleVersion;\n        }\n    \n        if (!globalConfigs.stats.versions[version]){\n          return null;\n        }\n    \n        const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n    \n        if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n          const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n          Object.keys(versionInfoExtra).forEach( param => {\n            versionInfo[param] = versionInfoExtra[param];\n          });\n        }\n    \n        return versionInfo;\n      }\n    \n      async loadParams() {\n    \n        if (!this.props.selectedToken || !this.props.tokenConfig){\n          return false;\n        }\n    \n        const newState = {};\n        const { match: { params } } = this.props;\n    \n        const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n    \n        if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n          newState.selectedToken = params.customToken.toUpperCase();\n        } else {\n          newState.selectedToken = this.props.selectedToken.toUpperCase();\n        }\n    \n        newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n        newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n        newState.maxEndDate = moment();\n    \n        newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n    \n        newState.latestVersion = this.getLatestAvailableVersion();\n        newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n    \n        const versionInfo = this.getVersionInfo(newState.idleVersion);\n    \n        // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n    \n        if (newState.idleVersion && versionInfo.endTimestamp){\n          const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n          if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n            newState.endTimestampObj = newEndTimestampObj;\n            newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n          }\n    \n          if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n            newState.maxEndDate = newEndTimestampObj;\n          }\n        }\n    \n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n    \n        // Set start date\n        newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n    \n        if (newState.idleVersion && versionInfo.startTimestamp){\n          const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n          if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n            newState.startTimestampObj = newStartTimestampObj;\n            newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n          }\n    \n          if (newState.minStartTime.isBefore(newStartTimestampObj)){\n            newState.minStartTime = newStartTimestampObj;\n          }\n        }\n    \n        newState.minDate = newState.minStartTime._d;\n        newState.maxDate = newState.maxEndDate._d;\n    \n        if (newState !== this.state){\n          await this.setStateSafe(newState);\n        }\n      }\n    \n      setDateRange = (ranges,quickSelection=null) => {\n    \n        const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n    \n        let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n        let endTimestampObj = moment(ranges.endDate);\n    \n        if (startTimestampObj.isSame(endTimestampObj)){\n          endTimestampObj.add(1,'day');\n        }\n    \n        endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n    \n        if (startTimestampObj.isBefore(this.state.minStartTime)){\n          startTimestampObj = this.state.minStartTime;\n        }\n    \n        if (endTimestampObj.isAfter(this.state.maxEndDate)){\n          endTimestampObj = this.state.maxEndDate;\n        }\n    \n        const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n        const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n    \n        const newState = {\n          minStartTime,\n          endTimestamp,\n          quickSelection,\n          startTimestamp,\n          endTimestampObj,\n          startTimestampObj\n        };\n    \n        this.setStateSafe(newState);\n    \n        return newState;\n      }\n      \n      setDateRangeModal = (dateRangeModalOpened) => {\n        if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n          this.setStateSafe({\n            dateRangeModalOpened\n          });\n        }\n      }\n    \n      async componentDidMount() {\n    \n        if (!this.props.web3){\n          this.props.initWeb3();\n          return false;\n        }\n    \n        /*\n        const style = document.createElement('style');\n        style.id = 'crisp-custom-style';\n        style.type = 'text/css';\n        style.innerHTML = `\n        .crisp-client{\n          display:none !important;\n        }`;\n        document.body.appendChild(style);\n        */\n    \n        this.loadUtils();\n        await this.loadParams();\n        this.loadApiData();\n        this.loadCarousel();\n      }\n    \n      loadCarousel(){\n        const carouselMax = this.props.isMobile ? 3 : 2;\n        this.setStateSafe({\n          carouselMax\n        });\n      }\n    \n      async componentDidUpdate(prevProps,prevState) {\n        const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n        const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n        const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n        const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n        const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n        const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    \n        if (mobileChanged){\n          this.loadCarousel();\n        }\n    \n        if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n          // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n          await this.componentDidMount();\n        } else if (dateChanged){\n          this.loadApiData();\n        }\n      }\n    \n      filterTokenData = (apiResults) => {\n        return apiResults.filter((r,i) => {\n          return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n        });\n      }\n    \n      setIdleVersion = idleVersion => {\n        this.setStateSafe({\n          idleVersion\n        });\n      }\n    \n      loadApiData = async () => {\n    \n        if (!this.props.selectedToken || !this.props.tokenConfig){\n          return false;\n        }\n    \n        // Get COMP APR\n        // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n        // console.log('compAPR',compAPR.toString());\n    \n        const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n        const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    \n        const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n        let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n    \n        const apiResults = this.filterTokenData(apiResults_unfiltered);\n    \n        // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n    \n        if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n          return false;\n        }\n    \n        const firstResult = apiResults[0];\n        const lastResult = Object.values(apiResults).pop();\n    \n        window.moment = moment;\n    \n        let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n        if (days === 0){\n          days = 1;\n        }\n    \n        let apr = null;\n        let delta = 'N/A';\n    \n        const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n        const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n        const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n    \n        // Calculate AUM\n        let aum = idleTokens.times(lastIdlePrice);\n    \n        // Convert Token balance\n        aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n    \n        const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n        const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n        const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    \n        if (this.state.idleVersion === 'v4') {\n    \n          apr = apiResults.reduce( (sum,r) => {\n            const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n            return this.functionsUtil.BNify(sum).plus(idleRate);\n          },0);\n    \n          // Calculate average\n          apr = apr.div(apiResults.length);\n    \n          if (compoundInfo){\n            const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n            const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n    \n            let compoundAvgApr = apiResults.reduce( (sum,r) => {\n    \n              const compoundData = r.protocolsData.find((pData,x) => {\n                return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n              });\n    \n              let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (compoundData && compoundData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(compoundData[rateField]);\n    \n              compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n    \n              return this.functionsUtil.BNify(sum).plus(compoundRate);\n            },0);\n    \n            // Calculate average\n            compoundAvgApr = compoundAvgApr.div(apiResults.length);\n    \n            // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n            // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n    \n            delta = apr.minus(compoundAvgApr);\n            if (parseFloat(delta)<0){\n              delta = 0\n            }\n            delta = delta.toFixed(2);\n          }\n    \n          apr = apr.toFixed(2);\n    \n        } else {\n          const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n          apr = earning.times(365).div(days).toFixed(2);\n    \n          if (firstCompoundData && lastCompoundData){\n            const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n            const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n            const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n            delta = earning.minus(compoundApr).times(365).div(days);\n            if (parseFloat(delta)<0){\n              delta = 0\n            }\n            delta = delta.toFixed(2);\n          }\n        }\n    \n        // Count rebalances\n        let rebalances = 0;\n        apiResults.forEach((row,index) => {\n          if (index){\n            const prevRow = apiResults[index-1];\n    \n            const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n              return this.functionsUtil.BNify(accumulator).plus(allocation);\n            },0);\n    \n            const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n              return this.functionsUtil.BNify(accumulator).plus(allocation);\n            },0);\n    \n            let hasRebalanced = false;\n            row.protocolsData.forEach( p => {\n              if (hasRebalanced){\n                return;\n              }\n              const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n              const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n              const prevAllocation = prevP ? this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n              const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n              const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n              if (allocationPerc!==prevAllocationPerc){\n                rebalances++;\n                hasRebalanced = true;\n              }\n            });\n          }\n        });\n    \n        // Add gov tokens balance to AUM\n        const availableTokens = {};\n        availableTokens[this.props.selectedToken] = this.props.tokenConfig;\n        const govTokensPool = await this.functionsUtil.getGovTokenPool(null,availableTokens,'DAI');\n        if (govTokensPool){\n          aum = aum.plus(govTokensPool);\n        }\n    \n        let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n        if (unlentBalance){\n          unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n        }\n    \n        this.setStateSafe({\n          aum,\n          apr,\n          days,\n          delta,\n          apiResults,\n          rebalances,\n          govTokensPool,\n          unlentBalance,\n          apiResults_unfiltered\n        });\n      }\n    \n      selectToken = async (strategy,token) => {\n        await this.props.setStrategyToken(strategy,token);\n        this.props.changeToken(token);\n      }\n    \n      handleCarousel = action => {\n        let carouselIndex = this.state.carouselIndex;\n        if (action==='next' && carouselIndex<this.state.carouselMax){\n          carouselIndex++;\n        } else if (action==='back' && carouselIndex>0){\n          carouselIndex--;\n        }\n    \n        const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n        const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n    \n        this.setStateSafe({\n          carouselIndex,\n          carouselOffsetLeft\n        });\n      }\n    \n\n    render() { \n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const valueProps = {\n          lineHeight:1,\n          fontSize:[4,5],\n          fontWeight:[3,4],\n          color:'statValue'\n        };\n    \n        const unitProps = {\n          ml:2,\n          lineHeight:1,\n          fontWeight:[2,3],\n          color:'statValue',\n          fontSize:[3,'23px'],\n        };\n        const tokenConfig = statsTokens[this.props.selectedToken];\n        const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n            const versionInfo = this.getVersionInfo(version);\n            return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n        }).map( version => {\n            const versionInfo = this.getVersionInfo(version);\n            return {\n            value:version,\n            label:versionInfo.label\n            }\n        });\n    \n        // const disabledCharts = tokenConfig.disabledCharts || [];\n    \n        const versionInfo = this.getVersionInfo(this.state.idleVersion);\n        let performanceTooltip = null;\n        if (this.state.idleVersion && versionInfo){\n            const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n            performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n        }\n        const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n    \n        return (\n            <Flex\n            p={0}\n            width={1}\n            flexDirection={'column'}\n            >\n            \n            <Box\n                mb={[3,4]}\n            >\n                <Flex\n                flexDirection={['column','row']}\n                >\n                <Flex\n                    width={[1,0.4]}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    showPathMobile={true}\n                    text={'ASSETS OVERVIEW'}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('stats') }\n                    path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                  />\n                </Flex>\n                <Flex\n                    mt={[3,0]}\n                    width={[1,0.6]}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','space-between']}\n                >\n                    <Flex\n                    width={[1,0.26]}\n                    flexDirection={'column'}\n                    >\n                    <GenericSelector\n                        innerProps={{\n                        p:1,\n                        height:['100%','46px'],\n                        }}\n                        name={'idle-version'}\n                        options={versionsOptions}\n                        defaultValue={versionDefaultValue}\n                        onChange={ v => this.setIdleVersion(v) }\n                    />\n                    </Flex>\n                    <Flex\n                    mt={[3,0]}\n                    width={[1,0.3]}\n                    flexDirection={'column'}\n                    >\n                    <AssetSelector\n                        innerProps={{\n                        p:1\n                        }}\n                        {...this.props}\n                    />\n                    </Flex>\n                    <Flex\n                    mt={[3,0]}\n                    width={[1,0.39]}\n                    flexDirection={'column'}\n                    >\n                    <DashboardCard\n                        cardProps={{\n                        p:1,\n                        display:'flex',\n                        alignItems:'center',\n                        height:['46px','100%'],\n                        justifyContent:'center'\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setDateRangeModal(true) }\n                    >\n                        <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        >\n                        {\n                        this.state.quickSelection\n                        ?\n                            this.quickSelections[this.state.quickSelection].label\n                        : this.state.startTimestampObj && this.state.endTimestampObj &&\n                            `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                        }\n                        </Text>\n                    </DashboardCard>\n                    </Flex>\n                </Flex>\n                </Flex>\n            </Box>\n            {\n                !tokenConfig.enabled ? (\n                <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                >\n                    <DashboardCard\n                    cardProps={{\n                        p:3,\n                        width:[1,0.5],\n                    }}\n                    >\n                    <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                    >\n                        <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'DoNotDisturb'}\n                        />\n                        <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                        >\n                        Stats for {this.props.selectedToken} are not available!\n                        </Text>\n                    </Flex>\n                    </DashboardCard>\n                </Flex>\n                ) : this.state.idleVersion && this.functionsUtil.strToMoment(versionInfo.startTimestamp).isAfter(Date.now()) ? (\n                <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                >\n                    <DashboardCard\n                    cardProps={{\n                        p:3,\n                        width:[1,0.5],\n                    }}\n                    >\n                    <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                    >\n                        <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'AccessTime'}\n                        />\n                        <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                        >\n                        Idle Stats {this.state.idleVersion} will be available shortly!\n                        </Text>\n                    </Flex>\n                    </DashboardCard>\n                </Flex>\n                ) : this.functionsUtil.strToMoment(tokenConfig.startTimestamp).isAfter(Date.now()) ? (\n                <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                >\n                    <DashboardCard\n                    cardProps={{\n                        p:3,\n                        width:[1,0.5],\n                    }}\n                    >\n                    <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                    >\n                        <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'AccessTime'}\n                        />\n                        <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                        >\n                        Stats for {this.props.selectedToken} will be available shortly!\n                        </Text>\n                    </Flex>\n                    </DashboardCard>\n                </Flex>\n                ) : (\n                <Box\n                    width={1}\n                >\n                    <Box\n                    mt={[3,0]}\n                    mb={[3,4]}\n                    >\n                    <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                    >\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            title={'Asset Under Management'}\n                            label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                            labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                        >\n                            <SmartNumber\n                            precision={2}\n                            type={'money'}\n                            {...valueProps}\n                            unitProps={unitProps}\n                            number={this.state.aum}\n                            flexProps={{\n                                alignItems:'baseline',\n                                justifyContent:'flex-start'\n                            }}\n                            unit={this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'conversionRateField']) ? '$' : null}\n                            />\n                        </StatsCard>\n                        </Flex>\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            title={'Avg APY'}\n                            label={'Annualized'}\n                        >\n                            <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            >\n                            <VariationNumber\n                                direction={'up'}\n                                iconPos={'right'}\n                                iconSize={'1.8em'}\n                                justifyContent={'flex-start'}\n                                width={1}\n                                >\n                                <Text\n                                lineHeight={1}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                                fontSize={[4,5]}\n                                >\n                                {this.state.apr}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                                </Text>\n                            </VariationNumber>\n                            </Flex>\n                        </StatsCard>\n                        </Flex>\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            title={'Overperformance on Compound'}\n                            label={'Annualized'}\n                        >\n                            {\n                            this.state.delta && !isNaN(this.state.delta) ? (\n                                <VariationNumber\n                                direction={'up'}\n                                iconPos={'right'}\n                                iconSize={'1.8em'}\n                                justifyContent={'flex-start'}\n                                >\n                                <Text\n                                    lineHeight={1}\n                                    fontSize={[4,5]}\n                                    fontWeight={[3,4]}\n                                    color={'statValue'}\n                                >\n                                    {this.state.delta}\n                                    <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                                </Text>\n                                </VariationNumber>\n                            ) : (\n                                <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                                >\n                                {this.state.delta}\n                                </Text>\n                            )\n                            }\n                        </StatsCard>\n                        </Flex>\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            label={' '}\n                            title={'Rebalances'}\n                            value={this.state.rebalances.toString()}\n                        />\n                        </Flex>\n                        {\n                        /*\n                        <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                        <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                            <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                            <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                            <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                                {this.state.currApr}\n                                <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                            </Flex>\n                        </Card>\n                        </Flex>\n                        <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                        <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                            <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                            <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                            <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                                {this.state.days}\n                            </Text>\n                            </Flex>\n                        </Card>\n                        </Flex>\n                        */\n                        }\n                    </Flex>\n                    </Box>\n    \n                    <DashboardCard\n                    title={'Historical Performance'}\n                    description={performanceTooltip}\n                    cardProps={{\n                        mb:[3,4]\n                    }}\n                    >\n                    <Flex id='chart-PRICE' width={1} mb={3}>\n                        <StatsChart\n                        height={ 350 }\n                        {...this.state}\n                        parentId={'chart-PRICE'}\n                        theme={this.props.theme}\n                        isMobile={this.props.isMobile}\n                        contracts={this.props.contracts}\n                        themeMode={this.props.themeMode}\n                        apiResults={this.state.apiResults}\n                        idleVersion={this.state.idleVersion}\n                        selectedToken={this.props.selectedToken}\n                        apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                        />\n                    </Flex>\n                    </DashboardCard>\n    \n                    <DashboardCard\n                    cardProps={{\n                        pb:3,\n                        mb:[3,4]\n                    }}\n                    >\n                    <Flex\n                        flexDirection={['column','row']}\n                        justifyContent={'space-between'}\n                    >\n                        {\n                        this.state.idleVersion === this.state.latestVersion && \n                        <Flex\n                            pt={2}\n                            width={[1,1/3]}\n                            id={'allocation-chart'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'flex-start'}\n                        >\n                            <AllocationChart\n                            height={310}\n                            {...this.props}\n                            parentId={'allocation-chart'}\n                            />\n                            <Rebalance\n                            {...this.props}\n                            />\n                        </Flex>\n                        }\n                        <Flex\n                        mb={[0,3]}\n                        id={'chart-ALL'}\n                        pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                        width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                        >\n                        <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                            <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={[3,4]}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                            >\n                            Allocations over time\n                            </Heading.h4>\n                            <StatsChart\n                            height={350}\n                            {...this.state}\n                            chartMode={'ALL'}\n                            parentId={'chart-ALL'}\n                            theme={this.props.theme}\n                            isMobile={this.props.isMobile}\n                            themeMode={this.props.themeMode}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                        </Flex>\n                        </Flex>\n                    </Flex>\n                    </DashboardCard>\n    \n                    <Flex\n                    position={'relative'}\n                    >\n                    <Flex\n                        width={1}\n                        id={'carousel-container'}\n                        justifyContent={'flex-end'}\n                    >\n                        <RoundIconButton\n                        buttonProps={{\n                            mr:3\n                        }}\n                        iconName={'ArrowBack'}\n                        disabled={this.state.carouselIndex === 0}\n                        handleClick={ e => this.handleCarousel('back') }\n                        />\n                        <RoundIconButton\n                        iconName={'ArrowForward'}\n                        handleClick={ e => this.handleCarousel('next') }\n                        disabled={this.state.carouselIndex === this.state.carouselMax}\n                        />\n                    </Flex>\n                    <Flex\n                        mt={5}\n                        height={'400px'}\n                        position={'absolute'}\n                        id={'carousel-cursor'}\n                        width={['444%','200%']}\n                        justifyContent={'flex-start'}\n                        left={this.state.carouselOffsetLeft}\n                        style={{\n                        transition:'left 0.3s ease-in-out'\n                        }}\n                    >\n                        <DashboardCard\n                        cardProps={{\n                            mr:4,\n                            height:'fit-content',\n                            style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        >\n                        <Flex\n                            width={1}\n                            id='chart-AUM'\n                        >\n                            <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            >\n                            <Heading.h4\n                                ml={3}\n                                mt={3}\n                                mb={2}\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                                color={'dark-gray'}\n                                lineHeight={'initial'}\n                            >\n                                Asset Under Management\n                            </Heading.h4>\n                            <StatsChart\n                                height={300}\n                                {...this.state}\n                                chartMode={'AUM'}\n                                parentId={'chart-AUM'}\n                                theme={this.props.theme}\n                                isMobile={this.props.isMobile}\n                                themeMode={this.props.themeMode}\n                                contracts={this.props.contracts}\n                                apiResults={this.state.apiResults}\n                                idleVersion={this.state.idleVersion}\n                                apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                            </Flex>\n                        </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                        cardProps={{\n                            mr:4,\n                            height:'fit-content',\n                            style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        >\n                        <Flex id='chart-APR' width={1}>\n                            <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            >\n                            <Heading.h4\n                                mb={2}\n                                ml={3}\n                                mt={3}\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                                color={'dark-gray'}\n                                lineHeight={'initial'}\n                            >\n                                APRs\n                            </Heading.h4>\n                            <StatsChart\n                                height={300}\n                                {...this.state}\n                                chartMode={'APR'}\n                                parentId={'chart-APR'}\n                                theme={this.props.theme}\n                                isMobile={this.props.isMobile}\n                                themeMode={this.props.themeMode}\n                                contracts={this.props.contracts}\n                                apiResults={this.state.apiResults}\n                                idleVersion={this.state.idleVersion}\n                                apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                            </Flex>\n                        </Flex>\n                        </DashboardCard>\n                        {\n                        /*\n                        !disabledCharts.includes('score') &&\n                            <DashboardCard\n                            cardProps={{\n                                mr:4,\n                                height:'fit-content',\n                                style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                            }}\n                            title={'Risk Score'}\n                            description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                            titleParentProps={{\n                                ml:16,\n                                mt:16\n                            }}\n                            >\n                            <Flex id='chart-SCORE' width={1}>\n                                <Flex\n                                mb={3}\n                                width={1}\n                                flexDirection={'column'}\n                                alignItems={'flex-start'}\n                                justifyContent={'center'}\n                                >\n                                <StatsChart\n                                    height={300}\n                                    {...this.state}\n                                    chartMode={'SCORE'}\n                                    parentId={'chart-SCORE'}\n                                    theme={this.props.theme}\n                                    isMobile={this.props.isMobile}\n                                    themeMode={this.props.themeMode}\n                                    contracts={this.props.contracts}\n                                    apiResults={this.state.apiResults}\n                                    idleVersion={this.state.idleVersion}\n                                    apiResults_unfiltered={this.state.apiResults_unfiltered}\n                                />\n                                </Flex>\n                            </Flex>\n                            </DashboardCard>\n                            */\n                        }\n                        <DashboardCard\n                        cardProps={{\n                            mr:4,\n                            height:'fit-content',\n                            style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        >\n                        <Flex id='chart-VOL' width={1}>\n                            <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            >\n                            <Heading.h4\n                                mb={2}\n                                ml={3}\n                                mt={3}\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                                color={'dark-gray'}\n                                lineHeight={'initial'}\n                            >\n                                Volume\n                            </Heading.h4>\n                            <StatsChart\n                                height={300}\n                                {...this.state}\n                                chartMode={'VOL'}\n                                parentId={'chart-VOL'}\n                                theme={this.props.theme}\n                                isMobile={this.props.isMobile}\n                                themeMode={this.props.themeMode}\n                                contracts={this.props.contracts}\n                                apiResults={this.state.apiResults}\n                                idleVersion={this.state.idleVersion}\n                                apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                            </Flex>\n                        </Flex>\n                        </DashboardCard>\n                    </Flex>\n                    </Flex>\n                </Box>\n                )\n            }\n            <DateRangeModal\n                {...this.props}\n                minDate={this.state.minDate}\n                maxDate={this.state.maxDate}\n                handleSelect={this.setDateRange}\n                quickSelections={this.quickSelections}\n                isOpen={this.state.dateRangeModalOpened}\n                closeModal={e => this.setDateRangeModal(false)}\n                startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n                endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n            />\n            </Flex>\n        );\n        }\n    \n}\nexport default StatsAsset","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass TrancheSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async onChange(token){\n    let selectedProtocol;\n    Object.keys(this.props.availableTranches).map(protocol=> {\n        Object.keys(this.props.availableTranches[protocol]).map(t => {\n            if(token===t)\n            selectedProtocol=protocol;\n            return 0;\n            });\n            return 0;\n        });\n    await this.props.changeProtocolToken(selectedProtocol,token);\n  }\n  loadComponents(){\n    \n    let opt=[];\n    Object.keys(this.props.availableTranches).map(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).map(t => {\n            const tokenConfig=this.props.availableTranches[protocol][t];\n            opt.push({\n                value:t,\n                label:t,\n                tokenConfig\n                });\n            return 0;\n            });\n            return 0;\n          });\n    const options=opt;\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTranchesChanged = JSON.stringify(Object.keys(prevProps.availableTranches)) !== JSON.stringify(Object.keys(this.props.availableTranches));\n    if (availableTranchesChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTranches || !Object.keys(this.props.availableTranches).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={this.onChange.bind(this)}\n      />\n    );\n  }\n}\n\nexport default TrancheSelector;\n","import moment from 'moment';\nimport StatsChart from '../Stats/StatsChart';\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Heading, Box, Icon  } from 'rimble-ui';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport TrancheSelector from '../TrancheSelector/TrancheSelector';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\n\nclass StatsTranche extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    minStartTime:null,\n    endTimestamp:null,\n    apiResults_aa:null,\n    apiResults_bb:null,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    seniorTrancheApy:null,\n    juniorTrancheApy:null,\n    startTimestampObj:null,\n    dateRangeModalOpened:false,\n    apiResults_unfiltered:null,\n    seniorTrancheConverage:null,\n    apiResults_unfiltered_aa:null,\n    apiResults_unfiltered_bb:null,\n  };\n\n  quickSelections = {\n    day:{\n      value:1,\n      type:'day',\n      label:'Last day',\n    },\n    week:{\n      value:1,\n      type:'week',\n      label:'Last week',\n    },\n    weeks:{\n      value:2,\n      type:'week',\n      label:'Last 2 weeks',\n    },\n    month:{\n      value:1,\n      type:'month',\n      label:'Last month',\n    },\n    ytd:{\n      type:'day',\n      label:'Year to date',\n      value:moment().diff(moment('01/01/YYYY','DD/MM/YYYY'),'days'),\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n    await this.loadApiData();\n  }\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n   \n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    // console.log('loadParams',params,this.props);\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment('2021-12-01','YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'startTimestamp']);\n\n    let startTimestampObj = minStartTime ? (moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime) : moment(ranges.startDate);\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n  \n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 4 : 3;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedProtocol,this.props.selectedToken,this.props.tokenConfig);\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const protocolChanged = prevProps.selectedProtocol !== this.props.selectedProtocol;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || protocolChanged){\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timeStamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timeStamp <= this.state.endTimestamp);\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.selectedProtocol || !this.props.selectedStrategy || !this.props.tokenConfig){\n     \n      return false;\n    }\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    let apiResults_unfiltered_aa = await this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp);\n    let apiResults_unfiltered_bb = await this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp);\n\n    const apiResults_aa = this.filterTokenData(apiResults_unfiltered_aa);\n    const apiResults_bb = this.filterTokenData(apiResults_unfiltered_bb);\n    if (!apiResults_aa || !apiResults_unfiltered_aa || !apiResults_aa.length || !apiResults_unfiltered_aa.length || !apiResults_bb || !apiResults_unfiltered_bb || !apiResults_bb.length || !apiResults_unfiltered_bb.length){\n      return false;\n    }\n  \n    const firstResult_aa = Object.values(apiResults_aa)[0];\n    const firstResult_bb = Object.values(apiResults_bb)[0];\n    const lastResult_aa = Object.values(apiResults_aa).pop();\n    const lastResult_bb = Object.values(apiResults_bb).pop();\n\n    const aum_aa = this.functionsUtil.fixTokenDecimals(lastResult_aa.contractValue,this.props.tokenConfig.decimals);\n    const aum_bb = this.functionsUtil.fixTokenDecimals(lastResult_bb.contractValue,this.props.tokenConfig.decimals);\n    const aum = await this.functionsUtil.convertTrancheTokenBalance(aum_aa.plus(aum_bb),this.props.tokenConfig);\n\n    const firstAAPrice = this.functionsUtil.fixTokenDecimals(firstResult_aa.virtualPrice,this.props.tokenConfig.decimals);\n    const lastAAPrice = this.functionsUtil.fixTokenDecimals(lastResult_aa.virtualPrice,this.props.tokenConfig.decimals);\n    const seniorTrancheApy = lastAAPrice.div(firstAAPrice).minus(1).times(100).toFixed(2);\n\n    const firstBBPrice = this.functionsUtil.fixTokenDecimals(firstResult_bb.virtualPrice,this.props.tokenConfig.decimals);\n    const lastBBPrice = this.functionsUtil.fixTokenDecimals(lastResult_bb.virtualPrice,this.props.tokenConfig.decimals);\n    const juniorTrancheApy = lastBBPrice.div(firstBBPrice).minus(1).times(100).toFixed(2);\n\n    const seniorTrancheConverage = Math.min(aum_bb.div(aum_aa).times(100),100).toFixed(2);\n\n    /*\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    \n\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    apr = apiResults.reduce( (sum,r) => {\n      const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n      return this.functionsUtil.BNify(sum).plus(idleRate);\n    },0);\n\n    // Calculate average\n    apr = apr.div(apiResults.length);\n    apr = apr.toFixed(2);\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = prevP ? this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const availableTokens = {};\n    availableTokens[this.props.selectedToken] = this.props.tokenConfig;\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,availableTokens,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n    */\n    this.setStateSafe({\n      // apr,\n      // days,\n      // delta,\n      // apiResults,\n      // rebalances,\n      // govTokensPool,\n      // unlentBalance,\n      aum,\n      apiResults_aa,\n      apiResults_bb,\n      seniorTrancheApy,\n      juniorTrancheApy,\n      seniorTrancheConverage,\n      apiResults_unfiltered_aa,\n      apiResults_unfiltered_bb\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n\nrender() {\n\n  const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n  const valueProps = {\n    lineHeight:1,\n    fontSize:[4,5],\n    fontWeight:[3,4],\n    color:'statValue'\n  };\n\n  const unitProps = {\n    ml:2,\n    lineHeight:1,\n    fontWeight:[3,4],\n    color:'statValue',\n    fontSize:[3,5],\n  };\n\n  const tokenConfig = statsTokens[this.props.selectedToken.toUpperCase()];\n\n  const seniorTrancheName = this.functionsUtil.capitalize(this.functionsUtil.getGlobalConfig(['tranches','AA','baseName']));\n  const juniorTrancheName = this.functionsUtil.capitalize(this.functionsUtil.getGlobalConfig(['tranches','BB','baseName']));\n\n  // const disabledCharts = tokenConfig.disabledCharts || [];\n\n  let performanceTooltip = null;\n\n  return (\n      <Flex\n        p={0}\n        width={1}\n        flexDirection={'column'}\n      >\n        <Box\n          mb={[3,4]}\n        >\n          <Flex\n            flexDirection={['column','row']}\n          >\n            <Flex\n                width={[1,0.4]}\n            >\n              <Breadcrumb\n                {...this.props}\n                showPathMobile={true}\n                text={'ASSETS OVERVIEW'}\n                isMobile={this.props.isMobile}\n                handleClick={ e => this.props.goToSection('stats') }\n                path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n              />\n            </Flex>\n\n            <Flex\n              mt={[3,0]}\n              width={[1,0.6]}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.26]}\n                flexDirection={'column'}\n              >\n                {\n                  /*\n                  <GenericSelector\n                    innerProps={{\n                    p:1,\n                    height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                  */\n                }\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.3]}\n                flexDirection={'column'}\n              >\n                <TrancheSelector\n                  innerProps={{\n                    p:1\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.39]}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:1,\n                    display:'flex',\n                    alignItems:'center',\n                    height:['46px','100%'],\n                    justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                      {\n                        this.state.quickSelection ?\n                          this.quickSelections[this.state.quickSelection].label\n                        : this.state.startTimestampObj && this.state.endTimestampObj &&\n                          `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                      }\n                    </Text>\n                </DashboardCard>\n              </Flex>\n            </Flex>\n            </Flex>\n        </Box>\n        {\n          (!tokenConfig || !tokenConfig.enabled) ? (\n            <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                }}\n                >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'DoNotDisturb'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Stats for {this.props.selectedToken} are not available!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : this.functionsUtil.strToMoment(tokenConfig.startTimestamp).isAfter(Date.now()) ? (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Stats for {this.props.selectedToken} will be available shortly!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n            ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                justifyContent={'flex-start'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    title={'Asset Under Management'}\n                    label={`${seniorTrancheName} Tranche AUM + ${juniorTrancheName} Tranche AUM`}\n                  >\n                    <SmartNumber\n                      unit={'$'}\n                      precision={2}\n                      type={'money'}\n                      {...valueProps}\n                      color={'primary'}\n                      unitProps={unitProps}\n                      number={this.state.aum}\n                      flexProps={{\n                        alignItems:'baseline',\n                        justifyContent:'flex-start'\n                      }}\n                    />\n                  </StatsCard>\n                </Flex>\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    label={'Annualized'}\n                    title={`Performance ${seniorTrancheName} Tranche`}\n                  >\n                    <VariationNumber\n                      direction={'up'}\n                      iconPos={'right'}\n                      iconSize={'1.8em'}\n                      justifyContent={'flex-start'}\n                      width={1}\n                    >\n                      <Text\n                        lineHeight={1}\n                        fontWeight={[3,4]}\n                        color={'statValue'}\n                        fontSize={[4,5]}\n                      >\n                        {this.state.seniorTrancheApy}\n                        <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                      </Text>\n                    </VariationNumber>\n                  </StatsCard>\n                </Flex>\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    label={'Annualized'}\n                    title={`Performance ${juniorTrancheName} Tranche`}\n                  >\n                    <VariationNumber\n                      direction={'up'}\n                      iconPos={'right'}\n                      iconSize={'1.8em'}\n                      justifyContent={'flex-start'}\n                      width={1}\n                    >\n                      <Text\n                        lineHeight={1}\n                        fontWeight={[3,4]}\n                        color={'statValue'}\n                        fontSize={[4,5]}\n                      >\n                        {this.state.juniorTrancheApy}\n                        <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                      </Text>\n                    </VariationNumber>\n                  </StatsCard>\n                </Flex>\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    title={`${seniorTrancheName} Tranche coverage`}\n                    label={`Covered by ${juniorTrancheName} Tranche AUM`}\n                  >\n                    <Text\n                      lineHeight={1}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      fontSize={[4,5]}\n                    >\n                      {this.state.seniorTrancheConverage}\n                      <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                    </Text>\n                  </StatsCard>\n                </Flex>\n              </Flex>\n              <DashboardCard\n                cardProps={{\n                  mb:[3,4]\n                }}\n                title={'Historical Performance'}\n                description={performanceTooltip}\n              >\n                <Flex\n                  mb={3}\n                  width={1}\n                  id={'chart-PRICE'}\n                >\n                  <StatsChart\n                    height={ 350 }\n                    {...this.state}\n                    parentId={'chart-PRICE'}\n                    theme={this.props.theme}\n                    chartMode={'PRICE_TRANCHE'}\n                    isMobile={this.props.isMobile}\n                    contracts={this.props.contracts}\n                    themeMode={this.props.themeMode}\n                    tokenConfig={this.props.tokenConfig}\n                    apiResults_aa={this.state.apiResults_aa}\n                    apiResults_bb={this.state.apiResults_bb}\n                    selectedToken={this.props.selectedToken}\n\n                  />\n                </Flex>\n              </DashboardCard>\n              <Flex\n                position={'relative'}\n              >\n                <Flex\n                  width={1}\n                  id={'carousel-container'}\n                  justifyContent={'flex-end'}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:3\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n                <Flex\n                  mt={5}\n                  height={'400px'}\n                  position={'absolute'}\n                  id={'carousel-cursor'}\n                  width={['555%','200%']}\n                  justifyContent={'flex-start'}\n                  left={this.state.carouselOffsetLeft}\n                  style={{\n                    transition:'left 0.3s ease-in-out'\n                  }}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-AUM'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          ml={3}\n                          mt={3}\n                          mb={2}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Asset Under Management\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          parentId={'chart-AUM'}\n                          theme={this.props.theme}\n                          chartMode={'AUM_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_aa={this.state.apiResults_aa}\n                          apiResults_bb={this.state.apiResults_bb}\n                          selectedToken={this.props.selectedToken}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-APR'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          APRs\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          parentId={'chart-APR'}\n                          theme={this.props.theme}\n                          chartMode={'APR_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_aa={this.state.apiResults_aa}\n                          apiResults_bb={this.state.apiResults_bb}\n                          apiResults_unfiltered_aa={this.state.apiResults_unfiltered_aa}\n                          apiResults_unfiltered_bb={this.state.apiResults_unfiltered_bb}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-VOL'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          {seniorTrancheName} Tranche Coverage\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          parentId={'chart-VOL'}\n                          theme={this.props.theme}\n                          chartMode={'COVERAGE_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          apiResults_aa={this.state.apiResults_aa}\n                          apiResults_bb={this.state.apiResults_bb}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_unfiltered_aa={this.state.apiResults_unfiltered_aa}\n                          apiResults_unfiltered_bb={this.state.apiResults_unfiltered_bb}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-VOL-AA'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Volume {seniorTrancheName} Tranche\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          theme={this.props.theme}\n                          parentId={'chart-VOL-AA'}\n                          chartMode={'VOL_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults_aa}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered_aa}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-VOL-BB'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                           Volume {juniorTrancheName} Tranche\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          theme={this.props.theme}\n                          chartMode={'VOL_TRANCHE'}\n                          parentId={'chart-VOL-BB'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults_bb}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered_bb}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Box>\n          )\n        }\n        <DateRangeModal\n          {...this.props}\n          minDate={this.state.minDate}\n          maxDate={this.state.maxDate}\n          handleSelect={this.setDateRange}\n          quickSelections={this.quickSelections}\n          isOpen={this.state.dateRangeModalOpened}\n          closeModal={e => this.setDateRangeModal(false)}\n          startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n          endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n        />\n        </Flex>\n    );\n  }\n}\nexport default StatsTranche","import moment from 'moment';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport StatsAsset from '../StatsAsset/StatsAsset';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from \"../TranchesList/TranchesList\";\nimport StatsTranche from '../StatsTranche/StatsTranche';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    dateRangeModalOpened:false,\n    apiResults_unfiltered:null\n  };\n\n  quickSelections = {\n    day:{\n      value:1,\n      type:'day',\n      label:'Last day',\n    },\n    week:{\n      value:1,\n      type:'week',\n      label:'Last week',\n    },\n    weeks:{\n      value:2,\n      type:'week',\n      label:'Last 2 weeks',\n    },\n    month:{\n      value:1,\n      type:'month',\n      label:'Last month',\n    },\n    ytd:{\n      type:'day',\n      label:'Year to date',\n      value:moment().diff(moment('01/01/YYYY','DD/MM/YYYY'),'days'),\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setStateSafe({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if(this.props.selectedStrategy==='tranches') {\n      newState.selectedToken=this.props.selectedToken\n    } else if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken.toUpperCase()].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken.toUpperCase()].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    /*\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n    */\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const versionChanged = nextState.idleVersion !== this.state.idleVersion;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const strategyChanged = nextProps.selectedStrategy !== this.props.selectedStrategy;\n    const contractsInitialized = nextProps.contractsInitialized !== this.props.contractsInitialized;\n    const dateChanged = nextState.startTimestamp !== this.state.startTimestamp || nextState.endTimestamp !== this.state.endTimestamp;\n    const tokenChanged = nextProps.selectedToken !== this.props.selectedToken || JSON.stringify(nextProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n\n    return stateChanged || contractsInitialized || tokenChanged || strategyChanged || versionChanged || dateChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    /*\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData && compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = prevP ? this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const availableTokens = {};\n    availableTokens[this.props.selectedToken] = this.props.tokenConfig;\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,availableTokens,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n    */\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n\n  }\n  selectTranche = async (strategy,protocol,token) => {\n    await this.props.setStrategyToken(strategy,token,protocol);\n    this.props.changeProtocolToken(protocol,token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n    const idleTokenAvailableNetworks = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','availableNetworks']);\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']) && idleTokenAvailableNetworks.includes(networkId);\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tranchesEnabled = tranchesConfig.availableNetworks.includes(networkId) && (!tranchesConfig.enabledStatsNetworks || tranchesConfig.enabledStatsNetworks.includes(networkId));\n    \n    const refreshIdleSpeedConfig = this.functionsUtil.getGlobalConfig(['contract','methods','refreshIdleSpeed']);\n    const refreshIdleSpeedEnabled = refreshIdleSpeedConfig.enabled && refreshIdleSpeedConfig.availableNetworks.includes(networkId);\n\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n            loaderAlign={'flex-end'}\n          />\n          {\n            Object.keys(strategies).map(strategy => \n             \n              {\n                if(strategy==='risk')\n                return false;\n\n                const strategyInfo = strategies[strategy];\n                const availableTokens = this.props.availableStrategies[strategy];\n\n                if (!availableTokens || !Object.keys(availableTokens).length){\n                  return false;\n                }\n                \n                // Get available protocols name\n                const availableProtocolsKeys = [];\n                Object.keys(availableTokens).forEach( token => {\n                  availableTokens[token].protocols.forEach( protocolInfo => {\n                    if (availableProtocolsKeys.indexOf(protocolInfo.name)<0){\n                      availableProtocolsKeys.push(protocolInfo.name);\n                    }\n                  });\n                });\n\n                const availableProtocols = availableProtocolsKeys.map( protocolName => {\n                  return statsProtocols[protocolName];\n                },{});\n\n                return (\n                  <Box\n                    mb={2}\n                    width={1}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    key={`strategy-container-${strategy}`}\n                  >\n                    <Title\n                      mt={3}\n                      mb={[3,4]}\n                    >\n                      <Flex\n                        flexDirection={'row'}\n                        alignItems={'baseline'}\n                        justifyContent={'center'}\n                      >\n                        {strategyInfo.title}\n                        {\n                          strategyInfo.titlePostfix &&\n                            <Text\n                              ml={2}\n                              fontWeight={3}\n                              fontSize={[2,4]}\n                              color={'dark-gray'}\n                            >\n                              {strategyInfo.titlePostfix}\n                            </Text>\n                        }\n                      </Flex>\n                    </Title>\n                    <AssetsList\n                      enabledTokens={enabledTokens}\n                      handleClick={(props) => this.selectToken(strategy,props.token)}\n                      cols={[\n                        {\n                          title:'CURRENCY',\n                          props:{\n                            width:[0.26,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.20,0.14],\n                          },\n                          fields:[\n                            {\n                              name:'allocationChart',\n                              mobile:false,\n                              parentProps:{\n                                width:0.3\n                              },\n                              style:{\n                                overflow:'visible'\n                              },\n                              showLoader:false,\n                            },\n                            {\n                              name:'pool',\n                              props:{\n                                ml:1\n                              },\n                              parentProps:{\n                                width:[1,0.7]\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'APY',\n                          desc:apyLong,\n                          props:{\n                            width: [0.29,0.15],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                            justifyContent:networkId === 1 ? 'flex-start' : 'center',\n                          },\n                          fields:[\n                            {\n                              name:'apy',\n                              showTooltip:true\n                            },\n                            networkId === 1 ? {\n                              name:'idleDistribution',\n                              showLoader:false,\n                              props:{\n                                decimals:this.props.isMobile ? 1 : 2,\n                                fontSize:this.props.isMobile ? '9px' : 0\n                              }\n                            } : null,\n                          ]\n                        },\n                        {\n                          title:'FARMING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','yieldFarming']),\n                          mobile:false,\n                          props:{\n                            width:[0.27,0.14],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        {\n                          title:'APR LAST WEEK',\n                          mobile:false,\n                          props:{\n                            width: 0.25,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'aprChart',\n                              style:{\n                                overflow:'visible',\n                              },\n                            }\n                          ]\n                        },\n                        {\n                          title:'',\n                          props:{\n                            width:[0.29,0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label:this.props.isMobile ? 'View' : 'View stats',\n                              props:{\n                                width:1,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectToken(strategy,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      selectedStrategy={strategy}\n                      availableTokens={availableTokens}\n                    />\n                    {\n                      !this.props.isMobile &&\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'flex-end'}\n                        >\n                          {\n                            availableProtocols.filter( p => p.legend ).map( (p,index) => (\n                              <Flex\n                                mr={3}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                key={`legend_${index}`}\n                              >\n                                <Box\n                                  mr={1}\n                                  width={'10px'}\n                                  height={'10px'}\n                                  borderRadius={'50%'}\n                                  backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                                >\n                                </Box>\n                                <Text.span\n                                  fontSize={1}\n                                  color={'cellText'}\n                                >\n                                  {p.label}\n                                </Text.span>\n                              </Flex>\n                            ))\n                          }\n                        </Flex>\n                    }\n                  </Box>\n                );\n              }\n            )\n          }\n\n          {\n            tranchesEnabled && (\n              <Box\n                width={1}\n              >\n                <Title mb={[3,4]}>Tranches</Title>\n                <TranchesList\n                    enabledProtocols={[]}\n                    availableTranches={this.props.availableTranches}\n                    handleClick={(props) => this.selectTranche('tranches',props.protocol,props.token)}\n                    cols={[\n                      {\n                        title:'PROTOCOL',\n                        props:{\n                          width:[0.25, 0.14]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.25, 0.14],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n\n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, 0.14],\n                        },\n                        fields:[\n                          {\n                            name:'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'SENIOR APY',\n                        props:{\n                          width:[0.28, 0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:'JUNIOR APY',\n                        props:{\n                          width:[0.28, 0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        props:{\n                          width:[0.24, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n\n                        ]\n                      },\n                        /*\n                      {\n                        mobile:false,\n                        title:'AUTO-FARMING',\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.14 : 0.14],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                */\n                        /*\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche('tranches',props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n\n                    ]}\n                    {...this.props}\n                />\n              </Box>\n            )\n          }\n\n          {\n            idleTokenEnabled && refreshIdleSpeedEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                mb={4}\n                width={1}\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && refreshIdleSpeedEnabled && this.state.showRefreshIdleSpeed &&\n              <DashboardCard\n                cardProps={{\n                  p:2,\n                  mb:4,\n                  width:1,\n                  mt:[2,3],\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontWeight={500}\n                    color={'flashColor'}\n                    textAlign={'center'}\n                    fontSize={[1,'15px']}\n                  >\n                    By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                  </Text>\n                  <ExecuteTransaction\n                    action={'Refresh'}\n                    Component={Button}\n                    parentProps={{\n                      mt:1\n                    }}\n                    componentProps={{\n                      size:'small',\n                      mainColor:'blue',\n                      value:'REFRESH IDLE SPEED'\n                    }}\n                    params={[]}\n                    contractName={'IdleController'}\n                    methodName={'refreshIdleSpeeds'}\n                    {...this.props}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        mr={1}\n                        name={'Done'}\n                        size={'1.4em'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      />\n                      <Text\n                        fontWeight={500}\n                        fontSize={'15px'}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Idle Speed Refreshed\n                      </Text>\n                    </Flex>\n                  </ExecuteTransaction>\n                </Flex>\n              </DashboardCard>\n          }\n        </Flex>\n      );\n    } else {\n      return this.props.selectedStrategy==='best' ? (\n         <StatsAsset\n           {...this.props}\n         />\n      ) : this.props.selectedStrategy==='tranches' && (\n        <StatsTranche\n           {...this.props}\n         />\n      )\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Icon, Text, Box, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    const viewOnly = this.props.connectorName === 'custom';\n    const showBreadCrumb = typeof this.props.showBreadCrumb !== 'undefined' ? this.props.showBreadCrumb : true;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              {\n                showBreadCrumb && (\n                  <Flex\n                    width={1}\n                  >\n                    <Breadcrumb\n                      {...this.props}\n                      showPathMobile={true}\n                      isMobile={this.props.isMobile}\n                      path={[this.props.selectedSubsection.label]}\n                      text={this.props.selectedSection.label.toUpperCase()}\n                      handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                    />\n                  </Flex>\n                )\n              }\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                  dangerouslySetInnerHTML={{\n                    __html:this.props.selectedSubsection.desc\n                  }}\n                >\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n                justifyContent={viewOnly ? 'center' : 'flex-start'}\n              >\n              {\n                viewOnly ? (\n                  <IconBox\n                    cardProps={{\n                      maxWidth:[1,'35em']\n                    }}\n                    icon={'Visibility'}\n                    text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n                  />\n                ) : this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      {\n                        tool.image ? (\n                          <Image\n                            my={[0,2]}\n                            height={'2.2em'}\n                            src={tool.image}\n                          />\n                        ) : tool.icon && (\n                          <Icon\n                            my={[0,2]}\n                            size={'3em'}\n                            name={tool.icon}\n                          />\n                        )\n                      }\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                      dangerouslySetInnerHTML={{\n                        __html:tool.desc\n                      }}\n                    >\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadAssetField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    // const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n    //   return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    // },this.functionsUtil.BNify(0)) : null;\n\n    // const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n    //   const apr = govTokensAprs[govToken];\n    //   if (apr.gt(0)){\n    //     return `${govToken}: ${apr.toFixed(2)}%`;\n    //   }\n    //   return null;\n    // }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Risk Score\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      decimals:1,\n                      fontWeight:300,\n                      fontSize:['1.8em','1.9em'],\n                      color:this.props.theme.colors.counter,\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import Migrate from '../Migrate/Migrate';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\n// import ExtLink from '../ExtLink/ExtLink';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError: {},\n    tokenAPY: '-',\n    inputValue: {},\n    processing: {},\n    curveAPY: null,\n    totalAUM: null,\n    canRedeem: false,\n    maxSlippage: 0.2,\n    canDeposit: false,\n    action: 'deposit',\n    directMint: false,\n    activeModal: null,\n    tokenGovTokens: {},\n    showBuyFlow: false,\n    maxUnlentPerc: null,\n    unlentBalance: null,\n    tokenApproved: false,\n    skipMigration: false,\n    redeemSkipGov: false,\n    showRedeemFlow: false,\n    contractPaused: false,\n    buttonDisabled: false,\n    canRedeemCurve: false,\n    erc20ForwarderTx: null,\n    signedParameters: null,\n    minAmountForMint: null,\n    showMaxSlippage: false,\n    redeemGovTokens: false,\n    canDepositCurve: false,\n    redeemSkipGovTokens: [],\n    fastBalanceSelector: {},\n    actionProxyContract: {},\n    migrationEnabled: false,\n    componentMounted: false,\n    curveTokenBalance: null,\n    agreeSkipGovTokens: false,\n    redeemCurveEnabled: false,\n    depositCurveBalance: null,\n    depositCurveEnabled: true,\n    showAdvancedOptions: false,\n    skipGovTokensGasSave: null,\n    depositCurveSlippage: null,\n    erc20ForwarderContract: {},\n    erc20ForwarderEnabled: false,\n    showETHWrapperEnabled: false,\n    skipGovTokensGasSaveUSD: null,\n    metaTransactionsEnabled: true,\n    skippedGovTokensBalance: null,\n    minAmountForMintReached: false,\n    loadingErc20ForwarderTx: false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount() {\n    this.loadTokenInfo();\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions: !prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleShowETHWrapper = showETHWrapperEnabled => {\n    this.setState({\n      showETHWrapperEnabled\n    });\n  }\n\n  toggleAgreeSkipGovTokens = agreeSkipGovTokens => {\n    this.setState({\n      agreeSkipGovTokens\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens,\n      redeemSkipGovTokens: [],\n      agreeSkipGovTokens: false,\n      skippedGovTokensBalance: this.functionsUtil.BNify(0),\n      redeemSkipGov: redeemGovTokens ? false : this.state.redeemSkipGov\n    });\n  }\n\n  toggleRedeemSkipGov = (redeemSkipGov) => {\n    this.setState({\n      redeemSkipGov,\n      redeemSkipGovTokens: [],\n      agreeSkipGovTokens: false,\n      skippedGovTokensBalance: this.functionsUtil.BNify(0),\n      redeemGovTokens: redeemSkipGov ? false : this.state.redeemGovTokens\n    });\n  }\n\n  getSkippedGovTokensFlags = async () => {\n    const govTokensIndexes = await this.functionsUtil.getGovTokensIndexes(this.props.account, this.props.tokenConfig);\n    const govTokensFlags = Object.keys(govTokensIndexes).map(token => {\n      return this.state.redeemSkipGovTokens.includes(token);\n    });\n    // console.log('getSkippedGovTokensFlags',govTokensIndexes,govTokensFlags);\n    return govTokensFlags;\n  }\n\n  calculateSkippedGovTokens = async () => {\n    let skippedGovTokensBalance = this.functionsUtil.BNify(0);\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats', 'tokens', 'DAI']);\n\n    await this.functionsUtil.asyncForEach(this.state.redeemSkipGovTokens, async (govToken) => {\n      const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', govToken]);\n      const govTokenPrice = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n      const skippedAmount = this.props.govTokensUserBalances[govToken].times(govTokenPrice);\n      skippedGovTokensBalance = skippedGovTokensBalance.plus(skippedAmount);\n    });\n\n    const _skipGovTokenRedeem = await this.getSkippedGovTokensFlags();\n    const WETHTokenConfig = this.functionsUtil.getGlobalConfig(['stats', 'tokens', 'WETH']);\n\n    const [\n      wethPrice,\n      redeemGasUsage,\n      skipGovRedeemGasUsage\n    ] = await Promise.all([\n      this.functionsUtil.getUniswapConversionRate(DAITokenConfig, WETHTokenConfig),\n      this.functionsUtil.estimateMethodGasUsage(this.props.tokenConfig.idle.token, 'redeemIdleToken', [this.functionsUtil.normalizeTokenAmount(this.props.idleTokenBalance, this.props.tokenConfig.decimals)], this.props.account),\n      this.functionsUtil.estimateMethodGasUsage(this.props.tokenConfig.idle.token, 'redeemIdleTokenSkipGov', [this.functionsUtil.normalizeTokenAmount(this.props.idleTokenBalance, this.props.tokenConfig.decimals), _skipGovTokenRedeem], this.props.account)\n    ]);\n\n    const skipGovTokensGasSave = redeemGasUsage && skipGovRedeemGasUsage ? redeemGasUsage.minus(skipGovRedeemGasUsage) : this.functionsUtil.BNify(0);\n    const skipGovTokensGasSaveUSD = skipGovTokensGasSave ? skipGovTokensGasSave.times(wethPrice) : this.functionsUtil.BNify(0);\n\n    this.setState({\n      skipGovTokensGasSave,\n      skipGovTokensGasSaveUSD,\n      skippedGovTokensBalance\n    });\n    return skippedGovTokensBalance;\n  }\n\n  setRedeemSkipGovTokens = (token, checked) => {\n    this.setState((prevState) => {\n      const redeemSkipGovTokens = Object.assign([], prevState.redeemSkipGovTokens);\n      if (!checked && redeemSkipGovTokens.includes(token)) {\n        redeemSkipGovTokens.splice(redeemSkipGovTokens.indexOf(token), 1);\n      } else if (checked && !redeemSkipGovTokens.includes(token)) {\n        redeemSkipGovTokens.push(token);\n      }\n      return {\n        redeemSkipGovTokens\n      };\n    }, () => {\n      this.calculateSkippedGovTokens();\n    });\n  }\n\n  toggleErc20ForwarderEnabled = (erc20ForwarderEnabled) => {\n    const newState = {\n      erc20ForwarderEnabled\n    };\n\n    this.setState(newState, () => {\n      this.cancelTransaction();\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts() {\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const actions = ['deposit', 'redeem'];\n    const newState = {\n      actionProxyContract: {},\n      erc20ForwarderContract: {}\n    };\n\n    await this.functionsUtil.asyncForEach(actions, async (action) => {\n      let mintProxyContractInfo = null;\n      const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'erc20ForwarderEnabled']);\n\n      if (depositErc20ForwarderEnabled) {\n        mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'erc20ForwarderProxyContract', 'forwarder']);\n\n        await this.props.initContract(mintProxyContractInfo.name, mintProxyContractInfo.address, mintProxyContractInfo.abi);\n\n        // Init contract for erc20 forwarder\n        const erc20ForwarderContractInfo = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'erc20ForwarderProxyContract', 'tokens', this.props.selectedToken]);\n        if (erc20ForwarderContractInfo) {\n          mintProxyContractInfo = erc20ForwarderContractInfo;\n          const erc20ForwarderContract = await this.props.initContract(erc20ForwarderContractInfo.name, erc20ForwarderContractInfo.address, erc20ForwarderContractInfo.abi);\n          if (erc20ForwarderContract){\n            newState.erc20ForwarderContract[action] = erc20ForwarderContractInfo;\n            newState.erc20ForwarderContract[action].contract = erc20ForwarderContract.contract;\n          }\n        }\n      }\n\n      if (!mintProxyContractInfo) {\n        mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'proxyContract']);\n      }\n\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract) {\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name, mintProxyContractInfo.address, mintProxyContractInfo.abi);\n        if (proxyContract){\n          newState.actionProxyContract[action].contract = proxyContract.contract;\n          newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, mintProxyContractInfo.address, this.props.account);\n        }\n      }\n    });\n\n    // console.log('loadProxyContracts',newState);\n\n    return await this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY() {\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve) {\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY) {\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.props.tokenBalance);\n\n    if (this.props.tokenBalance === null) {\n      return false;\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const erc20ForwarderEnabledChanged = prevState.erc20ForwarderEnabled !== this.state.erc20ForwarderEnabled;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (accountChanged || tokenChanged || tokenBalanceChanged || erc20ForwarderEnabledChanged || contractsInitialized) {\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged) {\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputValueChanged) {\n      // this.checkMinAmountForMint();\n    }\n\n    const redeemSkipGovChanged = prevState.redeemSkipGov !== this.state.redeemSkipGov;\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    const agreeSkipGovTokensChanged = prevState.agreeSkipGovTokens !== this.state.agreeSkipGovTokens;\n    const redeemSkipGovTokensChanged = JSON.stringify(prevState.redeemSkipGovTokens) !== JSON.stringify(this.state.redeemSkipGovTokens);\n\n    if (redeemGovTokensChanged || actionChanged || redeemSkipGovTokensChanged || redeemSkipGovChanged || agreeSkipGovTokensChanged) {\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged) {\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged) {\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async checkMinAmountForMint() {\n    let showPoolPerc = false;\n    let totalAUM = this.state.totalAUM;\n    let maxUnlentPerc = this.state.maxUnlentPerc;\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const inputValue = this.functionsUtil.BNify(this.state.inputValue[this.state.action]);\n\n    if (inputValue.gt(this.props.tokenBalance)) {\n      return false;\n    }\n\n    const convertedAmount = await this.functionsUtil.convertTokenBalance(inputValue, this.props.selectedToken, this.props.tokenConfig, isRisk);\n    let minAmountForMint = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'minAmountForMint']));\n    let minAmountForMintReached = convertedAmount.gte(minAmountForMint);\n\n    // Check token minAmountForMint\n    if (minAmountForMintReached) {\n      if (this.props.tokenConfig.deposit && this.props.tokenConfig.deposit.minAmountForMint && convertedAmount.lt(this.props.tokenConfig.deposit.minAmountForMint)) {\n        minAmountForMintReached = false;\n      } else {\n        [\n          maxUnlentPerc,\n          totalAUM\n        ] = await Promise.all([\n          maxUnlentPerc || this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'maxUnlentPerc'),\n          totalAUM || this.functionsUtil.loadAssetField('pool', this.props.selectedToken, this.props.tokenConfig, this.props.account)\n        ]);\n\n        if (maxUnlentPerc && totalAUM) {\n          const depositPerc = inputValue.div(totalAUM).times(100);\n          maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc);\n          const maxUnlentPercFormatted = maxUnlentPerc.div(1e3).times(2);\n          if (depositPerc.lt(maxUnlentPercFormatted)) {\n            minAmountForMintReached = false;\n          } else if (totalAUM.times(maxUnlentPercFormatted.div(100)).gt(minAmountForMint)) {\n            showPoolPerc = true;\n            minAmountForMint = totalAUM.times(maxUnlentPercFormatted.div(100));\n          }\n        }\n      }\n    }\n\n    this.setState({\n      totalAUM,\n      showPoolPerc,\n      maxUnlentPerc,\n      minAmountForMint,\n      minAmountForMintReached\n    });\n  }\n\n  async calculateCurveSlippage() {\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)) {\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve', 'poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount, curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action) {\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token, normalizedAmount, true);\n        break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n        break;\n      default:\n        break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  checkUseProxyContract = () => {\n    const proxyContract = this.state.actionProxyContract[this.state.action];\n    const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']) && this.state.erc20ForwarderEnabled;\n    const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'metaTransactionsEnabled']) && this.state.metaTransactionsEnabled;\n    return ((depositErc20ForwarderEnabled || depositMetaTransactionsEnabled) && proxyContract && this.props.biconomy);\n  }\n\n  approveContract = async (callbackApprove, callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled) {\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve', 'depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken, curveDepositContract.address, callbackApprove, callbackReceiptApprove);\n    } else {\n      // Check Proxy Contract Approved for Deposit with Biconomy\n      const useProxyContract = this.checkUseProxyContract();\n      if (useProxyContract) {\n        const proxyContract = this.state.actionProxyContract[this.state.action];\n        this.functionsUtil.enableERC20(this.props.selectedToken, proxyContract.address, callbackApprove, callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken, this.props.tokenConfig.idle.address, callbackApprove, callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n    let tokenApproved = false;\n    if (this.state.depositCurveEnabled) {\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve', 'depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, curveDepositContract.address, this.props.account);\n    } else {\n      // Check Proxy Contract Approved for Deposit with Biconomy\n      const useProxyContract = this.checkUseProxyContract();\n      if (useProxyContract) {\n        // Check for Permit Deposit\n        const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']) && this.state.erc20ForwarderEnabled;\n        if (depositErc20ForwarderEnabled) {\n          const permitEnabled = this.functionsUtil.getGlobalConfig(['permit', this.props.selectedToken]);\n          if (permitEnabled) {\n            return true;\n          }\n        }\n        // Check proxy contract approved\n        const proxyContract = this.state.actionProxyContract[this.state.action];\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, proxyContract.address, this.props.account);\n        // console.log('tokenApproved 1',this.props.selectedToken, proxyContract.address, this.props.account, tokenApproved);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, this.props.tokenConfig.idle.address, this.props.account);\n        // console.log('tokenApproved 2',this.props.selectedToken, this.props.tokenConfig.idle.address, this.props.account, tokenApproved);\n      }\n    }\n\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved) {\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve: {\n            txHash: null,\n            loading: false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx, error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error) {\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error') {\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      // console.log('callbackApprove',tx,tx.status === 'success');\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve: {\n            txHash: null,\n            loading: false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve: {\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove, callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve: {\n          txHash: null,\n          loading: true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted) {\n      this.setState({\n        componentMounted: false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve', 'availableTokens', this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      { migrationEnabled },\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig, this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const showETHWrapperEnabled = this.props.selectedToken === 'WETH' && (this.state.showETHWrapperEnabled || !canDeposit);\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const tokenGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n    const newState = { ...this.state };\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled) {\n      newState.depositCurveEnabled = false;\n    }\n\n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.tokenGovTokens = tokenGovTokens;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n    newState.showETHWrapperEnabled = showETHWrapperEnabled;\n\n    newState.txError = {\n      redeem: false,\n      deposit: false\n    };\n    newState.processing = {\n      redeem: {\n        txHash: null,\n        loading: false\n      },\n      deposit: {\n        txHash: null,\n        loading: false\n      },\n      approve: {\n        txHash: null,\n        loading: false\n      },\n      boost: {\n        txHash: null,\n        loading: false\n      }\n    };\n    newState.inputValue = {\n      boost: null,\n      redeem: null,\n      deposit: null\n    };\n    newState.fastBalanceSelector = {\n      boost: null,\n      redeem: null,\n      deposit: null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState, () => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      erc20ForwarderTx: null,\n      loadingErc20ForwarderTx: false,\n      processing: {\n        ...prevState.processing,\n        approve: {\n          txHash: null,\n          loading: false\n        },\n        [this.state.action]: {\n          txHash: null,\n          loading: false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const selectedPercentage = this.getFastBalanceSelector();\n    const inputValue = this.state.inputValue[this.state.action];\n    const redeemSkipGov = this.state.redeemSkipGov && this.state.redeemSkipGovTokens.length > 0 && this.state.agreeSkipGovTokens;\n\n    const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']) && this.state.erc20ForwarderEnabled;\n    const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'metaTransactionsEnabled']) && this.state.metaTransactionsEnabled;\n\n    let loading = true;\n\n    switch (this.state.action) {\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)) {\n          return false;\n        }\n\n        if (!this.state.tokenApproved) {\n          return this.approveToken();\n        }\n\n        if (localStorage) {\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged', 0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx, error) => {\n\n          if (!tx && error) {\n            tx = {\n              status: 'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error) {\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error') {\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]: {\n                txHash: null,\n                loading: false\n              }\n            }\n          }));\n\n          if (txSucceeded) {\n            this.setState((prevState) => ({\n              activeModal: 'share',\n              inputValue: {\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if ((this.state.metaTransactionsEnabled || this.state.erc20ForwarderEnabled) && txError) {\n            this.setState({\n              erc20ForwarderTx: null,\n              loadingErc20ForwarderTx: false,\n              txError: {\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          // console.log('callbackReceiptDeposit',tx);\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]: {\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve', 'availableTokens', this.props.tokenConfig.idle.token, 'enabled']);\n\n        // Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled) {\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve', 'poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue, curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token, tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage) {\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n\n          const depositParams = [amounts, minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n          // Normal Deposit\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const useProxyContract = this.checkUseProxyContract();\n          if (useProxyContract) {\n            const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n            const mintProxyContract = mintProxyContractInfo.contract;\n\n            // Use Meta-Transactions\n            if (depositMetaTransactionsEnabled) {\n              depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n              const functionCall = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams);\n              const functionSignature = functionCall.encodeABI();\n              // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n              // if (this.state.metaTransactionsEnabled){\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n              // } else {\n              //   contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n              // }\n              // Use Erc20 Forwarder\n            } else if (depositErc20ForwarderEnabled) {\n\n              // Check if the deposit method require the nonce\n              const methodAbi = mintProxyContractInfo.contract._jsonInterface.find(f => f.name === mintProxyContractInfo.function);\n              const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n\n              // Build ERC20 Forwarder Tx\n              if (!this.state.erc20ForwarderTx) {\n                this.setState({\n                  txError: {\n                    [this.state.action]: false\n                  },\n                  loadingErc20ForwarderTx: true\n                }, async () => {\n                  const erc20ForwarderContract = this.state.erc20ForwarderContract[this.state.action];\n                  const signedParameters = await this.functionsUtil.signPermit(this.props.selectedToken, this.props.account, erc20ForwarderContract.name, 0, tokensToDeposit);\n\n                  // console.log('signedParameters_1',signedParameters);\n\n                  if (signedParameters) {\n\n                    const { expiry, nonce, r, s, v } = signedParameters;\n\n                    if (useNonce) {\n                      depositParams = [tokensToDeposit, parseInt(nonce), expiry, v, r, s];\n                    } else {\n                      depositParams = [tokensToDeposit, expiry, v, r, s];\n                    }\n\n                    if (mintProxyContractInfo.function === 'foo') {\n                      depositParams = [];\n                    }\n\n                    // console.log('permitAndDeposit',mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams);\n\n                    // contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n\n                    const permitType = erc20ForwarderContract.permitType;\n                    const functionCall = erc20ForwarderContract.contract.methods[erc20ForwarderContract.function](...depositParams);\n                    const functionSignature = functionCall.encodeABI();\n\n                    // console.log('functionSignature',permitType, erc20ForwarderContract.function, depositParams);\n\n                    let gasLimit = null;\n                    try {\n                      gasLimit = await functionCall.estimateGas({ from: this.props.account }); // 5000000;\n                      if (gasLimit) {\n                        gasLimit = this.functionsUtil.BNify(gasLimit).times(1.2);\n                      } else {\n                        gasLimit = this.functionsUtil.BNify(1000000);\n                      }\n                    } catch (error) {\n                      // console.log('Gas Estimate - Error: ',error);\n                    }\n\n                    if (!gasLimit) {\n                      gasLimit = this.functionsUtil.BNify(1000000);\n                    }\n\n                    // console.log('gasEstimate',mintProxyContractInfo.name, depositParams, parseFloat(gasLimit));\n\n                    // debugger;\n\n                    const erc20ForwarderTx = await this.functionsUtil.buildBiconomyErc20ForwarderTx(erc20ForwarderContract.name, this.props.tokenConfig.address, permitType, functionSignature, gasLimit);\n                    // console.log('erc20ForwarderTx',erc20ForwarderTx);\n                    return this.setState({\n                      erc20ForwarderTx,\n                      loadingErc20ForwarderTx: false\n                    });\n                  } else {\n                    return this.setState((prevState) => ({\n                      processing: {\n                        ...prevState.processing,\n                        [this.state.action]: {\n                          txHash: null,\n                          loading: false\n                        }\n                      },\n                      signedParameters: null,\n                      erc20ForwarderTx: null,\n                      loadingErc20ForwarderTx: false\n                    }));\n                  }\n                });\n                // Send ERC20 Forwarder Tx\n              } else {\n                this.setState({\n                  txError: {\n                    [this.state.action]: false\n                  },\n                  loadingErc20ForwarderTx: true\n                }, async () => {\n                  const metaInfo = {};\n                  const permitOptions = {};\n                  const erc20ForwarderContract = this.state.erc20ForwarderContract[this.state.action];\n                  const erc20ForwarderBaseContract = this.functionsUtil.getGlobalConfig(['contract', 'methods', this.state.action, 'erc20ForwarderProxyContract', 'forwarder']);\n\n                  const permitValue = `${tokensToDeposit}00`;\n                  const incrementNonce = 1; // useNonce ? 1 : 0;\n                  const signedParameters = await this.functionsUtil.signPermit(this.props.selectedToken, this.props.account, erc20ForwarderBaseContract.name, incrementNonce, permitValue);\n\n                  // console.log('signedParameters_2',signedParameters);\n\n                  if (signedParameters) {\n\n                    this.setState({\n                      signedParameters\n                    });\n\n                    const permitConfig = this.functionsUtil.getGlobalConfig(['permit', this.props.selectedToken]);\n                    const setValue = permitConfig.type.find(t => t.name === 'value');\n\n                    const { expiry, nonce, r, s, v } = signedParameters;\n                    permitOptions.v = v;\n                    permitOptions.r = r;\n                    permitOptions.s = s;\n                    permitOptions.allowed = true;\n                    permitOptions.expiry = parseInt(expiry);\n                    permitOptions.holder = this.props.account;\n                    permitOptions.value = setValue ? permitValue : 0;\n                    permitOptions.nonce = parseInt(nonce.toString());\n                    permitOptions.spender = erc20ForwarderBaseContract.address;\n\n                    metaInfo.permitData = permitOptions;\n                    metaInfo.permitType = erc20ForwarderContract.permitType;\n\n                    // console.log('sendBiconomyTxWithErc20Forwarder',permitOptions,metaInfo);\n\n                    await this.functionsUtil.asyncTimeout(200);\n\n                    contractSendResult = await this.functionsUtil.sendBiconomyTxWithErc20Forwarder(this.state.erc20ForwarderTx.request, metaInfo, callbackDeposit, callbackReceiptDeposit);\n\n                    this.setState({\n                      erc20ForwarderTx: null,\n                      loadingErc20ForwarderTx: false\n                    });\n                  } else {\n                    return this.setState((prevState) => ({\n                      processing: {\n                        ...prevState.processing,\n                        [this.state.action]: {\n                          txHash: null,\n                          loading: false\n                        }\n                      },\n                      signedParameters: null,\n                      erc20ForwarderTx: null,\n                      loadingErc20ForwarderTx: false\n                    }));\n                  }\n                });\n              }\n            }\n            // Use main contract if no proxy contract exists\n          } else {\n            /*\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Check if deposited amount is greated that general lower limit for direct mint\n            if (_skipMint && this.state.minAmountForMintReached){\n              _skipMint = false;\n            }\n            */\n            // Always skip mint\n            let _skipMint = true;\n\n            const _referral = this.getReferralAddress() || '0x0000000000000000000000000000000000000000';\n            depositParams = [tokensToDeposit, _skipMint, _referral];\n            // console.log('depositParams',depositParams);\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n        break;\n      case 'redeem':\n\n        if (redeemGovTokens) {\n          const callbackRedeem = (tx, error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error) {\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error') {\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  txHash: null,\n                  loading: false\n                }\n              }\n            }));\n\n            if (txSucceeded) {\n              this.setState((prevState) => ({\n                inputValue: {\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n\n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)) {\n            return false;\n          }\n\n          const txData = {\n            value: this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage) {\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPriceWithFee = await this.functionsUtil.getIdleTokenPriceWithFee(this.props.tokenConfig, this.props.account)\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals)).div(idleTokenPriceWithFee);\n          }\n\n          // Check if idleTokens to redeem > idleToken balance\n          if (idleTokenToRedeem.gt(this.functionsUtil.BNify(this.props.idleTokenBalance))) {\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem, 18);\n\n          if (!idleTokenToRedeem) {\n            return false;\n          }\n\n          const callbackRedeem = (tx, error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error) {\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error') {\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  txHash: null,\n                  loading: false\n                }\n              }\n            }));\n\n            if (txSucceeded) {\n              this.setState((prevState) => ({\n                inputValue: {\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemMethod = 'redeemIdleToken';\n          let redeemParams = [idleTokenToRedeem];\n\n          if (redeemSkipGov) {\n            redeemMethod = 'redeemIdleTokenSkipGov';\n            const _skipGovTokenRedeem = await this.getSkippedGovTokensFlags();\n            redeemParams.push(_skipGovTokenRedeem);\n          }\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, redeemMethod, redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n        break;\n      default: // Reset loading if not handled action\n        loading = false;\n        break;\n    }\n\n    if (contractSendResult !== false || loading !== this.state.processing[this.state.action].loading) {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]: {\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage: true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch (action) {\n      case 'redeem':\n        if (!this.state.canRedeem) {\n          action = 'deposit';\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (action !== this.state.action) {\n      this.setState({\n        action\n      }, () => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount = null) => {\n\n    if (!this.state.action) {\n      return false;\n    }\n\n    if (!amount) {\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action) {\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && (amount.lte(0) || amount.gt(this.props.tokenBalance)));\n        break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && (buttonDisabled || (!amount || amount.lte(0) || amount.gt(this.props.redeemableBalance)));\n\n        if (!buttonDisabled && this.state.redeemSkipGov && this.state.redeemSkipGovTokens.length > 0 && !this.state.agreeSkipGovTokens) {\n          buttonDisabled = true;\n        }\n        // console.log('checkButtonDisabled',this.state.redeemSkipGov,this.state.redeemSkipGovTokens.length,this.state.agreeSkipGovTokens,buttonDisabled);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null) {\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch (this.state.action) {\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n        break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n        break;\n      default:\n        break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue: {\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null) {\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action) {\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector: {\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = async (e) => {\n    if (!this.state.action) {\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector: {\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue: {\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()) {\n      case 'deposit':\n\n        break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve) {\n          action = null;\n        }\n        break;\n      default:\n        action = null;\n        break;\n    }\n\n    if (action !== null) {\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig) {\n      return null;\n    }\n\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n\n    const isDepositDisabled = this.props.tokenConfig.canDeposit && !this.props.tokenConfig.canDeposit.enabled ? true : false;\n    // const depositDisabledMessage1 = isDepositDisabled && this.props.tokenConfig.canDeposit.disabledMessageDepositKey ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageDepositKey]) : null;\n    // const depositDisabledMessage2 = this.state.canRedeem ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageRedeemKey]) : \"\";\n    const depositDisabledMessage = isDepositDisabled ? (this.state.canRedeem && this.props.tokenConfig.canDeposit.disabledMessageRedeemKey ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageRedeemKey]) : (this.props.tokenConfig.canDeposit.disabledMessageDepositKey ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageDepositKey]) : null) ) : null;\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = !govTokensDisabled && this.functionsUtil.getGlobalConfig(['strategies', this.props.selectedStrategy, 'govTokensEnabled']) && Object.keys(this.state.tokenGovTokens).length > 0;\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow) && this.state.action === 'redeem';\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'redeemGovTokens', 'enabled']) && govTokensEnabled && showRedeemFlow;// && this.props.govTokensBalance.gt(0);\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens;\n\n    const redeemSkipGovConfig = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'redeemSkipGov']);\n    const redeemSkipGovEnabled = redeemSkipGovConfig && !redeemSkipGovConfig.disabledTokens.includes(this.props.tokenConfig.idle.token) && govTokensEnabled && showRedeemFlow;\n    const redeemSkipGov = redeemSkipGovEnabled && this.state.redeemSkipGov && Object.keys(this.props.govTokensUserBalances).length > 0 && this.props.govTokensBalance.gt(0);\n    const redeemSkipGovNoTokens = redeemSkipGovEnabled && this.state.redeemSkipGov && (!Object.keys(this.props.govTokensUserBalances).length || this.props.govTokensBalance.lte(0));\n\n\n    const showAdvancedRedeemOptions = redeemGovTokenEnabled || redeemSkipGovEnabled;\n    // console.log('showAdvancedRedeemOptions',showAdvancedRedeemOptions,redeemGovTokenEnabled,redeemSkipGovEnabled,govTokensEnabled,showRedeemFlow);\n\n    const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']);\n    const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'metaTransactionsEnabled']);\n    const depositErc20ForwarderEnabledTokens = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderProxyContract', 'tokens']);\n\n    // Biconomy Start\n    const metaTransactionsAvailable = depositMetaTransactionsEnabled && this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n\n    const erc20ForwarderEnabled = depositErc20ForwarderEnabled && Object.keys(depositErc20ForwarderEnabledTokens).includes(this.props.selectedToken) && depositErc20ForwarderEnabledTokens[this.props.selectedToken].enabled && this.props.biconomy && this.props.erc20ForwarderClient && this.state.actionProxyContract[this.state.action] && !isDepositDisabled;\n\n    // console.log(erc20ForwarderEnabled,depositErc20ForwarderEnabled,this.props.biconomy,this.props.erc20ForwarderClient,this.state.actionProxyContract[this.state.action]);\n    // Biconomy End\n\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve', 'availableTokens', this.props.tokenConfig.idle.token, 'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = false && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined' && batchDepositInfo.availableNetworks.includes(currentNetwork.id);\n    \n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    const showBatchDeposit = !useMetaTx && batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    const ethWrapperInfo = this.functionsUtil.getGlobalConfig(['tools', 'ethWrapper']);\n    const ETHWrapperComponent = ethWrapperInfo.subComponent;\n    const showETHWrapper = this.props.selectedToken === 'WETH' && ethWrapperInfo.enabled && ethWrapperInfo.availableNetworks.includes(currentNetwork.id) && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    const polygonBridgeInfo = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    // const PolygonBridgeComponent = polygonBridgeInfo.subComponent;\n    const polygonNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n    // const polygonNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',polygonNetworkId]);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit && !isDepositDisabled) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens) && /*(!this.state.showETHWrapperEnabled || this.state.action === 'redeem') && */(!this.state.showPolygonBridgeEnabled || this.state.action === 'redeem');\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n\n    const showBuyFlow = this.state.componentMounted && currentNetwork.provider === 'infura' && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !isDepositDisabled && !this.state.canDeposit && !this.state.showETHWrapperEnabled;\n    const showPolygonBridge = this.props.account && this.state.componentMounted && this.state.action === 'deposit' && !this.state.canDeposit && currentNetwork.provider === 'polygon';\n    const showPolygonBridgeBanner = !showPolygonBridge && currentNetwork.provider === 'polygon' && polygonNetworkId && polygonBridgeInfo.enabled && this.state.action === 'deposit';\n\n    const buyToken = this.functionsUtil.BNify(this.props.accountBalance).gt(0) ? this.props.selectedToken : this.functionsUtil.getBaseToken();\n\n    const _referral = this.getReferralAddress();\n    const showReferral = _referral && this.state.action === 'deposit' && showActionFlow && !showBuyFlow;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          {\n            viewOnly ? (\n              <IconBox\n                cardProps={{\n                  mt: 3\n                }}\n                icon={'Visibility'}\n                text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n              />\n            ) : (\n                <Migrate\n                  {...this.props}\n                  migrateTextBefore={migrateText}\n                  migrateText={migrateText !== null ? '' : null}\n                  toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n                >\n                  {\n                    !this.props.account ? (\n                      <ConnectBox\n                        {...this.props}\n                      />\n                    ) : this.state.componentMounted ? (\n                      this.state.action && (\n                        <Box\n                          width={1}\n                        >\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            <Text mb={2}>\n                              Choose the action:\n                          </Text>\n\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  width: 0.48,\n                                  onMouseDown: () => {\n                                    this.setAction('deposit');\n                                  }\n                                }}\n                                isInteractive={true}\n                                isActive={this.state.action === 'deposit'}\n\n                              >\n                                <Flex\n                                  my={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <TransactionField\n                                    transaction={{\n                                      action: 'deposit'\n                                    }}\n                                    fieldInfo={{\n                                      name: 'icon',\n                                      props: {\n                                        mr: 3\n                                      }\n                                    }}\n                                  />\n                                  <Text\n                                    fontSize={3}\n                                    fontWeight={3}\n                                  >\n                                    Deposit\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  width: 0.48,\n                                  onMouseDown: () => {\n                                    this.setAction('redeem');\n                                  }\n                                }}\n                                isInteractive={true}\n                                isActive={this.state.action === 'redeem'}\n                                isDisabled={!this.state.canRedeem && !this.state.canRedeemCurve}\n                              >\n                                <Flex\n                                  my={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <TransactionField\n                                    transaction={{\n                                      action: 'redeem'\n                                    }}\n                                    fieldInfo={{\n                                      name: 'icon',\n                                      props: {\n                                        mr: 3\n                                      }\n                                    }}\n                                  />\n                                  <Text\n                                    fontSize={3}\n                                    fontWeight={3}\n                                  >\n                                    Redeem\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </Flex>\n                            {\n                              isDepositDisabled && (\n                                <IconBox\n                                  cardProps={{\n                                    mt: 3\n                                  }}\n                                  iconProps={{\n                                    color:'#ffe000'\n                                  }}\n                                  icon={'Warning'}\n                                  text={depositDisabledMessage}\n                                >\n                                  {\n                                    this.state.action === 'deposit' && this.state.canRedeem && (\n                                      <RoundButton\n                                        buttonProps={{\n                                          mt:3,\n                                          width:[1,1/2]\n                                        }}\n                                        handleClick={e => this.setAction('redeem')}\n                                      >\n                                        Redeem\n                                      </RoundButton>\n                                    )\n                                  }\n                                </IconBox>\n                              )\n                            }\n                          </Flex>\n                          {\n                            (showRedeemFlow && this.state.unlentBalance) &&\n                            <DashboardCard\n                              cardProps={{\n                                py: 2,\n                                px: 2,\n                                mt: 3,\n                                display: 'flex',\n                                alignItems: 'center',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  color={'cellText'}\n                                  name={'LocalGasStation'}\n                                />\n                                <Text\n                                  px={2}\n                                  fontSize={1}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Available balance for Cheap Redeem\n                                </Text>\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'center'}\n                                    hoverColor={'copyColor'}\n                                  >\n                                    {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.functionsUtil.getGlobalConfig(['messages', 'cheapRedeem'])}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          }\n                          {\n                            showAdvancedRedeemOptions ? (\n                              <DashboardCard\n                                cardProps={{\n                                  pt: 2,\n                                  px: 2,\n                                  mt: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                  pb: this.state.showAdvancedOptions ? 3 : 2,\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <Link\n                                    ml={1}\n                                    mainColor={'primary'}\n                                    hoverColor={'primary'}\n                                    onClick={this.toggleShowAdvancedOptions}\n                                  >\n                                    {this.state.showAdvancedOptions ? 'Hide' : 'Show'} advanced options\n                                </Link>\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                                  />\n                                </Flex>\n                                {\n                                  this.state.showAdvancedOptions &&\n                                  <Flex\n                                    mt={1}\n                                    flexDirection={'column'}\n                                  >\n                                    {\n                                      redeemGovTokenEnabled &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        justifyContent={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          checked={this.state.redeemGovTokens}\n                                          label={`Redeem governance tokens only`}\n                                          onChange={e => this.toggleRedeemGovTokens(e.target.checked)}\n                                        />\n                                        <Link\n                                          color={'link'}\n                                          hoverColor={'link'}\n                                          onClick={e => this.props.openTooltipModal('Redeem governance tokens', `This feature allows you to redeem just the amount of governance tokens accrued${this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~${this.props.govTokensBalance.toFixed(2)}$)` : null} without redeeming the underlying token.`)}\n                                        >\n                                          (read more)\n                                          </Link>\n                                      </Flex>\n                                    }\n                                    {\n                                      redeemSkipGovEnabled &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          checked={this.state.redeemSkipGov}\n                                          label={`Redeem without governance tokens`}\n                                          onChange={e => this.toggleRedeemSkipGov(e.target.checked)}\n                                        />\n                                        <Icon\n                                          mr={1}\n                                          size={'1.2em'}\n                                          name={'Warning'}\n                                          color={'#ffe000'}\n                                        />\n                                        <Link\n                                          color={'link'}\n                                          hoverColor={'link'}\n                                          onClick={e => this.props.openTooltipModal('Redeem without governance tokens', this.functionsUtil.getGlobalConfig(['messages', 'redeemSkipGov']))}\n                                        >\n                                          (read more)\n                                          </Link>\n                                      </Flex>\n                                    }\n                                  </Flex>\n                                }\n                              </DashboardCard>\n                            ) : showAdvancedDepositOptions ? (\n                              <DashboardCard\n                                cardProps={{\n                                  pt: 2,\n                                  px: 2,\n                                  mt: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                  pb: this.state.showAdvancedOptions ? 3 : 2,\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <Link\n                                    ml={1}\n                                    mainColor={'primary'}\n                                    hoverColor={'primary'}\n                                    onClick={this.toggleShowAdvancedOptions}\n                                  >\n                                    {this.state.showAdvancedOptions ? 'Hide' : 'Show'} advanced options\n                                </Link>\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                                  />\n                                </Flex>\n                                {\n                                  this.state.showAdvancedOptions &&\n                                  <Flex\n                                    mt={1}\n                                    flexDirection={'column'}\n                                  >\n                                    {\n                                      showDepositCurve &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        justifyContent={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          disabled={this.state.directMint}\n                                          label={`Deposit in the Curve Pool`}\n                                          checked={this.state.depositCurveEnabled}\n                                          onChange={e => this.toggleDepositCurve(e.target.checked)}\n                                        />\n                                        <Link\n                                          mainColor={'primary'}\n                                          hoverColor={'primary'}\n                                          onClick={e => this.props.openTooltipModal('How Curve works', this.functionsUtil.getGlobalConfig(['messages', 'curveInstructions']))}\n                                        >\n                                          (read more)\n                                          </Link>\n                                      </Flex>\n                                    }\n                                    {\n                                      showRebalanceOption &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        justifyContent={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          label={`Rebalance the pool`}\n                                          checked={this.state.directMint}\n                                          disabled={this.state.depositCurveEnabled}\n                                          onChange={e => this.toggleSkipMint(e.target.checked)}\n                                        />\n                                        <Tooltip\n                                          placement={'bottom'}\n                                          message={this.functionsUtil.getGlobalConfig(['messages', 'directMint'])}\n                                        >\n                                          <Icon\n                                            size={'1em'}\n                                            color={'cellTitle'}\n                                            name={\"InfoOutline\"}\n                                          />\n                                        </Tooltip>\n                                      </Flex>\n                                    }\n                                  </Flex>\n                                }\n                              </DashboardCard>\n                            ) : (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    {\n                                      showDepositCurve && (\n                                        <Flex\n                                          width={1}\n                                          flexDirection={'column'}\n                                          justifyContent={'center'}\n                                        >\n                                          <DashboardCard\n                                            isRainbow={true}\n                                            cardProps={{\n                                              py: 3,\n                                              px: 2,\n                                              mt: 3,\n                                              display: 'flex',\n                                              alignItems: 'center',\n                                              flexDirection: 'column',\n                                              justifyContent: 'center',\n                                            }}\n                                          >\n                                            <Flex\n                                              width={1}\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                              justifyContent={'center'}\n                                            >\n                                              <Image\n                                                height={'1.8em'}\n                                                src={curveConfig.params.image}\n                                              />\n                                              <Text\n                                                mt={2}\n                                                px={2}\n                                                fontSize={1}\n                                                color={'dark-gray'}\n                                                textAlign={'center'}\n                                              >\n                                                Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                          <Link\n                                                  ml={1}\n                                                  mainColor={'primary'}\n                                                  hoverColor={'primary'}\n                                                  onClick={e => this.props.openTooltipModal('How Curve works', this.functionsUtil.getGlobalConfig(['messages', 'curveInstructions']))}\n                                                >\n                                                  Read More\n                                          </Link>\n                                              </Text>\n                                              <Checkbox\n                                                mt={2}\n                                                required={false}\n                                                label={`Deposit in Curve`}\n                                                checked={this.state.depositCurveEnabled}\n                                                onChange={e => this.toggleDepositCurve(e.target.checked)}\n                                              />\n                                            </Flex>\n                                          </DashboardCard>\n                                          {\n                                            (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                            <Link\n                                              textAlign={'center'}\n                                              hoverColor={'primary'}\n                                              onClick={e => this.setShowBuyFlow(true)}\n                                            >\n                                              I just want to deposit more {this.props.selectedToken}\n                                            </Link>\n                                          }\n                                        </Flex>\n                                      )\n                                    }\n                                    {\n                                      showRebalanceOption && (\n                                        <DashboardCard\n                                          cardProps={{\n                                            py: 3,\n                                            px: 2,\n                                            mt: 3,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            flexDirection: 'column',\n                                            justifyContent: 'center',\n                                          }}\n                                        >\n                                          <Flex\n                                            width={1}\n                                            alignItems={'center'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <Icon\n                                              size={'1.8em'}\n                                              color={'cellText'}\n                                              name={'InfoOutline'}\n                                            />\n                                            <Text\n                                              mt={1}\n                                              px={2}\n                                              fontSize={1}\n                                              color={'cellText'}\n                                              textAlign={'center'}\n                                            >\n                                              By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                      </Text>\n                                          </Flex>\n                                          <Checkbox\n                                            mt={2}\n                                            required={false}\n                                            label={`Rebalance the pool`}\n                                            checked={this.state.directMint}\n                                            onChange={e => this.toggleSkipMint(e.target.checked)}\n                                          />\n                                        </DashboardCard>\n                                      )\n                                    }\n                                    {\n                                      redeemGovTokenEnabled && (\n                                        <DashboardCard\n                                          cardProps={{\n                                            py: 3,\n                                            px: 2,\n                                            mt: 3,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            flexDirection: 'column',\n                                            justifyContent: 'center',\n                                          }}\n                                        >\n                                          <Flex\n                                            width={1}\n                                            alignItems={'center'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <Icon\n                                              size={'1.8em'}\n                                              color={'cellText'}\n                                              name={'InfoOutline'}\n                                            />\n                                            <Text\n                                              mt={1}\n                                              px={2}\n                                              fontSize={1}\n                                              color={'cellText'}\n                                              textAlign={'center'}\n                                            >\n                                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null}.\n                                      </Text>\n                                          </Flex>\n                                          <Checkbox\n                                            mt={2}\n                                            required={false}\n                                            checked={this.state.redeemGovTokens}\n                                            label={`Redeem governance tokens only`}\n                                            onChange={e => this.toggleRedeemGovTokens(e.target.checked)}\n                                          />\n                                        </DashboardCard>\n                                      )\n                                    }\n                                  </Flex>\n                                )\n                          }\n                          {\n                            redeemSkipGov ? (\n                              <DashboardCard\n                                cardProps={{\n                                  mt: 2,\n                                  mb: 2,\n                                  py: 2,\n                                  px: 1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    Select the gov tokens you want to give away:\n                                  </Text>\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    boxShadow={0}\n                                    style={{\n                                      flexWrap: 'wrap'\n                                    }}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      Object.keys(this.props.govTokensUserBalances).map(token => {\n                                        const balance = this.props.govTokensUserBalances[token];\n                                        const isActive = this.state.redeemSkipGovTokens.includes(token);\n                                        const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', token]);\n                                        return (\n                                          <Flex\n                                            p={2}\n                                            mb={1}\n                                            mx={1}\n                                            border={1}\n                                            width={'auto'}\n                                            style={{\n                                              cursor: 'pointer'\n                                            }}\n                                            borderRadius={2}\n                                            flexDirection={'row'}\n                                            key={`skipGovToken_${token}`}\n                                            justifyContent={'flex-start'}\n                                            backgroundColor={isActive ? 'cardBgActive' : 'cardBgHover'}\n                                            onClick={e => this.setRedeemSkipGovTokens(token, !this.state.redeemSkipGovTokens.includes(token))}\n                                          >\n                                            <Checkbox\n                                              m={0}\n                                              required={false}\n                                              checked={isActive}\n                                              onChange={e => this.setRedeemSkipGovTokens(token, e.target.checked)}\n                                            />\n                                            <AssetField\n                                              token={token}\n                                              tokenConfig={tokenConfig}\n                                              fieldInfo={{\n                                                name: 'icon',\n                                                props: {\n                                                  mr: 1,\n                                                  width: ['1.4em', '1.6em'],\n                                                  height: ['1.4em', '1.6em']\n                                                }\n                                              }}\n                                            />\n                                            <SmartNumber\n                                              ml={1}\n                                              fontSize={[0, 2]}\n                                              fontWeight={500}\n                                              maxPrecision={4}\n                                              color={'cellText'}\n                                              number={balance.toString()}\n                                            />\n                                          </Flex>\n                                        );\n                                      })\n                                    }\n                                  </Flex>\n                                </Flex>\n                              </DashboardCard>\n                            ) : redeemSkipGovNoTokens && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 2,\n                                  my: 2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any gov tokens to give away.\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            redeemSkipGov && this.functionsUtil.BNify(this.state.skippedGovTokensBalance).gt(0) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 2,\n                                  my: 2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'#ffe000'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'red'}\n                                    textAlign={'center'}\n                                  >\n                                    You are giving away {this.functionsUtil.formatMoney(this.state.skippedGovTokensBalance)}$ worth of governance tokens!\n                                </Text>\n                                  {\n                                    this.state.skipGovTokensGasSave && this.state.skipGovTokensGasSave.gte(0.0001) && (\n                                      <Text\n                                        mt={1}\n                                        fontSize={1}\n                                        color={'#00b84a'}\n                                        textAlign={'center'}\n                                      >\n                                        This will save you {this.state.skipGovTokensGasSave.toFixed(4)} ETH of gas (~{this.state.skipGovTokensGasSaveUSD.toFixed(2)}$)\n                                    </Text>\n                                    )\n                                  }\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    To proceed with the redeem please give your authorization by checking the following flag:\n                                </Text>\n                                  <Checkbox\n                                    my={1}\n                                    required={false}\n                                    checked={this.state.agreeSkipGovTokens}\n                                    label={`I agree to give away my governance tokens`}\n                                    onChange={e => this.toggleAgreeSkipGovTokens(e.target.checked)}\n                                  />\n                                </Flex>\n                              </DashboardCard>\n                            ) : redeemSkipGov && this.state.redeemSkipGovTokens.length > 0 && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  my: 2\n                                }}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection: 'row'\n                                  }}\n                                  loaderProps={{\n                                    size: '25px',\n                                  }}\n                                  textProps={{\n                                    ml: 2\n                                  }}\n                                  text={'Loading estimated gas usage...'}\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            showReferral && (\n                              <DashboardCard\n                                cardProps={{\n                                  py: 3,\n                                  px: 2,\n                                  mt: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Share'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You are depositing with the following referral address:\n                                </Text>\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    fontWeight={500}\n                                    textAlign={'center'}\n                                    color={this.props.theme.colors.transactions.status.completed}\n                                  >\n                                    {_referral}\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  py: 3,\n                                  px: 2,\n                                  my: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                {\n                                  this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'Warning'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        fontSize={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                                    </Text>\n                                    </Flex>\n                                  ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'Warning'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        fontSize={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                                    </Text>\n                                    </Flex>\n                                  ) : (\n                                        <Text\n                                          mt={1}\n                                          fontSize={1}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          Meta-Transactions are {this.state.metaTransactionsEnabled ? 'enabled' : 'disabled'} for {this.state.action}s!<br />\n                                          {\n                                            this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                                          }\n                                        </Text>\n                                      )\n                                }\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  checked={this.state.metaTransactionsEnabled}\n                                  onChange={e => this.toggleMetaTransactionsEnabled(e.target.checked)}\n                                  label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                                />\n                              </DashboardCard>\n                            ) : (erc20ForwarderEnabled && !showBuyFlow && !this.state.contractPaused) && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  my: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  How do you prefer to pay gas fees for this {this.state.action}?\n                                </Text>\n                                <Flex\n                                  width={[1, 0.7]}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      py: 2,\n                                      px: [2, 3],\n                                      width: 0.48,\n                                      border:this.state.erc20ForwarderEnabled ? 0 : 1\n                                    }}\n                                    textProps={{\n                                      ml: [1, 2],\n                                    }}\n                                    text={this.props.selectedToken}\n                                    isActive={this.state.erc20ForwarderEnabled}\n                                    imageProps={{\n                                      height: this.props.isMobile ? '1.4em' : '1.8em',\n                                      width: this.props.isMobile ? '1.4em' : '1.8em'\n                                    }}\n                                    image={`/images/tokens/${this.props.selectedToken}.svg`}\n                                    handleClick={e => this.toggleErc20ForwarderEnabled(true)}\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      py: 2,\n                                      px: [2, 3],\n                                      width: 0.48,\n                                      border:!this.state.erc20ForwarderEnabled ? 0 : 1\n                                    }}\n                                    textProps={{\n                                      ml: [1, 2],\n                                    }}\n                                    text={'ETH'}\n                                    isActive={!this.state.erc20ForwarderEnabled}\n                                    imageProps={{\n                                      height: this.props.isMobile ? '1.4em' : '1.8em',\n                                      width: this.props.isMobile ? '1.4em' : '1.8em'\n                                    }}\n                                    image={`/images/tokens/ETH.svg`}\n                                    handleClick={e => this.toggleErc20ForwarderEnabled(false)}\n                                  />\n                                </Flex>\n                                {\n                                  this.state.erc20ForwarderEnabled && this.state.txError[this.state.action] && (\n                                    <Text\n                                      mt={2}\n                                      fontSize={1}\n                                      color={'red'}\n                                      textAlign={'center'}\n                                    >\n                                      The meta-transaction cannot be executed due to insufficient funds, fund your wallet or select ETH and try again.\n                                  </Text>\n                                  )\n                                }\n                                {\n                                  /*\n                                  <Text\n                                    mt={2}\n                                    fontSize={'11px'}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    Powered by <ExtLink fontSize={'11px'} href={'https://biconomy.io'}>Biconomy</ExtLink>\n                                  </Text>\n                                  */\n                                }\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            (this.state.minAmountForMintReached && this.state.action === 'deposit') && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  mt: 3\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By depositing more than {this.functionsUtil.formatMoney(this.state.minAmountForMint)}$ {this.state.showPoolPerc ? `(${this.state.minAmountForMint.div(this.state.totalAUM).times(100).toFixed(0)}% of the pool)` : null} the pool will be automatically rebalanced, gas cost may be higher.\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            showBatchDeposit ? (\n                              <Flex\n                                p={2}\n                                mt={3}\n                                width={1}\n                                borderRadius={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'center'}\n                                backgroundColor={'DashboardCard'}\n                                border={`1px solid ${this.props.theme.colors.primary}`}\n                              >\n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  href={`/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                                >\n                                  Gas fees too high? Save gas with our Batch Deposit!\n                                </Link>\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'primary'}\n                                  name={'LocalGasStation'}\n                                />\n                              </Flex>\n                            ) : showETHWrapper ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py: 3,\n                                    px: 2,\n                                    mt: 3,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                    pb: this.state.showAdvancedOptions ? 3 : 2,\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showETHWrapperEnabled}\n                                      label={`Convert your ETH to WETH`}\n                                      onChange={e => this.toggleShowETHWrapper(e.target.checked)}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  this.state.showETHWrapperEnabled &&\n                                  <ETHWrapperComponent\n                                    {...this.props}\n                                    action={'wrap'}\n                                    fullWidth={true}\n                                    toolProps={ethWrapperInfo.props}\n                                  />\n                                }\n                              </Flex>\n                            ) : showPolygonBridgeBanner && (\n                              <Flex\n                                p={2}\n                                mt={3}\n                                width={1}\n                                borderRadius={2}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                backgroundColor={'DashboardCard'}\n                                border={`1px solid ${this.props.theme.colors.primary}`}\n                              >\n                                <Image\n                                  height={'1.2em'}\n                                  src={polygonBridgeInfo.image}\n                                />\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <Link\n                                    textAlign={'center'}\n                                    hoverColor={'primary'}\n                                    href={`/tools/${polygonBridgeInfo.route}/${this.props.selectedToken}`}\n                                  >\n                                    Use the {polygonBridgeInfo.label} to deposit your {this.props.selectedToken}\n                                  </Link>\n                                  <Icon\n                                    ml={1}\n                                    size={'1em'}\n                                    color={'primary'}\n                                    name={'ArrowForward'}\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRedeemCurve && this.state.canRedeem && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py: 3,\n                                    px: 2,\n                                    mt: 3,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Redeem your tokens from the Curve Pool.\n                                    <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={e => this.props.openTooltipModal('How Curve works', this.functionsUtil.getGlobalConfig(['messages', 'curveInstructions']))}\n                                      >\n                                        Read More\n                                    </Link>\n                                    </Text>\n                                    {\n                                      this.state.canRedeem &&\n                                      <Checkbox\n                                        mt={2}\n                                        required={false}\n                                        label={`Redeem from Curve`}\n                                        checked={this.state.redeemCurveEnabled}\n                                        onChange={e => this.toggleRedeemCurve(e.target.checked)}\n                                      />\n                                    }\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  this.canRedeem &&\n                                  <Link\n                                    textAlign={'center'}\n                                    hoverColor={'primary'}\n                                    onClick={e => this.setShowRedeemFlow(true)}\n                                  >\n                                    I just want to redeem my {this.props.selectedToken}\n                                  </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            (this.state.contractPaused && this.state.action === 'deposit') ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  mt: 3\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (!this.state.tokenApproved && this.state.action === 'deposit' && !this.state.showETHWrapperEnabled && !isDepositDisabled) ? (\n                              <DashboardCard\n                                isDisabled={isDepositDisabled}\n                                cardProps={{\n                                  p: 3,\n                                  mt: 3\n                                }}\n                              >\n                                {\n                                  this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                                    <Flex\n                                      flexDirection={'column'}\n                                    >\n                                      <TxProgressBar\n                                        {...this.props}\n                                        waitText={`Approve estimated in`}\n                                        endMessage={`Finalizing approve request...`}\n                                        hash={this.state.processing['approve'].txHash}\n                                        cancelTransaction={this.cancelTransaction.bind(this)}\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'LockOpen'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={3}\n                                        fontSize={2}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        {\n                                          this.state.depositCurveEnabled ?\n                                            `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                            : useMetaTx ?\n                                              `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                            :\n                                              `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                        }\n                                      </Text>\n                                      <RoundButton\n                                        buttonProps={{\n                                          mt: 3,\n                                          width: [1, 1 / 2]\n                                        }}\n                                        handleClick={this.approveToken.bind(this)}\n                                      >\n                                        Approve\n                                      </RoundButton>\n                                    </Flex>\n                                  )\n                                }\n                              </DashboardCard>\n                            ) : (!showBuyFlow && canPerformAction) && (\n                              !this.state.processing[this.state.action].loading ? (\n                                <Flex\n                                  mt={2}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    showActionFlow && (\n                                      <Flex\n                                        mb={3}\n                                        width={1}\n                                        flexDirection={'column'}\n                                      >\n                                        {\n                                          (totalBalance || this.props.tokenFeesPercentage) && (\n                                            <Box\n                                              mb={1}\n                                              width={1}\n                                            >\n                                              {\n                                                this.state.showMaxSlippage && showCurveSlippage && (\n                                                  <Box\n                                                    mb={2}\n                                                    width={1}\n                                                  >\n                                                    <Flex\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                    >\n                                                      <Text>\n                                                        Choose max slippage:\n                                                    </Text>\n                                                      <Tooltip\n                                                        placement={'top'}\n                                                        message={`Max additional slippage on top of the one shown below`}\n                                                      >\n                                                        <Icon\n                                                          ml={1}\n                                                          size={'1em'}\n                                                          color={'cellTitle'}\n                                                          name={\"InfoOutline\"}\n                                                        />\n                                                      </Tooltip>\n                                                    </Flex>\n                                                    <Flex\n                                                      mt={2}\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                      justifyContent={'space-between'}\n                                                    >\n                                                      {\n                                                        [0.2, 0.5, 1, 5].map(slippage => (\n                                                          <FastBalanceSelector\n                                                            cardProps={{\n                                                              p: 1\n                                                            }}\n                                                            textProps={{\n                                                              fontSize: 1\n                                                            }}\n                                                            percentage={slippage}\n                                                            key={`selector_${slippage}`}\n                                                            onMouseDown={() => this.setMaxSlippage(slippage)}\n                                                            isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                          />\n                                                        ))\n                                                      }\n                                                    </Flex>\n                                                  </Box>\n                                                )\n                                              }\n                                              <Flex\n                                                width={1}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  showCurveSlippage ? (\n                                                    <Flex\n                                                      width={1}\n                                                      maxWidth={'50%'}\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                    >\n                                                      <Text\n                                                        fontSize={1}\n                                                        fontWeight={3}\n                                                        textAlign={'right'}\n                                                        style={{\n                                                          whiteSpace: 'nowrap'\n                                                        }}\n                                                        color={this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed}\n                                                      >\n                                                        {\n                                                          parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                            'No Slippage'\n                                                            : `${this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: '} ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                        }\n                                                      </Text>\n                                                      <Tooltip\n                                                        placement={'top'}\n                                                        message={this.functionsUtil.getGlobalConfig(['messages', 'curveBonusSlippage'])}\n                                                      >\n                                                        <Icon\n                                                          ml={1}\n                                                          size={'1em'}\n                                                          color={'cellTitle'}\n                                                          name={\"InfoOutline\"}\n                                                        />\n                                                      </Tooltip>\n                                                      <Link\n                                                        ml={1}\n                                                        color={'copyColor'}\n                                                        hoverColor={'primary'}\n                                                        onClick={this.showMaxSlippage}\n                                                      >\n                                                        change\n                                                    </Link>\n                                                    </Flex>\n                                                  ) : this.props.tokenFeesPercentage && (\n                                                    <Flex\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                    >\n                                                      <Text\n                                                        fontSize={1}\n                                                        fontWeight={3}\n                                                        color={'dark-gray'}\n                                                        textAlign={'right'}\n                                                        hoverColor={'copyColor'}\n                                                      >\n                                                        Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                                    </Text>\n                                                      <Tooltip\n                                                        placement={'top'}\n                                                        message={this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])}\n                                                      >\n                                                        <Icon\n                                                          ml={1}\n                                                          size={'1em'}\n                                                          color={'cellTitle'}\n                                                          name={\"InfoOutline\"}\n                                                        />\n                                                      </Tooltip>\n                                                    </Flex>\n                                                  )\n                                                }\n                                                {\n                                                  totalBalance && (\n                                                    <Link\n                                                      fontSize={1}\n                                                      fontWeight={3}\n                                                      color={'dark-gray'}\n                                                      textAlign={'right'}\n                                                      hoverColor={'copyColor'}\n                                                      onClick={(e) => this.setFastBalanceSelector(100)}\n                                                    >\n                                                      {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                                    </Link>\n                                                  )\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Input\n                                          min={0}\n                                          border={0}\n                                          type={\"number\"}\n                                          required={true}\n                                          height={'3.4em'}\n                                          fontWeight={500}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          boxShadow={'none !important'}\n                                          placeholder={`Insert amount`}\n                                          onChange={this.changeInputValue.bind(this)}\n                                          value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                        />\n                                        <Flex\n                                          mt={2}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                          {\n                                            [25, 50, 75, 100].map(percentage => (\n                                              <FastBalanceSelector\n                                                percentage={percentage}\n                                                key={`selector_${percentage}`}\n                                                onMouseDown={() => this.setFastBalanceSelector(percentage)}\n                                                isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                              />\n                                            ))\n                                          }\n                                        </Flex>\n                                      </Flex>\n                                    )\n                                  }\n                                  {\n                                    canPerformAction && (\n                                      <Flex\n                                        justifyContent={'center'}\n                                        mt={redeemGovTokens ? 2 : 0}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            width: 'auto',\n                                            minWidth: [1, 1 / 2],\n                                            style: {\n                                              textTransform: 'capitalize'\n                                            },\n                                            disabled: this.state.buttonDisabled\n                                          }}\n                                          handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this)}\n                                        >\n                                          {this.state.action}{redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/}\n                                        </RoundButton>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              ) : this.state.loadingErc20ForwarderTx ? (\n                                <Flex\n                                  mt={3}\n                                  flexDirection={'column'}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection: 'row'\n                                    }}\n                                    loaderProps={{\n                                      size: '25px',\n                                    }}\n                                    textProps={{\n                                      ml: 2\n                                    }}\n                                    text={this.state.erc20ForwarderTx ? (this.state.signedParameters ? 'Please Sign the Transaction...' : 'Please Sign the Permit...') : 'Calculating transaction fees...'}\n                                  />\n                                </Flex>\n                              ) : this.state.erc20ForwarderTx ? (\n                                <DashboardCard\n                                  cardProps={{\n                                    p: 3,\n                                    mt: 3,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                  }}\n                                >\n                                  <Text\n                                    mb={2}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The required gas fee to perform the {this.state.action} is <strong>{this.state.erc20ForwarderTx.cost} {this.props.selectedToken}</strong>\n                                  </Text>\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        mx: 2,\n                                        py: 2,\n                                        px: [2, 3],\n                                        width: 0.40,\n                                        onMouseDown: () => {\n                                          this.executeAction()\n                                        }\n                                      }}\n                                      isInteractive={true}\n                                    >\n                                      <Flex\n                                        my={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'center'}\n                                      >\n                                        <Flex\n                                          mr={2}\n                                          alignItems={'center'}\n                                          justifyContent={'center'}\n                                        >\n                                          <Icon\n                                            align={'center'}\n                                            color={'#00b84a'}\n                                            name={'CheckCircle'}\n                                            size={this.props.isMobile ? '1em' : '1.8em'}\n                                          />\n                                        </Flex>\n                                        <Text\n                                          fontWeight={3}\n                                          fontSize={[2, 3]}\n                                        >\n                                          Confirm\n                                      </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                    <DashboardCard\n                                      cardProps={{\n                                        mx: 2,\n                                        py: 2,\n                                        px: [2, 3],\n                                        width: 0.40,\n                                        onMouseDown: () => {\n                                          this.cancelTransaction();\n                                        }\n                                      }}\n                                      isInteractive={true}\n                                    >\n                                      <Flex\n                                        my={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'center'}\n                                      >\n                                        <Flex\n                                          mr={2}\n                                          alignItems={'center'}\n                                          justifyContent={'center'}\n                                        >\n                                          <Icon\n                                            name={'Cancel'}\n                                            align={'center'}\n                                            color={'#e13636'}\n                                            size={this.props.isMobile ? '1em' : '1.8em'}\n                                          />\n                                        </Flex>\n                                        <Text\n                                          fontWeight={3}\n                                          fontSize={[2, 3]}\n                                        >\n                                          Decline\n                                      </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </Flex>\n                                </DashboardCard>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TxProgressBar\n                                    {...this.props}\n                                    cancelTransaction={this.cancelTransaction.bind(this)}\n                                    hash={this.state.processing[this.state.action].txHash}\n                                    endMessage={`Finalizing ${this.state.action} request...`}\n                                    waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                                  />\n                                </Flex>\n                              )\n                            )\n                          }\n                        </Box>\n                      )\n                    ) : (\n                      <Flex\n                        mt={4}\n                        flexDirection={'column'}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection: 'row'\n                          }}\n                          loaderProps={{\n                            size: '30px'\n                          }}\n                          textProps={{\n                            ml: 2\n                          }}\n                          text={'Loading asset info...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Migrate>\n              )\n          }\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow ? (\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n          ) : showPolygonBridge && (\n            <Flex\n              mt={3}\n              width={[1,'35em']}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Image\n                    height={'2em'}\n                    src={polygonBridgeInfo.image}\n                  />\n                  <Text\n                    mt={1}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    <strong>You don't have enough {buyToken} in your wallet!</strong><br />Use the {polygonBridgeInfo.label} to transfer your {buyToken} in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={ e => this.props.goToSection(`tools/${polygonBridgeInfo.route}/${buyToken}`)}\n                  >\n                    Deposit {buyToken}\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n        }\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        height:'45px',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n\n    if (!tokenApy){\n      return false;\n    }\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(this.props.tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.props.tokenApy ? `${this.props.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                border={0}\n                type={\"number\"}\n                required={true}\n                fontWeight={500}\n                textAlign={'center'}\n                height={['3em','3.4em']}\n                boxShadow={'none !important'}\n                max={this.state.maxInputValue}\n                backgroundColor={'cardBgHover'}\n                onChange={this.changeInputValue.bind(this)}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Icon, Text } from \"rimble-ui\";\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenApy:{},\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    idleTokenPrice:{},\n    userHasFunds:false,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false,\n    govTokensUserBalances:{}\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n\n    if (!this.props.account || !this.props.contractsInitialized){\n      return this.setState({\n        userHasFunds:false\n      });\n    }\n\n    const newState = {...this.state};\n    // await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n    const token = this.props.selectedToken;\n    const tokenConfig = this.props.availableTokens[token];\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[token] = tokenConfig;\n\n    const [\n      tokenFeesPercentage,\n      idleTokenPrice,\n      tokenApy,\n      tokenBalance,\n      tokenFees,\n      idleTokenBalance,\n      tokenApproved,\n      govTokensUserBalances,\n      govTokensBalance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenFees(tokenConfig),\n      this.functionsUtil.getIdleTokenPrice(tokenConfig),\n      this.functionsUtil.getTokenApy(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(token,this.props.account),\n      this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n      this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null,null),\n      this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI',false)\n    ]);\n\n    newState.tokenFees[token] = tokenFees;\n    newState.tokenBalance[token] = tokenBalance;\n    newState.tokenApproved[token] = tokenApproved;\n    newState.idleTokenPrice[token] = idleTokenPrice;\n    newState.idleTokenBalance[token] = idleTokenBalance;\n    newState.govTokensBalance[token] = govTokensBalance;\n    newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n    newState.govTokensUserBalances[token] = govTokensUserBalances;\n    newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n    newState.tokenApy[token] = tokenApy && !tokenApy.isNaN() ? tokenApy : null;\n    newState.redeemableBalance[token] = idleTokenBalance && idleTokenPrice ? idleTokenBalance.times(idleTokenPrice) : this.functionsUtil.BNify(0);\n    // });\n\n    newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n    // console.log('govTokensBalance',newState.govTokensBalance);\n    // console.log('availableGovTokens',newState.availableGovTokens);\n    // console.log('govTokensUserBalances',newState.govTokensUserBalances);\n\n    newState.componentMounted = true;\n    newState.userHasFunds = this.props.account && newState.idleTokenBalance[token] && this.functionsUtil.BNify(newState.idleTokenBalance[token]).gt(0);\n\n    // console.log('loadTokensInfo',this.props.account,this.props.contractsInitialized,newState);\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n    window.loadTokensInfo = this.loadTokensInfo.bind(this);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    if (accountChanged || transactionsChanged || availableTokensChanged || selectedTokenChanged){\n      // console.log('AssetPage - availableTokensChanged',availableTokensChanged);\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              {...this.props}\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          (\n            <>\n              <Flex\n                width={1}\n              >\n                <DepositRedeem\n                  {...this.props}\n                  tokenFees={this.state.tokenFees[this.props.selectedToken]}\n                  tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n                  tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n                  govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n                  idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n                  redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n                  tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n                  govTokensUserBalances={this.state.govTokensUserBalances[this.props.selectedToken]}\n                />\n              </Flex>\n              {\n                this.state.userHasFunds && nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && Object.keys(nexusMutualConfig.props.availableTokens).includes(this.props.tokenConfig.idle.token) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      titleProps={{\n                        mb:3,\n                        mt:[3,4],\n                      }}\n                      title={'Coverage'}\n                      availableTokens={[this.props.tokenConfig.idle.token]}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        id={'no-active-cover'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:[3,4],\n                            width:[1,'auto'],\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              my={[0,2]}\n                              size={'3em'}\n                              name={nexusMutualConfig.icon}\n                            />\n                            <Text\n                              mb={1}\n                              fontSize={[2,3]}\n                              fontWeight={500}\n                              textAlign={'center'}\n                            >\n                              You don't have an active coverage\n                            </Text>\n                            <Text\n                              mb={2}\n                              color={'link'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                              textAlign={'center'}\n                            >\n                              {nexusMutualConfig.desc}\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:1,\n                                width:'auto',\n                                minHeight:'40px',\n                                size:this.props.isMobile ? 'small' : 'medium'\n                              }}\n                              handleClick={ e => this.props.goToSection(`tools/${nexusMutualConfig.route}/deposit/${this.props.tokenConfig.idle.token}`) }\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'center'}\n                              >\n                                <Text\n                                  color={'white'}\n                                  fontSize={[1,2]}\n                                  fontWeight={500}\n                                >\n                                  Get Covered\n                                </Text>\n                                <Icon\n                                  ml={1}\n                                  size={'1.3em'}\n                                  name={'KeyboardArrowRight'}\n                                />\n                              </Flex>\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </ActiveCoverages>\n                  </Flex>\n                )\n              }\n              {\n                this.state.userHasFunds && this.props.account && (\n                  <Flex\n                    mb={[0,4]}\n                    width={1}\n                    flexDirection={'column'}\n                    id={'funds-overview-container'}\n                  >\n                    <Title my={[3,4]}>Funds Overview</Title>\n                    <FundsOverview\n                      {...this.props}\n                      tokenFees={this.state.tokenFees[this.props.selectedToken]}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.state.availableGovTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.30,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={this.state.availableGovTokens}\n                    />\n                  </Flex>\n              }\n              {\n              this.props.account && this.state.tokenApy[this.props.selectedToken] && \n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  flexDirection={'column'}\n                  id={'estimated-earnings-container'}\n                >\n                  <Title my={[3,4]}>Estimated earnings</Title>\n                  <EstimatedEarnings\n                    {...this.props}\n                    tokenApy={this.state.tokenApy[this.props.selectedToken]}\n                  />\n                </Flex>\n              }\n              {\n              this.props.account && \n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  flexDirection={'column'}\n                  id={'transactions-container'}\n                >\n                  <Title my={[3,4]}>Transactions</Title>\n                  <TransactionsList\n                    {...this.props}\n                    enabledTokens={[this.props.selectedToken]}\n                    cols={[\n                      {\n                        title: this.props.isMobile ? '' : 'HASH',\n                        props:{\n                          width:[0.15,0.24]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:[0,2]\n                            }\n                          },\n                          {\n                            name:'hash',\n                            mobile:false\n                          }\n                        ]\n                      },\n                      {\n                        title:'ACTION',\n                        mobile:false,\n                        props:{\n                          width:0.15,\n                        },\n                        fields:[\n                          {\n                            name:'action'\n                          }\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        props:{\n                          width:[0.32,0.23],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.18,0.22],\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2]\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                      {\n                        title:'AMOUNT',\n                        props:{\n                          width:0.19,\n                        },\n                        fields:[\n                          {\n                            name:'amount'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ASSET',\n                        props:{\n                          width:[0.15,0.20],\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:[0,2],\n                              height:['1.4em','1.6em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          },\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              }\n            </>\n          )\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Link } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass BetaModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.functionsUtil.setLocalStorage('betaApproved',true);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Beta Version'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                You're about to enter Idle Finance Beta Dashboard – this is the place where several un-audited and risky features are being tested!<br />Please use at your own risk, or visit the official website at <Link fontSize={2} mainColor={'primary'} hoverColor={'primary'} href={this.functionsUtil.getGlobalConfig(['baseURL'])}>{this.functionsUtil.getGlobalConfig(['baseURL'])}</Link>.\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Continue Anyway\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BetaModal;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                {...this.props}\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport ExtLink from '../../ExtLink/ExtLink.js';\nimport { Text, Modal, Flex, Link } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass PolygonModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.functionsUtil.setLocalStorage('polygonApproved',true);\n    this.props.closeModal();\n  }\n\n  render() {\n    const polygonBridgeInfo = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'2em'}\n            title={'Welcome to Idle <> Polygon'}\n            icon={'images/protocols/polygon.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                You're about to enter Idle Finance in the Polygon Network, make sure to have some <ExtLink color={'link'} fontSize={2} href={this.functionsUtil.getEtherscanAddressUrl(this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.currentNetwork.baseToken,'address']))}>{this.props.currentNetwork.baseToken}</ExtLink> tokens in your wallet to send your transactions! Also you can use our <Link color={'link'} fontSize={2} mainColor={'link'} onClick={ e => this.props.goToSection(`tools/${polygonBridgeInfo.route}/${this.props.currentNetwork.baseToken}`)}>{polygonBridgeInfo.label}</Link> to transfer your tokens from Mainnet to Polygon.<br />If you are not confident with this just switch to Mainnet using your wallet provider.\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Let Me In\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default PolygonModal;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        px={3}\n                        py={4}\n                        required\n                        width={1}\n                        border={0}\n                        fontSize={3}\n                        type={\"email\"}\n                        name={\"EMAIL\"}\n                        outline={'none'}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        textAlign={['center','left']}\n                        className={header_styles.input}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            type={'primary'}\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                            }}\n                            handleClick={ e => this.migrate(token,strategy) }\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport ExtLink from '../../ExtLink/ExtLink.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass RiskAdjustedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            icon={'images/warning.svg'}\n            title={'Risk Adjusted Dismissed'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The Risk Adjusted strategy has been dismissed after the execution of <ExtLink fontSize={2} href={this.functionsUtil.getAppUrl('#/governance/proposals/14')}>IIP-14</ExtLink> on the 13th October 2021. An incentive program has been released to let users migrate their funds in the <ExtLink fontSize={2} href={'https://beta.idle.finance/#/dashboard/tranches/senior/idle'}>Senior Tranche</ExtLink> in order to keep a similar risk profile as the Risk-Adjusted strategy. Read the <ExtLink fontSize={2} href={'https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673'}>Governance Forum Post</ExtLink> for further information about the migration program.\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default RiskAdjustedModal;","import React, { Component } from 'react';\nimport styles from './Dashboard.module.scss';\nimport FlashNews from '../FlashNews/FlashNews';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport Swipeable from '../utilities/components/Swipeable';\nimport BetaModal from \"../utilities/components/BetaModal\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport PolygonModal from \"../utilities/components/PolygonModal\";\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\nimport RiskAdjustedModal from \"../utilities/components/RiskAdjustedModal\";\n\nclass Dashboard extends Component {\n  state = {\n    menu: [],\n    baseRoute: null,\n    clickEvent: null,\n    activeModal: null,\n    menuOpened: false,\n    currentRoute: null,\n    pageComponent: null,\n    currentSection: null,\n    currentNetwork: null,\n    selectedSection: null,\n    tokensToMigrate: null,\n    showResetButton: false,\n    selectedSubsection: null,\n    pageComponentProps: null,\n    oldIdleTokensToMigrate: null,\n    protocolsTokensBalances: null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const extraicons = this.functionsUtil.getGlobalConfig(['extraicons']);\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']);\n\n    const menu = [];\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    Object.keys(strategies).filter( s => (!strategies[s].comingSoon && (!strategies[s].availableNetworks || strategies[s].availableNetworks.includes(currentNetwork.id)) && (!strategies[s].enabledEnvs.length || strategies[s].enabledEnvs.includes(this.props.currentEnv)))).forEach(strategy => {\n      const strategyInfo = strategies[strategy];\n      const imageInfo = extraicons[strategy];\n      menu.push({\n        submenu: [],\n        color: '#fff',\n        selected: false,\n        image: imageInfo.icon,\n        label: strategyInfo.title,\n        bgColor: strategyInfo.color,\n        route: baseRoute + '/' + strategy,\n        visible: strategyInfo.visible,\n        imageDark: imageInfo.iconDark,\n        component: strategyInfo.component,\n        imageInactive: imageInfo.iconInactive,\n        imageInactiveDark: imageInfo.iconInactiveDark\n      });\n    });\n\n    // Add Stake Polygon\n    const stakePolygonConfig = this.functionsUtil.getGlobalConfig(['tools', 'stakePolygon']);\n    if (stakePolygonConfig.enabled && (!stakePolygonConfig.availableNetworks || stakePolygonConfig.availableNetworks.includes(currentNetwork.id))) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Stake',\n          selected: false,\n          component: Utils,\n          color: 'dark-gray',\n          route: `${baseRoute}/stake`,\n          image: extraicons['stake'].icon,\n          componentProps: {\n            showBreadCrumb: false,\n            toolProps: stakePolygonConfig.props,\n            selectedSubsection: stakePolygonConfig\n          },\n          imageDark: extraicons['stake'].iconDark,\n          bgColor: this.props.theme.colors.primary,\n          imageInactive: extraicons['stake'].iconInactive,\n          imageInactiveDark: extraicons['stake'].iconInactiveDark,\n        }\n      );\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled) {\n      const curveParams = Object.assign({\n        submenu: [],\n        selected: false,\n        component: CurveStrategy,\n      }, curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stake\n    const stakeConfig = this.functionsUtil.getGlobalConfig(['tools', 'stake']);\n    if (stakeConfig.enabled && (!stakeConfig.availableNetworks || stakeConfig.availableNetworks.includes(currentNetwork.id))) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Stake',\n          selected: false,\n          color: 'dark-gray',\n          route: `${baseRoute}/stake`,\n          image: extraicons['stake'].icon,\n          imageDark: extraicons['stake'].iconDark,\n          bgColor: this.props.theme.colors.primary,\n          imageInactive: extraicons['stake'].iconInactive,\n          imageInactiveDark: extraicons['stake'].iconInactiveDark,\n          component: Utils,\n          componentProps: {\n            showBreadCrumb: false,\n            toolProps: stakeConfig.props,\n            selectedSubsection: stakeConfig\n          },\n        }\n      );\n    }\n\n    // Add Gauges\n    const gaugesConfig = this.functionsUtil.getGlobalConfig(['tools', 'gauges']);\n    if (gaugesConfig.enabled && (!gaugesConfig.availableNetworks || gaugesConfig.availableNetworks.includes(currentNetwork.id))) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Gauges',\n          selected: false,\n          color: 'dark-gray',\n          route: `${baseRoute}/gauges`,\n          image: extraicons['gauges'].icon,\n          bgColor: this.props.theme.colors.primary,\n          imageDark: extraicons['gauges'].iconDark,\n          imageInactive: extraicons['gauges'].iconInactive,\n          imageInactiveDark: extraicons['gauges'].iconInactiveDark,\n          component: Utils,\n          componentProps: {\n            showBreadCrumb: false,\n            toolProps: gaugesConfig.props,\n            selectedSubsection: gaugesConfig\n          },\n        }\n      );\n    }\n\n    const statsInfo = this.functionsUtil.getGlobalConfig(['stats']);\n    if (!statsInfo.availableNetworks || statsInfo.availableNetworks.includes(currentNetwork.id)) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Stats',\n          selected: false,\n          component: Stats,\n          bgColor: '#21f36b',\n          color: 'dark-gray',\n          route: `${baseRoute}/stats`,\n          image: extraicons['stats'].icon,\n          imageDark: extraicons['stats'].iconDark,\n          imageInactive: extraicons['stats'].iconInactive,\n          imageInactiveDark: extraicons['stats'].iconInactiveDark,\n        }\n      );\n    }\n\n    // Add tools\n    menu.push(\n      {\n        label: 'Tools',\n        selected: false,\n        component: Utils,\n        color: 'dark-gray',\n        route: `${baseRoute}/tools`,\n        image: extraicons['tools'].icon,\n        imageDark: extraicons['tools'].iconDark,\n        bgColor: this.props.theme.colors.primary,\n        imageInactive: extraicons['tools'].iconInactive,\n        imageInactiveDark: extraicons['tools'].iconInactiveDark,\n        submenu: Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter(tool => (tool.enabled && (!tool.availableNetworks || tool.availableNetworks.includes(currentNetwork.id))))\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu: [],\n        mobile: false,\n        label: 'Forum',\n        selected: false,\n        component: null,\n        color: 'dark-gray',\n        bgColor: '#ff0000',\n        isExternalLink: true,\n        image: extraicons['forum'].icon,\n        imageDark: extraicons['forum'].iconDark,\n        imageInactive: extraicons['forum'].iconInactive,\n        imageInactiveDark: extraicons['forum'].iconInactiveDark,\n        route: this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute,\n      currentNetwork\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle, modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    }, () => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n\n    if (!this.props.networkInitialized) {\n      return;\n    }\n\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;// this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n    let pageComponentProps = null;\n\n    // Set strategy\n    if (params.section) {\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n      const param3 = params.param3;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && (Object.keys(this.props.availableStrategies).includes(param1.toLowerCase()) || param1==='tranches');\n\n      if (section_is_strategy || param1_is_strategy) {\n\n        if (!section_is_strategy) {\n          currentRoute += '/' + currentSection;\n        }\n\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/' + selectedStrategy;\n        \n        // Set token\n        const param1_is_token = param1 === \"tranches\" ? null : param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param1 === \"tranches\" ? null : param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n\n        if (param1_is_token || param2_is_token) {\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/' + selectedToken;\n\n          if (section_is_strategy) {\n            pageComponent = AssetPage;\n          }\n        } else if (param1===\"tranches\") {\n          selectedToken=params.param3\n          currentRoute+='/'+param2+'/'+param3;\n        }\n      } else {\n        currentRoute += '/' + params.section;\n\n        if (params.param1 && params.param1.length) {\n          currentRoute += '/' + params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute + '/' + params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || (!m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase())) {\n        m.selected = true;\n        if (pageComponent === null) {\n          pageComponent = m.component;\n          pageComponentProps = m.componentProps;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route + '/' + subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()) {\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null) {\n              if (subm.component) {\n                pageComponent = subm.component;\n                pageComponentProps = m.componentProps;\n              } else {\n                pageComponent = m.component;\n                pageComponentProps = m.componentProps;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected) {\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected) {\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection(menu[0].route);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    if(selectedStrategy===\"tranches\" && currentSection===\"stats\") {\n      // console.log(\"Argss\",selectedStrategy,selectedToken,params.param2)\n      await this.props.setStrategyToken(selectedStrategy,selectedToken,params.param2);\n    } else {\n      await this.props.setStrategyToken(selectedStrategy, selectedToken);\n    }\n\n    // Send GA pageview\n    this.functionsUtil.sendGoogleAnalyticsPageview(currentRoute);\n\n    const newState = {\n      menu,\n      params,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      pageComponentProps,\n      selectedSubsection\n    };\n\n    await this.setState(newState);\n\n    return newState;\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.props.setCurrentSection('dashboard');\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized) {\n        this.setState({\n          showResetButton: true\n        });\n      }\n    }, 60000);\n\n    if (!this.props.web3) {\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized) {\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized) {\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n\n    const viewOnly = this.props.connectorName === 'custom';\n    if (!viewOnly) {\n      this.checkModals();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const paramsChanged = JSON.stringify(this.props.match.params) !== JSON.stringify(nextProps.match.params);\n    const strategyChanged = nextProps.selectedStrategy && nextProps.selectedStrategy !== this.props.selectedStrategy;\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    const requiredNetworkChanged = JSON.stringify(nextProps.network.required) !== JSON.stringify(this.props.network.required);\n    const networkChanged = (!this.props.networkInitialized && nextProps.networkInitialized) || requiredNetworkChanged;\n    const accountInizialized = nextProps.accountInizialized && nextProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = nextProps.contractsInitialized && nextProps.contractsInitialized !== this.props.contractsInitialized;\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || contractsChanged || paramsChanged || accountChanged || networkChanged || strategyChanged || availableTokensChanged || requiredNetworkChanged || accountInizialized || contractsInitialized;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    const isMobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (isMobileChanged) {\n      this.setState({\n        menuOpened: false\n      });\n    }\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)) {\n      await this.setState({\n        pageComponent: null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const networkChanged = (!prevProps.networkInitialized && this.props.networkInitialized) || requiredNetworkChanged;\n    if (networkChanged) {\n      await this.loadMenu();\n      this.loadParams();\n    }\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (!viewOnly && (networkChanged || accountChanged || accountInizialized || contractsInitialized || strategyChanged || availableTokensChanged)) {\n      this.checkModals();\n    }\n  }\n\n  async checkModals() {\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens) {\n      return null;\n    }\n\n    await this.checkRiskAdjusted();\n    await this.checkPolygonModal();\n    await this.checkBetaApproval();\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkRiskAdjusted() {\n    const isRiskAdjusted = this.props.selectedStrategy === 'risk';\n    if (isRiskAdjusted) {\n      const activeModal = 'risk';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal\n        });\n        return activeModal;\n      }\n    }\n  }\n\n  async checkPolygonModal() {\n    const isPolygon = this.state.currentNetwork.provider === 'polygon';\n    const isPolygonApproved = this.functionsUtil.getStoredItem('polygonApproved', false, false);\n\n    // console.log('checkPolygonModal',this.state.currentNetwork,isPolygon);\n\n    // Show Beta Warning modal\n    if (isPolygon && !isPolygonApproved) {\n      const activeModal = 'polygon';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal\n        });\n        return activeModal;\n      }\n    }\n  }\n\n  async checkBetaApproval() {\n    const isOriginUrl = this.functionsUtil.checkUrlOrigin();\n    const isPolygon = this.state.currentNetwork.provider === 'polygon';\n    const isBetaApproved = this.functionsUtil.getStoredItem('betaApproved', false, false);\n\n    // Show Beta Warning modal\n    if (!isOriginUrl && !isBetaApproved && !isPolygon && this.state.activeModal === null) {\n      const activeModal = 'beta';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal\n        });\n        return activeModal;\n      }\n    }\n  }\n\n  async checkTokensToMigrate() {\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal', false, null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens || this.state.activeModal !== null) {\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n\n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length > 0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length > 0)) {\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal() {\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized) {\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null) {\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals', 'welcome']);\n\n      if (welcomeModalProps.enabled && localStorage) {\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]) {\n          lastLogin[walletAddress] = {\n            'signedUp': false,\n            'lastTime': currTime\n          };\n          welcomeIsOpen = true;\n          // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime - lastTime) / 1000;\n          welcomeIsOpen = timeFromLastLogin >= welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen) {\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin', JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal) {\n        await this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized) {\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalConfig = this.functionsUtil.getGlobalConfig(['modals', 'migrate']);\n    const migrateModalEnabled = migrateModalConfig.enabled && migrateModalConfig.availableNetworks.includes(this.state.currentNetwork.id);\n\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal', false, null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances) {\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length > 0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      await this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section, isDashboard = true) {\n\n    // Remove dashboard route\n    if (isDashboard) {\n      section = section.replace(this.state.baseRoute + '/', '');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute + '/' + section : section;\n    \n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura', 'Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken) {\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)) {\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()) {\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy);\n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  changeProtocolToken(selectedProtocol, selectedToken) {\n    selectedProtocol = selectedProtocol.toLowerCase();\n    if (Object.keys(this.props.availableTranches).includes(selectedProtocol)&& Object.keys(this.props.availableTranches[selectedProtocol]).includes(selectedToken)) {\n    \n        const routeParts = [];\n\n        // Add section\n        if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()) {\n          routeParts.push(this.state.currentSection);\n        }\n\n        // Add strategy\n        routeParts.push(this.props.selectedStrategy);\n\n        // Add protocol\n        routeParts.push(selectedProtocol);\n        \n        //Add Token\n        routeParts.push(selectedToken);\n\n        this.goToSection(routeParts.join('/'));\n      \n    }\n  }\n\n  propagateClickEvent(clickEvent) {\n    this.setState({\n      clickEvent: clickEvent.target\n    });\n  }\n\n  setMenu(menuOpened) {\n    this.setState({\n      menuOpened\n    });\n  }\n\n  toggleMenu() {\n    const menuOpened = !this.state.menuOpened;\n    this.setMenu(menuOpened);\n  }\n\n  swipeCallback(eventData) {\n    // console.log('swipeCallback',eventData);\n    if (eventData.dir === 'Right') {\n      this.setMenu(true);\n    } else if (eventData.dir === 'Left') {\n      this.setMenu(false);\n    }\n  }\n\n  render() {\n\n    const networkSupported = this.props.network.isSupportedNetwork;\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    const networkCorrect = this.props.network.isCorrectNetwork || !this.props.account;\n    const networkInitialized = this.props.networkInitialized && this.props.network.current.id && this.props.network.required.id;\n\n    if (!this.props.availableStrategies){\n      return (\n        <Flex\n          width={1}\n          minHeight={'100vh'}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          backgroundColor={'dashboardBg'}\n        >\n          <FlexLoader\n            textProps={{\n              textSize: 4,\n              fontWeight: 2\n            }}\n            loaderProps={{\n              mb: 3,\n              size: '80px',\n              color: 'primary'\n            }}\n            flexProps={{\n              my: 3,\n              flexDirection: 'column'\n            }}\n            text={''}\n          />\n        </Flex>\n      );\n    }\n\n    // console.log('networkInitialized',this.props.networkInitialized,networkInitialized);\n\n    return (\n      <Swipeable\n        callback={this.swipeCallback.bind(this)}\n      >\n        <Flex\n          height={'100vh'}\n          position={'fixed'}\n          flexDirection={'row'}\n          backgroundColor={'dashboardBg'}\n          className={[this.props.themeMode]}\n          width={this.props.isMobile && this.state.menuOpened ? '180vw' : '100vw'}\n        >\n          <Flex\n            zIndex={1}\n            width={'100%'}\n            height={'100%'}\n            position={'absolute'}\n          >\n            <Flex\n              className={[styles.bg,styles['bg-top-left']]}\n            />\n            <Flex\n              className={[styles.bg,styles['bg-bottom-right']]}\n            />\n            <Flex\n              className={[styles.bg,styles['bg-noise']]}\n            />\n          </Flex>\n          {\n            (!this.props.isMobile || this.state.menuOpened) && (\n              <Flex\n                bottom={0}\n                zIndex={99999}\n                position={'relative'}\n                width={['80vw', 1 / 6]}\n                flexDirection={'column'}\n              >\n                <Card\n                  p={0}\n                  border={0}\n                  boxShadow={0}\n                  width={'auto'}\n                  height={'100vh'}\n                  backgroundColor={'transparent'}\n                >\n                  <DashboardMenu\n                    {...this.props}\n                    menu={this.state.menu}\n                    closeMenu={e => this.setMenu(false)}\n                    goToSection={this.goToSection.bind(this)}\n                  />\n                </Card>\n              </Flex>\n            )\n          }\n          <Flex\n            pl={[0,3]}\n            zIndex={2}\n            minHeight={'70vh'}\n            position={'relative'}\n            width={['100vw', 5 / 6]}\n            flexDirection={\"column\"}\n          >\n            <DashboardHeader\n              menuOpened={this.state.menuOpened}\n              clickEvent={this.state.clickEvent}\n              toggleMenu={this.toggleMenu.bind(this)}\n              goToSection={this.goToSection.bind(this)}\n              {...this.props}\n            />\n            <Flex\n              py={3}\n              mb={0}\n              width={1}\n              pr={[3, 5]}\n              pl={[3, 0]}\n              alignItems={\"center\"}\n              style={{\n                overflowY: 'scroll',\n                overflowX: 'hidden'\n              }}\n              justifyItems={\"center\"}\n              flexDirection={'column'}\n              height={['100vh', '100%']}\n            >\n              {\n                this.props.isDashboard && (\n                  <FlashNews\n                    {...this.props}\n                  />\n                )\n              }\n              {\n                !networkInitialized || !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent || !networkCorrect || !networkSupported ? (\n                  <Flex\n                    width={1}\n                    minHeight={'50vh'}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      networkInitialized && !networkCorrect ? (\n                        <DashboardCard\n                          cardProps={{\n                            p: 3,\n                            mt: 3,\n                            width: [1, 0.35]\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You should be on the <strong>{this.functionsUtil.capitalize(this.props.network.required.name)} network</strong>. You are currently connected to the <strong>{this.functionsUtil.capitalize(this.props.network.current.name)} network</strong>, please switch to the correct network.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={e => this.functionsUtil.addEthereumChain(this.props.network.required.id)}\n                            >\n                              Switch Network\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      ) : networkInitialized && !networkSupported ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                            width:[1,0.35]\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The <strong>{this.functionsUtil.capitalize(this.props.network.current.name)} Network</strong> is not supported, please switch to the correct network.\n                          </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : !this.state.showResetButton ? (\n                        <FlexLoader\n                          textProps={{\n                            textSize: 4,\n                            fontWeight: 2\n                          }}\n                          loaderProps={{\n                            mb: 3,\n                            size: '40px'\n                          }}\n                          flexProps={{\n                            my: 3,\n                            flexDirection: 'column'\n                          }}\n                          text={!this.props.networkInitialized ? 'Loading network...' : (!this.props.accountInizialized ? 'Loading account...' : (!this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...'))}\n                        />\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p: 3,\n                            mt: 3,\n                            width: [1, 0.35]\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt: 3,\n                                width: [1, 1 / 2]\n                              }}\n                              handleClick={this.logout.bind(this)}\n                            >\n                              Logout\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    }\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      PageComponent &&\n                      <PageComponent\n                        {...this.props}\n                        match={{ params: {} }}\n                        urlParams={this.state.params}\n                        changeToken={this.changeToken.bind(this)}\n                        goToSection={this.goToSection.bind(this)}\n                        selectedSection={this.state.selectedSection}\n                        selectedSubsection={this.state.selectedSubsection}\n                        openTooltipModal={this.openTooltipModal.bind(this)}\n                        changeProtocolToken={this.changeProtocolToken.bind(this)}\n                        {...this.state.pageComponentProps}\n                      />\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            this.state.currentNetwork &&\n            <PolygonModal\n              closeModal={this.resetModal}\n              goToSection={this.goToSection.bind(this)}\n              currentNetwork={this.state.currentNetwork}\n              isOpen={this.state.activeModal === 'polygon'}\n            />\n          }\n          <BetaModal\n            closeModal={this.resetModal}\n            isOpen={this.state.activeModal === 'beta'}\n          />\n          <RiskAdjustedModal\n            closeModal={this.resetModal}\n            isOpen={this.state.activeModal === 'risk'}\n          />\n          <UpgradeModal\n            {...this.props}\n            closeModal={this.resetModal}\n            goToSection={this.goToSection.bind(this)}\n            tokensToMigrate={this.state.tokensToMigrate}\n            isOpen={this.state.activeModal === 'upgrade'}\n            oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n          />\n          <MigrateModal\n            {...this.props}\n            closeModal={this.resetModal}\n            goToSection={this.goToSection.bind(this)}\n            isOpen={this.state.activeModal === 'migrate'}\n            protocolsTokensBalances={this.state.protocolsTokensBalances}\n          />\n          <TooltipModal\n            closeModal={this.resetModal}\n            title={this.state.modalTitle}\n            content={this.state.modalContent}\n            isOpen={this.state.activeModal === 'tooltip'}\n          />\n          <WelcomeModal\n            closeModal={this.resetModal}\n            account={this.props.account}\n            simpleID={this.props.simpleID}\n            network={this.props.network.current}\n            tokenName={this.props.selectedToken}\n            initSimpleID={this.props.initSimpleID}\n            baseTokenName={this.props.selectedToken}\n            isOpen={this.state.activeModal === 'welcome'}\n          />\n        </Flex>\n      </Swipeable>\n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}